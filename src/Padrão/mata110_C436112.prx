#INCLUDE "MATA110.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWEVENTVIEWCONSTS.CH"  
#INCLUDE "TOPCONN.CH"

Static aRecSC1 := NIL
static aColsSCX:= NIl
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Descri‡…o ³ PLANO DE MELHORIA CONTINUA                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±± 
±±³ITEM PMC  ³ Responsavel              ³ Data                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³      01  ³ Nereu Humberto Junior    ³ 02/03/2006                      ³±±
±±³      02  ³ Flavio Luiz Vicco        ³ 29/12/2005                      ³±±
±±³      03  ³ Alexandre Inacio Lemes   ³ 11/08/2006                      ³±±
±±³      04  ³ Nereu Humberto Junior    ³ 02/03/2006                      ³±±
±±³      05  ³ Nereu Humberto Junior    ³ 16/02/2006                      ³±±
±±³      06  ³ Nereu Humberto Junior    ³ 16/02/2006                      ³±±
±±³      07  ³ Alexandre Inacio Lemes   ³ 11/08/2006                      ³±±
±±³      08  ³ Ricardo Berti            ³ 14/02/2006                      ³±±
±±³      09  ³ Ricardo Berti            ³ 14/02/2006                      ³±±
±±³      10  ³ Flavio Luiz Vicco  U      ³ 29/12/2005                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MATA110   ³Rev.   ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao manual das solicitacoes de compra      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina permite as operacoes de pesquisa, visualizacao,  ³±±
±±³          ³inclusao, alteracao e exclusao das solicitacoes de compra.   ³±±
±±³          ³A cotacao somente pode ser alterada se e somente se nao hou- ³±±
±±³          ³ver cotacao em aberto ou pedido de compra colocado. Quando ha³±±
±±³          ³pedido de compra a quantidade pode ser alterada desde que a  ³±±
±±³          ³quantidade nao seja inferior ao do pedido de compra.         ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Array contendo as Rotinas a executar do programa      ³
//³ ----------- Elementos contidos por dimensao ------------     ³
//³ 1. Nome a aparecer no cabecalho                              ³
//³ 2. Nome da Rotina associada                                  ³
//³ 3. Usado pela rotina                                         ³
//³ 4. Tipo de Transa‡„o a ser efetuada                          ³
//³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
//³    2 - Simplesmente Mostra os Campos                         ³
//³    3 - Inclui registros no Bancos de Dados                   ³
//³    4 - Altera o registro corrente                            ³
//³    5 - Remove o registro corrente do Banco de Dados          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Function Mata110(xAutoCab,xAutoItens, nOpcAuto,lProj711,lWhenGet,xRatSC,xRatProj)
Local bBlock
Local cFiltraSC1
Local cMt110Fil  := ""
Local aIndexSC1  := {}              
Local aRotinaNew := {}
Local nPos       := 0
Local nX         := 0
Local nRegSC1    := 0
Local lContinua  := .T.
Local aCores     := {}
Local aCoresNew  := {}
Local lAProvSI   := GetNewPar("MV_APROVSI",.F.)
Local cFilQuery	 := ""  
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local cTpCto     := iif ( lPrjCni, GETMV("MV_TPSCCT"), '')  
//---------------------------------------------------------
// Carregado do ponto de entrada M110STTS - 25/05/11 - FWS
//---------------------------------------------------------
Local _nTotSC := 0     //_f110TotSC(_cNumSC)
Local ntotsc1 := 0
//-------------------------------------------------------

// Variaveis criada para integracao com MRP - NAO REMOVER
DEFAULT lProj711    := .F.
DEFAULT lWhenGet	:= .F.
PRIVATE lProjM711	:= If(ValType(lProj711)== "L",lProj711,.F.)
PRIVATE aRotina		:= MenuDef() // ALTERADO PARA SIGAGSP
PRIVATE cCadastro	:= OemtoAnsi(STR0011)	//"Solicita‡„o de Compras"
PRIVATE l110Auto	:= (xAutoCab <> Nil .and. (xAutoItens <> Nil .Or. nOpcAuto==5))
PRIVATE aAutoCab	:= {}
PRIVATE aAutoItens	:= {}
PRIVATE aRatSC  	:= If(xRatSC<>NIL,xRatSC,{})
PRIVATE aRatProj    := If(xRatProj<>NIL,xRatProj,{})
PRIVATE bFiltraBrw	:= {|| Nil}
PRIVATE lCopia      := .F.
PRIVATE l110Alt     := .T.
PRIVATE lGrade      := MaGrade()
PRIVATE lGatilha    := .T.  // Para preencher aCols em funcoes chamadas da validacao (X3_VALID)    
PRIVATE cReqSol 
PRIVATE cCusto		:= "" 
PRIVATE cNumCt
PRIVATE cNumRev		:= ""             
PRIVATE cTpSC
PRIVATE lMata712		:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ O parametro MV_VLDHEAD e' usado para validar ou nao o aCols          ³
//³ (uma linha ou todo), a partir das validacoes do aHeader -> VldHead() ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE lVldHead	:= GetNewPar( "MV_VLDHEAD",.T. )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Variaveis declaradas para guardar as informacoes do rateio qdo for alteracao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE nFAltRat    := 0
PRIVATE nFAltRat2   := 0
PRIVATE aCPHSCX     := {}
PRIVATE ACPISCX     := {}

If SC1->(FieldPos("C1_ACCPROC")) > 0
	aAdd(aCores,{'C1_ACCPROC =="1" .And. C1_PEDIDO == Space(Len(C1_PEDIDO))','PMSEDT3'	})	//"Solicitação Pendente (MarketPlace)
	aAdd(aCores,{'C1_ACCPROC =="1" .And. C1_PEDIDO == Space(Len(C1_PEDIDO)) .And. C1_COTACAO <> Space(Len(C1_COTACAO)) ','PMSEDT2'	})	//"Solicitação em Processo de Cotação (MarketPlace)
EndIf
If SC1->(FieldPos("C1_COMPRAC")) > 0
	aAdd(aCores,{"C1_RESIDUO == 'S' .And. C1_COMPRAC == '1'","BR_VIOLETA"}) //-- SC em Compra Centralizada
EndIf
If lPrjCni
	aAdd(aCores,{'Empty(C1_RESIDUO) .And. C1_XCLASSI .And. C1_APROV == "B"','BR_VERDE_ESCURO'})
	//-- Integracao com o modulo de Gestao de Contratos 
	aAdd(aCores,{'Empty(C1_RESIDUO) .And. C1_XSTGCT == "1" .And. C1_APROV $ " ,L" .And. C1_XTIPOSC == "'+ cTpCto + '"','metas_cima_16'})	
	aAdd(aCores,{'Empty(C1_RESIDUO) .And. C1_XSTGCT == "2" .And. C1_APROV $ " ,L" .And. C1_XTIPOSC == "'+ cTpCto + '"','metas_baixo_16'})	
EndIf
aAdd(aCores,{'C1_FLAGGCT == "1" .And. C1_QUJE < C1_QUANT','BR_MARROM'}) //-- SC Totalmente Atendida pelo SIGAGCT
If SC1->(FieldPos("C1_TIPO"))>0
	aAdd(aCores,{'C1_TIPO == 2','BR_BRANCO'	}) //-- Solicitacao de Importacao	
Endif		
aAdd(aCores,{'!Empty(C1_RESIDUO)','BR_PRETO'})	//-- SC Eliminada por Residuo
aAdd(aCores,{'C1_QUJE == C1_QUANT','DISABLE'})	//-- SC com Pedido Colocado
If SC1->(FieldPos("C1_TPSC")) > 0
	aAdd(aCores,{'C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV $ " ,L" .And. C1_TPSC == "2"','LIGHTBLU'}) //Solicitacao para Licitacao
EndIf    
if lPrjCni                                                                              
	aAdd(aCores,{"C1_XTIPOSC <> '" +cTpCto +"' .And. " +'C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV $ " ,L"','ENABLE'}) //SC em Aberto
Else
	aAdd(aCores,{'C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV $ " ,L"','ENABLE'})	//SC em Aberto
EndIf
If lAprovSI     	
	aAdd(aCores,{'C1_QUJE == 0 .And. (C1_COTACAO == Space(Len(C1_COTACAO)) .Or. C1_COTACAO == "IMPORT") .And. C1_APROV == "R"','BR_LARANJA'})	//SC Rejeitada
	aAdd(aCores,{'C1_QUJE == 0 .And. (C1_COTACAO == Space(Len(C1_COTACAO)) .Or. C1_COTACAO == "IMPORT") .And. C1_APROV == "B"','BR_CINZA'})		//SC Bloqueada
Else
	aAdd(aCores,{'C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV == "R"','BR_LARANJA'})		//SC Rejeitada
	aAdd(aCores,{'C1_QUJE == 0 .And. C1_COTACAO == Space(Len(C1_COTACAO)) .And. C1_APROV == "B"','BR_CINZA'})		//SC Bloqueada
EndIf
aAdd(aCores,{'C1_TPSC != "2" .And. C1_QUJE > 0 .And. C1_COTACAO <> Space(Len(C1_COTACAO)) .And. C1_IMPORT <>"S"','PMSEDT1'})	//SC parcialmente antendida utilizada em cotacao
aAdd(aCores,{'C1_QUJE > 0','BR_AMARELO'})	//SC com Pedido Colocado Parcial                         
aAdd(aCores,{'C1_TPSC == "2" .And. C1_QUJE == 0 .And. !Empty(SC1->C1_CODED)','PMSEDT4'})	//"Solicitação em Processo de Edital" 
aAdd(aCores,{'C1_TPSC != "2" .And. C1_QUJE == 0 .And. C1_COTACAO <> Space(Len(C1_COTACAO)) .And. C1_IMPORT <>"S"','BR_AZUL'})	//SC em Processo de Cotacao
If lAprovSI     	
	aAdd(aCores,{'C1_QUJE == 0 .And. C1_COTACAO <> Space(Len(C1_COTACAO)) .And. C1_IMPORT == "S" .And.C1_APROV $ " ,L"','BR_PINK'})		//SC com Produto Importado
Else
	aAdd(aCores,{'C1_QUJE == 0 .And. C1_COTACAO <> Space(Len(C1_COTACAO)) .And. C1_IMPORT == "S"','BR_PINK'	})	//SC com Produto Importado
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para inclusão de novos itens no menu aRotina³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT110ROT")
	aRotinaNew := ExecBlock("MT110ROT",.F.,.F.,aRotina)
	If ( ValType(aRotinaNew) == "A" )
		aRotina := aClone(aRotinaNew)
	EndIf

EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para alterar cores do Browse do Cadastro    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT110COR")
	aCoresNew := ExecBlock("MT110COR",.F.,.F.,{aCores})
	If ValType(aCoresNew) == "A"
		aCores := aCoresNew
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ VerIfica a permissao do programa em relacao aos modulos      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( AMIIn(02,04,05,06,07,09,10,12,19,34,97,98,44,67,69,72) )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ajusta Dicionarios SX3										   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AjustaSX3()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ajusta Perguntas SX1										   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AjustaSX1()
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ajusta Helps do programa									   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AjustaHlp()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ajusta Consulta SXB 										   |	
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AjustaSXB()
		
	If !( l110Auto )
		SetKey(VK_F12,{|| Pergunte("MTA110",.T.)})
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ mv_par01 - Descricao do Produto   B5_CEME X B5_DESC            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Pergunte("MTA110",.F.)
	dbSelectArea("AFG")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Endereca a funcao de BROWSE                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !( l110Auto ) .Or. lWhenGet
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ VerIfica a existencia de Filtros na mBrowse                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SC1->(dbSetOrder(1))
		If (ExistBlock("MT110FIL"))
			cMt110Fil := ExecBlock("MT110FIL",.f.,.f.)
			If ( ValType(cMt110Fil) == "C" ) .And. !Empty(cMt110Fil)
				cFiltraSC1 := cMt110Fil
			EndIf

			bFiltraBrw 	:= {|| FilBrowse("SC1",@aIndexSC1,@cFiltraSC1) }
			Eval(bFiltraBrw)
		EndIf
		If lWhenGet
			dbSelectArea("SC1")
			If nOpcAuto == 3
				aAutoCab   := xAutoCab
				aAutoItens := xAutoItens
			Else
				aAutoCab := MSArrayXDB(xAutoCab,,nOpcAuto)
				nRegSC1 := SC1->(RecNo())
				If ( !Empty(aAutoCab) )
					For nX := 1 To Len(xAutoItens)
						aadd(aAutoItens,MSArrayXDB(xAutoItens[nX],,nOpcAuto,.T.))
						If Empty(aAutoItens[nX])
							lContinua := .F.
						EndIf
					Next nX
				EndIf
				dbSelectArea("SC1")
				If (SC1->(RecNo()) # nRegSC1)
					SC1->(dbGoTo(nRegSC1))
				EndIf
			EndIf
		EndIf
		If nOpcAuto<>Nil
			nPos := Ascan(aRotina,{|x| x[4]== nOpcAuto})
			If ( nPos # 0 )
				bBlock := &( "{ |x,y,z,k,m| " + aRotina[ nPos,2 ] + "(x,y,z,k,m) }" )
				Eval( bBlock,Alias(),SC1->(Recno()),nPos,Nil,lWhenGet)
			EndIf
		Else
			dbSelectArea("SC1")
			MsSeek(xFilial("SC1"))
			
			If !ExistBlock("MT110FIL")
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ P.E. Utilizacao: Filtro da Mbrowse para ambiente Top         ³
			    //³ - Executado somente se nao utilizar MT110FIL                 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                
				If ExistBlock("MT110QRY")
			    	cFilQuery := AllTrim(ExecBlock("MT110QRY",.F.,.F.))
					If Valtype(cFilQuery) <> "C"
						cFilQuery := ""		
					EndIf
				Else
					If Empty(xFilial('SC1'))
						cFilQuery := "C1_FILIAL = '" + xFilial('SC1')+ "'"
					EndIf                   
				EndIf
			EndIf
			If  Upper(TcSrvType()) == "AS/400" .Or. Upper(TcSrvType()) == "ISERIES"
		   	    //Tratamento especifico para ambiente AS400/iSeries, com a finalidade de filtrar o conteudo da cFilQuery		 
	  	 		mBrowse( 6, 1,22,75,"SC1",,,,,,aCores,,,,,,,,,,,,IIF(!Empty(cFilQuery),cFilQuery, NIL)) 
		   	Else        			   	
			   	mBrowse( 6, 1,22,75,"SC1",,,,,,aCores,,,,,,,,IIF(!Empty(cFilQuery),cFilQuery, NIL))     
		   	EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Finaliza o uso da funcao FilBrowse e retorna os indices padroes.       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !ExistBlock("MT110FIL")
			EndFilBrw("SC1",aIndexSC1)
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Desativa tecla que aciona perguntas                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Set Key VK_F12 To
	Else
		aAutoCab   := xAutoCab
		aAutoItens := xAutoItens
		
		//Verifica se rotina está sendo chamado do programa novo de MRP
		nPos := aScan(aAutoCab,{|x| x[1] == "MRPNOVO"})
		If (nPos > 0 .and. aAutoCab[nPos,2] == "S" )
			lMata712 := .T.
		Else
			lMata712 := .F.
		EndIf
		
		DEFAULT nOpcAuto	:= 3
		If AliasIndic("SCX")
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Valida o array Rateio por CCusto - rotina automatica	       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			lContinua := A110RatAut(aRatSC)
			If lContinua
				If Len(aRatSC) > 0
					ACPISCX:=aClone(aRatSC)
				EndIf
				MBrowseAuto(nOpcAuto,Aclone(aAutoCab),"SC1")
			EndIf
		Else
			MBrowseAuto(nOpcAuto,Aclone(aAutoCab),"SC1")		
		EndIf
	EndIf
EndIf
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Visual³Rev.   ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de visualizacao das solicitacaoes de compra           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo visualizar as solicitacoes de  ³±±
±±³          ³compra utilizando-se uma modelo 2                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Visual(cAlias,nReg,nOpcx)

Local aArea			:= GetArea()
Local aSizeAut		:= MsAdvSize(,.F.)
Local oDlg
Local oGet
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local cSolic 		:= SC1->C1_SOLICIT
Local oSolic
Local oTpOP
Local aObjects		:= {}
Local aInfo 		:= {}
Local aPosGet		:= {}
Local aPosObj		:= {}
Local aBut110		:= {}
Local aButtonUsr    := {}
Local aBtnBack		:= {}
Local aPosObjPE     := {}
Local lNaturez      := ( SC1->(FieldPos("C1_NATUREZ") ) > 0 .And. cPaisLoc <> "BRA")
Local nBack         := NIL
Local cFilEnt       := SC1->C1_FILENT
Local nX            := 1
Local lGspInUseM 	:= If(Type('lGspInUse')=='L', lGspInUse, .F.)
Local lMt110Get     := ExistBlock("MT110GET")
Local lMt110TEL     := ExistBlock("MT110TEL")
Local lTpOp 		:= SuperGetMV("MV_TPOPDOC",.F.,.F.)
Local lGrade	    := MaGrade()
Local aHeadSCX		:= {}
Local lDbm := aliasIndic("DBM")

PRIVATE dA110Data 	:= SC1->C1_EMISSAO
PRIVATE cCodNatu	:= IIf(lNaturez,SC1->C1_NATUREZ,"")
PRIVATE cCCusto     := SC1->C1_CC
PRIVATE cUnidReq    := SC1->C1_UNIDREQ
PRIVATE cCodCompr   := SC1->C1_CODCOMP
PRIVATE cA110Num    := SC1->C1_NUM
PRIVATE cTpOP		:= If(Empty(SC1->C1_TPOP),"F",SC1->C1_TPOP)
PRIVATE aRotina		:= MenuDef()
PRIVATE aHeader   := {}
PRIVATE aCols 		:= {}
PRIVATE aRatAFG     := {}
Private aHdrAFG		:= {}
PRIVATE bPMSDlgSC	:= {||PmsDlgSC(2,ca110Num)}

PRIVATE cDescTp 	:= iif (lPrjCni, Posicione("COL",1,xFilial("COL")+SC1->C1_XTIPOSC,"COL_DESC"),'')
PRIVATE cReqSol	    := iif (lPrjCni, SC1->C1_XSOL   , '') 
PRIVATE cCusto	    := iif (lPrjCni, SC1->C1_CC     , '') 
PRIVATE cNumCT	    := iif (lPrjCni, SC1->C1_XNUMCT , '') 
PRIVATE cNumRev	    := iif (lPrjCni, SC1->C1_XNUMREV, '') 


PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C1_QUANT",,"A110GValid()",,;
  						{ 	{"C1_QUANT" ,.T., {{"C1_QTSEGUM",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2) } }} },;
  							{"C1_ITEM",NIL,NIL},;
							{"C1_DATPRF",NIL,NIL},;
  							{"C1_QTSEGUM",.T., {{"C1_QUANT",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1) }}} } })

aColsSCX	 	:= {} //Inicializando Variável Static
If lPrjCni                         
	cTpSC := SC1->C1_XTIPOSC 
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Guarda o conteudo de N                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type( "N" ) == "N"
	nBack := N
EndIf

If SC1->(FieldPos("C1_TIPO"))>0 .And. SC1->C1_TIPO == 2
	Help(" ",1,"A113TIPO")
	RestArea(aArea)
	Return
EndIf

If A110Monta(2,,,nOpcX)

	aCols := aColsGrade(oGrade, aCols, aHeader, "C1_PRODUTO", "C1_ITEM", "C1_ITEMGRD")

	N := 1

	If IntePms()		// Se usa PMS integrado com o ERP
		aBut110 := {{'PROJETPMS',{||Eval(bPmsDlgSC)},STR0028 + " - <F10>" ,STR0054}}

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Botao para consultar Historico do Produto               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aadd(aBut110,{"S4WB005N",{|| A110ComView() },STR0065,STR0066 })  //Historico de Produtos

	If !AtIsRotina("A110TRACK")
		AAdd(aBut110  ,{ "bmpord1", {|| A110Track() }, OemToAnsi(STR0029), OemToAnsi(STR0037) } )  // "System Tracker"
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Botao para exportar dados para EXCEL                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If FindFunction("RemoteType") .And. RemoteType() == 1
		aAdd(aBut110 ,{PmsBExcel()[1],{|| DlgToExcel({{"CABECALHO","",{RetTitle("C1_NUM") ,RetTitle("C1_SOLICIT"),RetTitle("C1_EMISSAO"),RetTitle("C1_FILENT")},{cA110Num,cSolic ,dA110Data,cFilEnt}},{"GETDADOS","",aHeader,aCols}})},PmsBExcel()[2],PmsBExcel()[3]})
	EndIf
    
    if lPrjCni              
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Insere o botao de rateio financeiro na tela de visualização         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Aadd(aBut110,{'DESTINOS',{|| F641AltRat("MATA110",2) },"Visualizar Rateio Financeiro","Rat.Financ."}) 
	EndIf

	If SuperGetMv("MV_APRSCEC",.F.,.F.) .AND.  lDbm 
		Aadd(aBut110,{"S4WB005N",{|| a120Posic(cAlias,nReg,nOpcX,"SC")},OemToAnsi(STR0110), OemToAnsi(STR0111)})
	Endif
		
	If AliasIndic("SCX")
		aAdd(aBut110,{'S4WB013N',{|| a110RatCC(aHeadSCX,aColsSCX,.F.)},STR0082,STR0083}) //"Rateio por Item da Solicitação"##"Rateio"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta o Array contendo as registros do SCX ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		A110AcoSCX(@aHeadSCX,@aColsSCX)
	EndIf
					
	If ( ExistBlock("MA110BAR") )
		aButtonUsr := ExecBlock("MA110BAR",.F.,.F.,{nOpcx})
		If ( ValType(aButtonUsr) == "A" )
			For nX := 1 To Len(aButtonUsr)
				Aadd(aBut110,aClone(aButtonUsr[nX]))
			Next nX
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada criado para configurar botoes da enchoicebar        ³
	//³ Este PE foi criado porque o PE acima (MA110BAR) nao permite manipular³
	//³ botoes da enchoicebar.                                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock( "MA110BUT" )
		aBtnBack := aClone(aBut110)
		aBut110 := ExecBlock( "MA110BUT", .F., .F., { nOpcx, aBut110 } )
		If ValType( aBut110 ) # "A"
			aBut110 := aClone(aBtnBack)
		EndIf
	EndIf

	If IntePMS() .And. (!Type("l110Auto") == "L" .Or. !l110Auto)
		SetKey(VK_F10, {|| Eval(bPmsDlgSC)})
	EndIf
    
	if	lPrjCni	
		AAdd( aObjects, { 0,    65, .T., .F. } )
	Else
		AAdd( aObjects, { 0,    55, .T., .F. } )
	EndIf       
	
	AAdd( aObjects, { 100, 100, .T., .T. })
	AAdd( aObjects, { 0,    3, .T., .F. })
	aInfo := { aSizeAut[ 1 ], aSizeAut[ 2 ], aSizeAut[ 3 ], aSizeAut[ 4 ], 2, 2 }
	aPosObj := MsObjSize( aInfo, aObjects )
	If lNaturez     			
		if lPrjCni
			aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,45,105,145,225,265,175,210,235,260}})
		Else
			aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,35,105,145,225,265,167,203,245,270}})
		EndIf					
	Else
		aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,35,105,145,225,265,210,255}})
	EndIf

	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0011)+' - '+OemToAnsi(STR0007) From aSizeAut[7],0 TO aSizeAut[6],aSizeAut[5] OF oMainWnd PIXEL		//"Solicita‡„o de Compras"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de Entrada para Alterar as cordenas da dialog de SCs    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lMt110Get
		aPosObj := If(ValType(aPosObjPE:=ExecBlock("MT110GET",.F.,.F.,{aPosObj,nOpcx}))== "A",aPosObjPE,aPosObj)
	Endif

	// Para a CNI nao precisa da borda, pois como novos campos sao criados via PE, fica desposicionado.
	IF !lPrjCni
	   @ aPosObj[1,1],aPosObj[1,2] TO aPosObj[1,3],aPosObj[1,4] LABEL ""  OF oDlg PIXEL
    ENDIF
    
	@ aPosObj[1,1]+3,aPosGet[1,1] 	SAY OemToAnsi(STR0012) of oDlg PIXEL SIZE 20,09	//"&N£mero"
	@ aPosObj[1,1]+2,aPosGet[1,2] 	MSGET cA110Num  	Picture PesqPict("SC1","C1_NUM") When .F. of oDlg PIXEL SIZE 20,10

	@ aPosObj[1,1]+3,aPosGet[1,3] 	SAY OemToAnsi(STR0013) of oDlg PIXEL SIZE 31,9	//"&Solicitante"
	@ aPosObj[1,1]+2,aPosGet[1,4] 	MSGET oSolic VAR cSolic	Picture PesqPict("SC1","C1_SOLICIT") When .F. SIZE 80,10 of oDlg PIXEL

	@ aPosObj[1,1]+3,aPosGet[1,5] 	SAY OemToAnsi(STR0014) of oDlg PIXEL SIZE 45,9 //"&Data de Emiss„o"
	@ aPosObj[1,1]+2,aPosGet[1,6] 	MSGET dA110Data  	Picture PesqPict("SC1","C1_EMISSAO") When .F. SIZE 45,10 of oDlg PIXEL

	If !lGspInUseM
		If ! __lPyme
			@ aPosObj[1,1]+17,aPosGet[2,1] 	SAY OemToAnsi(STR0016) of oDlg PIXEL		//"&Unid. Requis."
			@ aPosObj[1,1]+16,aPosGet[2,2]	MSGET cUnidReq  	Picture PesqPict("SC1","C1_UNIDREQ") 	When .F. of oDlg PIXEL

			@ aPosObj[1,1]+17,aPosGet[2,3] 	SAY OemToAnsi(STR0017)	of oDlg PIXEL	//"&Cod. Comprador"
			@ aPosObj[1,1]+16,aPosGet[2,4]	MSGET cCodCompr 	Picture PesqPict("SC1","C1_CODCOMP")	When .F. of oDlg PIXEL
		EndIf


		If lNaturez
			@ aPosObj[1,1]+17,aPosGet[2,7]  SAY OemToAnsi(STR0030) OF oDlg PIXEL SIZE 050,015 //"Filial p/ Entrega"
			If FWModeAccess("SC7") == "E"                                                      
				if lPrjCni
					@ aPosObj[1,1]+16,aPosGet[2,8]  MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
					Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 019,006
				Else
					@ aPosObj[1,1]+16,aPosGet[2,8]  MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
					Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 058,006
				EndIf
				
				@ aPosObj[1,1]+17,aPosGet[2,9]  SAY Alltrim(RetTitle("C1_NATUREZ"))	 Of oDlg PIXEL	SIZE 45,10	//"&Cod. Comprador"
				@ aPosObj[1,1]+16,aPosGet[2,10] MSGET cCodNatu F3 CpoRetF3("C1_NATUREZ") Picture PesqPict("SC1","C1_NATUREZ") When .F. Of oDlg PIXEL SIZE 50,10
			Else
				@ aPosObj[1,1]+16,aPosGet[2,8]  MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
					Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 020,006			
				@ aPosObj[1,1]+17,aPosGet[2,9]  SAY Alltrim(RetTitle("C1_NATUREZ"))	 Of oDlg PIXEL	SIZE 45,10	//"&Cod. Comprador"
				@ aPosObj[1,1]+16,aPosGet[2,10] MSGET cCodNatu F3 CpoRetF3("C1_NATUREZ") Picture PesqPict("SC1","C1_NATUREZ") When .F. Of oDlg PIXEL SIZE 50,10					
			EndIf
		Else
			@ aPosObj[1,1]+17,aPosGet[2,7] SAY OemToAnsi(STR0030) OF oDlg PIXEL SIZE 050,015 //"Filial p/ Entrega" 
			
			if lPrjCni
				@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
					Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 019,006
			Else
				@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
					Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 062,006
			EndIf
			
		EndIf

   EndIf
                     
	If lTpOp
		@ aPosObj[1,1]+30,aPosGet[2,1] SAY Alltrim(RetTitle("C1_TPOP")) Of oDlg PIXEL		//Firme ou previsto C1_TPOP		
		@ aPosObj[1,1]+30,aPosGet[2,2] COMBOBOX oTpOP VAR cTpOp ITEMS StrTokArr(x3cbox(),';') When .F. SIZE 100,10 Of oDlg PIXEL	
	EndIf
	
	if lPrjCni
	
   		
	   	@ 42,aPosGet[1,1]  SAY OemToAnsi("Tipo doc.") OF oDlg PIXEL SIZE 038,006  //"Tipo doc."
		@ 41,aPosGet[1,2]  MSGET cTpSC  PICTURE PesqPict("SC1","C1_XTIPOSC") WHEN .F.  OF oDlg PIXEL SIZE 80,10   
		
		@ 42,aPosGet[1,3]  SAY OemToAnsi("Desc. Tipo doc.") OF oDlg PIXEL SIZE 038,006  //"Desc. Tipo doc."
		@ 41,aPosGet[1,4]  MSGET cDescTp WHEN .F. OF oDlg PIXEL SIZE 80,10
	    
	    
		@ 42,aPosGet[1,5]  SAY OemToAnsi("Requisitante SC") OF oDlg PIXEL SIZE 038,006  //"Requisitante SC"
		@ 41,aPosGet[1,6]  MSGET cReqSol  WHEN .F.  OF oDlg PIXEL SIZE 80,10   
		
		@ 56,aPosGet[1,1]  SAY OemToAnsi("Centro de Custo") OF oDlg PIXEL SIZE 045,006  //"Centro de Custo"
		@ 55,aPosGet[1,2]  MSGET cCusto  WHEN .F.  OF oDlg PIXEL SIZE 80,10 
		
		@ 56,aPosGet[1,3]  SAY OemToAnsi("Num. Contrato") OF oDlg PIXEL SIZE 038,006  //"Num. Contrato"
		@ 55,aPosGet[1,4]  MSGET cNumCt  WHEN .F.  OF oDlg PIXEL SIZE 80,10 
		
		@ 56,aPosGet[1,5]  SAY OemToAnsi("Revisao Ct.") OF oDlg PIXEL SIZE 038,006  //"Revisao Ct."
	 	@ 55,aPosGet[1,6]  MSGET cNumRev  WHEN .F.  OF oDlg PIXEL SIZE 80,10 
	 	
	EndIf


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de Entrada para manipular os Gets da Dialog da SC.      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lMt110TEL
		ExecBlock("MT110TEL",.F.,.F.,{@oDlg, aPosGet, nOpcx, nReg} )
	EndIf          
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Criacao da Area da MsGetDados do SC   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lGrade
		oGet := MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],4,,,"",,{"C1_QUANT","C1_DATPRF"},,,,,,,,,)
	Else
		oGet := MSGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpcx,"A110LinOk","A110TudOk",/*""*/,/*.F.*/,{"C1_QUANT", "C1_QTSEGUM"})
	EndIf
	
	oGet:oBrowse:Cargo := {|a,b,c,d,e,g| __MYEDIT(a,b,c,d,e,g,oGet )}	
	oGet:oBrowse:bChange := {|| A110Solic(cA110Num,oSolic,@cSolic),.T.}
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||oDlg:End()},{||oDlg:End()},, aBut110)
	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura o conteudo de N                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ValType( nBack ) == "N"
	N := nBack
EndIf

If IntePMS() .And. (!Type("l110Auto") == "L" .Or. !l110Auto)
	SetKey(VK_F10, Nil)
EndIf

RestArea(aArea)
Return
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Inclui³Rev.   ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de inclusao das solicitacoes de compra                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo possibilitar a inclusao manual ³±±
±±³          ³das solicitacoes de compra utilizando-se de uma modelo 2     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Inclui(cAlias,nReg,nOpcx,lCopia,lWhenGet,lContinua)

Local nSaveSX8  := GetSX8Len()
Local nSavOrd   := IndexOrd()
Local nOpcA     := 0
Local oDlg
Local oGet
Local oReq
Local oComp
Local oTpOP
Local lMta110Ok := ExistBlock("MTA110OK")
Local lMt110Get := ExistBlock("MT110GET")
Local lMt110TEL := ExistBlock("MT110TEL")               
Local lRet      := .T.
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local aSizeAut  := {}

Local cSolic    := CriaVar("C1_SOLICIT")
Local oSolic
Local aObjects  := {}
Local aInfo     := {}
Local aPosGet   := {}
Local aPosObj   := {}
Local aBut110   := {}
Local aButtonUsr:= {}
Local aBtnBack	:= {}
Local aPosObjPE := {}
Local cQuery110 := ''
Local cProd_B   := ''
Local nIt110    := 0
Local nX        := 1
Local lProcGet  := .T.
Local lGspInUseM:= If(Type('lGspInUse')=='L', lGspInUse, .F.)
Local lHelpGrv  := .F.
Local lNaturez  := (FieldPos("C1_NATUREZ") > 0 .And. cPaisLoc <> "BRA")
Local lTpOp 		:= SuperGetMV("MV_TPOPDOC",.F.,.F.)
Local aHeadSCX  := {}
Local lIntegDef :=  FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI") .And. FWHasEAI("MATA110",.T.,,.T.)
Local lEnvMkt	:= .F.

PRIVATE dA110Data	:= dDataBase
PRIVATE cFilEnt   	:= CriaVar("C1_FILENT")

PRIVATE cCodNatu	:= IIf(lNaturez, CriaVar("C1_NATUREZ") , "")
PRIVATE cCCusto 	:= ""
PRIVATE cUnidReq 	:= Iif(l110Auto,"",CriaVar("C1_UNIDREQ"))
PRIVATE cCodCompr := Iif(l110Auto,"",CriaVar("C1_CODCOMP"))
PRIVATE cTpOP		:= CriaVar("C1_TPOP")
PRIVATE cA110Num	:= ""
PRIVATE aHeader		:= {}
PRIVATE aCols		:= {}
PRIVATE aRatAFG		:= {}
Private aHdrAFG	:=	{}
PRIVATE bPmsDlgSC	:= {||PmsDlgSC(3,cA110Num)}
PRIVATE cDescTp		:= iif ( lPrjCni, CriaVar("C1_XTPDESC") , '')

PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C1_QUANT",,"A110GValid()",,;
  						{ 	{"C1_QUANT" ,.T., {{"C1_QTSEGUM",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2) } }} },;
  							{"C1_ITEM",NIL,NIL},;
							{"C1_DATPRF",NIL,NIL},;
  							{"C1_QTSEGUM",.T., {{"C1_QUANT",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1) }}} } })

DEFAULT l110Auto := .F.
aColsSCX	 	:= {} //Inicializando Variável Static
          
if lPrjCni
	cTpSC := CriaVar("C1_XTIPOSC")  
	cReqSol := CriaVar("C1_XSOL") 
	cCusto	:= CriaVar("C1_CC") 
	cNumCt := CriaVar("C1_XNUMCT")  
	cNumRev := CriaVar("C1_XNUMREV")  

	If lCopia
		cReqSol	 := __cUserId    // 09/05/11 - Req. Sol  
		cCusto   := SC1->C1_CC // 09/05/11 - Item contabil
	Endif
	        
	If SuperGetMV("MV_APS",.F.,"") == "TOTVS" .And. FindFunction("TAPSGetNum")
		cA110Num := TAPSGetNum("SC1")
	Else
		cA110Num := CriaVar("C1_NUM")
	Endif
EndIf


If Valtype(lContinua) <> "L"
     lContinua:= .T.
EndIf

lCopia	 := IIf(ValType(lCopia) == "L",lCopia,.F.)
lWhenGet := IIf(ValType(lWhenGet) <> "L" , .F. , lWhenGet)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o Registro esta Bloqueado.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCopia
	
	cQuery110 := "SELECT B1_COD, B1_DESC "
	cQuery110 += "FROM " + RetSqlName('SC1') + " SC1 "
	cQuery110 += "INNER JOIN " + RetSqlName('SB1') + " SB1 ON "
	cQuery110 += "SB1.D_E_L_E_T_ <> '*' "
	cQuery110 += "AND SB1.B1_FILIAL = '" + xFilial('SB1') + "' "
	cQuery110 += "AND SB1.B1_COD = SC1.C1_PRODUTO "
	cQuery110 += "AND SB1.B1_MSBLQL = '1' " // Somente produtos bloqueados.
	cQuery110 += "WHERE SC1.D_E_L_E_T_ <> '*' "
	cQuery110 += "AND SC1.C1_FILIAL = '" + xFilial('SC1') + "' "
	cQuery110 += "AND SC1.C1_NUM = '" + SC1->C1_NUM + "' "
	
	cQuery110 := ChangeQuery(cQuery110)
	
	TcQuery cQuery110 New Alias 'MATA110B'
	
	MATA110B->(DbGoTop())
	
	If MATA110B->(!EOF())
		
		While MATA110B->(!EOF())
			
			cProd_B += AllTrim(MATA110B->B1_COD)+" - '"+AllTrim(MATA110B->B1_DESC)+"'" + CHR(13) + CHR(10)
			
			nIt110++
			
			MATA110B->(DbSkip())
			
		EndDo
		
		lContinua := .F.
		
		Aviso(STR0021,Iif(nIt110 == 1, STR0040, STR0118)+ CHR(13) + CHR(10) +cProd_B+Iif(nIt110 == 1, STR0072, STR0119),{STR0039}, 2)//"O produto "##" encontra-se bloqueado. Libere o registro para efetuar a cópia."
		
	EndIf
	
	MATA110B->(DbCloseArea())
	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para que o sistema nao gere documentos com numeracao saltada quando executadas via rotina automatica ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If l110Auto .And. (aScan(aAutoCab,{|x| x[1] == 'C1_NUM'}) > 0 .And. !Empty(aAutoCab[ProcH('C1_NUM'),2]))
	cA110Num := aAutoCab[ProcH('C1_NUM'),2] //-- Considera o numero passado na rotina automatica
Else   
	if lPrjCni
		if Empty(cA110Num)
			cA110Num := CriaVar('C1_NUM', .T.) //-- Incrementa a numeracao			
		EndIf
	Else
		cA110Num := CriaVar('C1_NUM', .T.) //-- Incrementa a numeracao	
	EndIf
EndIf  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para validar a inclusão da Solicitação de Compras ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT110VLD")
	lRet := Execblock("MT110VLD",.F.,.F.,{nOpcx})
	If ValType(lRet) <> "L"
		lRet := .T.
	EndIf
EndIf

If lRet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Efetua a montagem do aHeader e do aCols                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lCopia .And. SC1->(FieldPos("C1_TIPO"))>0 .And. SC1->C1_TIPO == 2
		Help(" ",1,"A113TIPO")
		Return
	EndIf
	
	If A110Monta(1,,lCopia,nOpcX)
		If Magrade()
			aCols := aColsGrade(oGrade, aCols, aHeader, "C1_PRODUTO", "C1_ITEM", "C1_ITEMGRD")
	    Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Limpa o Filtro aplicado pelo ponto de entrada M110Fil na FilBrowse ³
		//³ para poder validar o numero da SC na inclusao para evitar inclusao ³
		//³ de SC com o mesmo numero.									       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SC1->(dBclearFilter())

		If IntePms()	// Se usa PMS integrado com o ERP
			aBut110 := {{'PROJETPMS',{||Eval(bPmsDlgSC)},STR0028 + " - <F10>",STR0054 }}
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Botao para consultar Historico do Produto               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aadd(aBut110,{"S4WB005N",{|| A110ComView() },STR0065,STR0066 })  //Historico de Produtos

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Botao para exportar dados para EXCEL                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If FindFunction("RemoteType") .And. RemoteType() == 1
			aAdd(aBut110 ,{PmsBExcel()[1],{|| DlgToExcel({{"CABECALHO","",{RetTitle("C1_NUM") ,RetTitle("C1_SOLICIT"),RetTitle("C1_EMISSAO"),RetTitle("C1_FILENT")},{cA110Num,cSolic ,dA110Data,cFilEnt}},{"GETDADOS","",aHeader,aCols}})},PmsBExcel()[2],PmsBExcel()[3]})
			Pergunte("MTA110",.F.)
		EndIf

		if lPrjCni
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Insere o botao de rateio financeiro na tela de inclusao             ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			Aadd(aBut110,{'DESTINOS',{|| F641RatFin("MATA110") },"Incluir Rateio Financeiro","Rat.Financ."}) 
		EndIf		
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Insere o Botao de Rateio por Centro de Custo ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		If AliasIndic("SCX")
			Aadd(aBut110,{'S4WB013N',{|| A110RatCC(aHeadSCX,aColsSCX,.T.)},STR0082,STR0083}) //"Rateio por Item da Solicitação"##"Rateio"
			If lCopia // SE FOR COPIA ELE CHAMA FUNCAO QUE CARREGA O ACOLS QUE CARREGA OS CAMPOS DA SCX
				A110AcoSCX(@aHeadSCX,@aColsSCX)
			EndIf
		EndIf
		
		If ( ExistBlock("MA110BAR") )
			aButtonUsr := ExecBlock("MA110BAR",.F.,.F.,{nOpcx})
			If ( ValType(aButtonUsr) == "A" )
				For nX := 1 To Len(aButtonUsr)
					Aadd(aBut110,aClone(aButtonUsr[nX]))
				Next nX
			EndIf
		EndIf
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada criado para configurar botoes da enchoicebar        ³
		//³ Este PE foi criado porque o PE acima (MA110BAR) nao permite manipular³
		//³ botoes da enchoicebar.                                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock( "MA110BUT" )
			aBtnBack := aClone(aBut110)
			aBut110 := ExecBlock( "MA110BUT", .F., .F., { nOpcx, aBut110 } )
			If ValType( aBut110 ) # "A"
				aBut110 := aClone(aBtnBack)
			EndIf
		EndIf
	
		If IntePms() .And. (!Type("l110Auto") == "L" .Or. !l110Auto)
			SetKey(VK_F10, {|| Eval(bPmsDlgSC)})
		EndIf
	
		If ( l110Auto )
			If !lWhenGet
				nOpcA  := 1
			Else
				INCLUI := .T.
				ALTERA := .F.
				MsAuto2aCols()
			EndIf
	
			aValidGet := {}
			If ProcH("C1_NUM")<>0
				Aadd(aValidGet,{"cA110Num"  ,aAutoCab[ProcH("C1_NUM"),2],"A110Numero(@ca110Num) .And. CheckSX3('C1_NUM',ca110Num)",.t.})
			EndIf
			If ProcH("C1_SOLICIT")<>0
				Aadd(aValidGet,{"cSolic"    ,aAutoCab[ProcH("C1_SOLICIT"),2],"CheckSX3('C1_SOLICIT',cSolic)",.T.})
			EndIf
			If ProcH("C1_EMISSAO")<>0
				Aadd(aValidGet,{"dA110Data" ,aAutoCab[ProcH("C1_EMISSAO"),2],"CheckSX3('C1_EMISSAO',dA110Data)",.T.})
			EndIf
			If ProcH("C1_TPOP")<>0
				Aadd(aValidGet,{"cTpOp" ,aAutoCab[ProcH("C1_TPOP"),2],"CheckSX3('C1_TPOP',cTpOp)",.T.})
			EndIf
			If ! __lPyme
				If ProcH("C1_UNIDREQ") <> 0
					Aadd(aValidGet,{"cUnidReq"  ,aAutoCab[ProcH("C1_UNIDREQ"),2],"A110UnidReq(cUnidReq) .And. CheckSX3('C1_UNIDREQ',cUnidReq)	",.T.})
				EndIf
				If ProcH("C1_CODCOMP") <> 0
					Aadd(aValidGet,{"cCodCompr" ,aAutoCab[ProcH("C1_CODCOMP"),2],"A110CodCompr(cCodCompr)",.T.})
				EndIf
			EndIf
			If lNaturez .And. ProcH("C1_NATUREZ") <> 0
				Aadd(aValidGet,{"cCodNatu",aAutoCab[ProcH("C1_NATUREZ"),2],"CheckSX3('C1_NATUREZ',cCodNatu)",.T.})
			EndIf
			If ProcH("C1_FILENT")<>0
				Aadd(aValidGet,{"cFilEnt",aAutoCab[ProcH("C1_FILENT"),2],"CheckSX3('C1_FILENT',cFilEnt)",.T.})
			EndIf
	   		If ! SC1->(MsVldGAuto(@aValidGet)) // consiste os gets
				nOpcA := 0
			Else
				cSolic := aAutoCab[ProcH("C1_SOLICIT"),2]
			EndIf
			If !SC1->(MsGetDAuto(aAutoItens,"A110LinOk",{|| A110TudOk()},aAutoCab,aRotina[nOpcx][4]))
				If lWhenGet
					Aviso(STR0021,STR0038,{STR0039}, 2 ) // "Atencao !","Houveram inconsistencias nas validacoes da rotina automatica. Favor verIficar arquivo SC*.LOG no diretorio (StartPath) do Protheus.", "Ok"
					lProcGet := .F.
				EndIf
				nOpcA := 0
			EndIf
			// Processamento do Rateio pro projeto na rotina automatica
			if nOpcA <> 0  
				if !Empty(aRatProj)
					if !A110VldAFG(3,cA110Num)// validar o Rateio por Projeto na Rotina Automatica
						nOpcA := 0
					endif
				endif
			endif		
		EndIf
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		PcoIniLan("000051")
	
		If (!l110Auto .Or. lWhenGet) .And. lProcGet .And. lContinua
			aSizeAut	:= MsAdvSize(,.F.)  
			
			if lPrjCni
				aadd( aObjects, { 0,    65, .T., .F. } )
			Else
				aadd( aObjects, { 0,    55, .T., .F. } )
			EndIf
			
			aadd( aObjects, { 100, 100, .T., .T. } )
			aadd( aObjects, { 0,    3, .T., .F. } )
			aInfo := { aSizeAut[ 1 ], aSizeAut[ 2 ], aSizeAut[ 3 ], aSizeAut[ 4 ], 2, 2 }
			aPosObj := MsObjSize( aInfo, aObjects )
			If lNaturez     
			
				if lPrjCni
					aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,45,105,145,225,265,175,210,235,260}})
				Else
					aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,35,105,145,225,265,167,203,245,270}})
				EndIf
				
			Else
				aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,35,105,145,225,265,210,255}})
			EndIf
	
			DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0011)+' - '+iif(lCopia,"Copia",OemToAnsi(STR0008)) From aSizeAut[7],0 TO aSizeAut[6],aSizeAut[5] OF oMainWnd PIXEL		//"Solicita‡„o de Compras"
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de Entrada para Alterar as cordenas da dialog de SCs    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lMt110Get
				aPosObj := If(ValType(aPosObjPE:=ExecBlock("MT110GET",.F.,.F.,{aPosObj,nOpcx}))== "A",aPosObjPE,aPosObj)
			Endif
		
			// Para a CNI nao precisa da borda, pois como novos campos sao criados via PE, fica desposicionado.
			IF !lPrjCni
				@ aPosObj[1,1],aPosObj[1,2] TO aPosObj[1,3],aPosObj[1,4] LABEL ""  OF oDlg PIXEL 
			ENDIF
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Define o cabecalho da rotina                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			@ aPosObj[1,1]+3,aPosGet[1,1] SAY OemToAnsi(STR0012) Of oDlg PIXEL 		//"&N£mero"
			@ aPosObj[1,1]+2,aPosGet[1,2] MSGET cA110Num F3 CpoRetF3("C1_NUM")    Picture PesqPict("SC1","C1_NUM");
				When VisualSX3("C1_NUM") Valid CheckSX3("C1_NUM",cA110Num) Of oDlg PIXEL
				
			@ aPosObj[1,1]+3,aPosGet[1,3] SAY OemToAnsi(STR0013)  Of oDlg PIXEL		//"&Solicitante"
			@ aPosObj[1,1]+2,aPosGet[1,4] MSGET oSolic VAR cSolic F3 CpoRetF3("C1_SOLICIT") Picture PesqPict("SC1","C1_SOLICIT");
				When VisualSX3("C1_SOLICIT") Valid CheckSX3("C1_SOLICIT",cSolic) SIZE 80,10 Of oDlg PIXEL
				
			@ aPosObj[1,1]+3,aPosGet[1,5] SAY OemToAnsi(STR0014) Of oDlg PIXEL		//"&Data de Emiss„o"
			@ aPosObj[1,1]+2,aPosGet[1,6] MSGET dA110Data F3 CpoRetF3("C1_EMISSAO") Picture PesqPict("SC1","C1_EMISSAO");
				When VisualSX3("C1_EMISSAO") Valid a110DtVld(nOpcx,lCopia) .And. CheckSX3("C1_EMISSAO",dA110Data) SIZE 45,10 Of oDlg PIXEL HASBUTTON
	
			If !lGspInUseM
	
				If ! __lPyme
					@ aPosObj[1,1]+17,aPosGet[2,1] SAY OemToAnsi(STR0016)  Of oDlg PIXEL		//"&Unid. Requis."
					@ aPosObj[1,1]+16,aPosGet[2,2] MSGET cUnidReq  F3 CpoRetF3("C1_UNIDREQ") Picture PesqPict("SC1","C1_UNIDREQ");
						When VisualSX3("C1_UNIDREQ") ;
						Valid A110UnidReq(cUnidReq,oReq) .And. CheckSX3("C1_UNIDREQ",cUnidReq) Of oDlg PIXEL HASBUTTON
					@ aPosObj[1,1]+17,aPosGet[2,3] SAY OemToAnsi(STR0017) Of oDlg PIXEL		//"&Cod. Comprador"
					@ aPosObj[1,1]+16,aPosGet[2,4] MSGET cCodCompr F3 CpoRetF3("C1_CODCOMP") Picture PesqPict("SC1","C1_CODCOMP");
						When VisualSX3("C1_CODCOMP");
						Valid A110CodCompr(cCodCompr,oComp) Of oDlg PIXEL HASBUTTON
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³No When do campo C1_FILENT e verificado a filial da tabela SC7, pois so pode digitar filial de entrega se o SC7 for exclusivo ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lNaturez
					@ aPosObj[1,1]+17,aPosGet[2,7] SAY OemToAnsi(STR0030) OF oDlg PIXEL SIZE 050,015 //"Filial p/ Entrega" 
					
					if lPrjCni
						@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
							Valid CheckSX3("C1_FILENT",cFilEnt) WHEN a110When() OF oDlg PIXEL SIZE 019,006 HASBUTTON
	                Else
						@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
							Valid CheckSX3("C1_FILENT",cFilEnt) WHEN a110When() OF oDlg PIXEL SIZE 062,006 HASBUTTON
	                EndIf
	                
					@ aPosObj[1,1]+17,aPosGet[2,9] SAY Alltrim(RetTitle("C1_NATUREZ"))	 Of oDlg PIXEL	SIZE 45,10	//"&Cod. Comprador"
					@ aPosObj[1,1]+16,aPosGet[2,10] MSGET cCodNatu F3 CpoRetF3("C1_NATUREZ") Picture PesqPict("SC1","C1_NATUREZ");
						When VisualSX3("C1_NATUREZ") Valid CheckSX3("C1_NATUREZ",cCodNatu) Of oDlg PIXEL SIZE 50,10 HASBUTTON
				Else
					@ aPosObj[1,1]+17,aPosGet[2,7] SAY OemToAnsi(STR0030) OF oDlg PIXEL SIZE 050,015 //"Filial p/ Entrega"

					if lPrjCni
						@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
							Valid CheckSX3("C1_FILENT",cFilEnt) WHEN a110When() OF oDlg PIXEL SIZE 019,006 HASBUTTON
					Else
						@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
							Valid CheckSX3("C1_FILENT",cFilEnt) WHEN a110When() OF oDlg PIXEL SIZE 062,006 HASBUTTON
					EndIf
					
				EndIf
			EndIf
	      
	      If lTpOp
		      @ aPosObj[1,1]+30,aPosGet[2,1] SAY Alltrim(RetTitle("C1_TPOP")) Of oDlg PIXEL		//Firme ou previsto C1_TPOP		
				@ aPosObj[1,1]+30,aPosGet[2,2] COMBOBOX oTpOP VAR cTpOp ITEMS StrTokArr(x3cbox(),';') VALID Pertence('FP') SIZE 100,10;
				When VisualSX3("C1_TPOP") Of oDlg PIXEL	
			EndIf
						             
			if lPrjCni
				// 05/05/2011 - Campo Tipo de Documento
				@ 42,aPosGet[1,1]  SAY OemToAnsi("Tipo doc.") OF oDlg PIXEL SIZE 038,006  //"Tipo doc."
				@ 041,aPosGet[1,2]  MSGET cTpSC  PICTURE PesqPict("SC1","C1_XTIPOSC") F3 CpoRetF3('C1_XTIPOSC');
					Valid CheckSX3("C1_XTIPOSC",cTpSC).And.VldCtr(cNumCt) WHEN a110When() OF oDlg PIXEL SIZE 80,10 HASBUTTON  
					
				@ 42,aPosGet[1,3]  SAY OemToAnsi("Desc. Tipo doc.") OF oDlg PIXEL SIZE 038,006  //"Desc. Tipo doc."
				@ 41,aPosGet[1,4]  MSGET cDescTp When VisualSX3("C1_XTPDESC") OF oDlg PIXEL SIZE 80,10
	            
	   			// 09/05/11 - Requisitante Solicitacao
	   			@ 42,aPosGet[1,5]  SAY OemToAnsi("Requisitante SC") OF oDlg PIXEL SIZE 038,006  //"Requisitante SC"
				@ 41,aPosGet[1,6]  MSGET cReqSol  F3 CpoRetF3("C1_XSOL");  
					Valid CheckSX3("C1_XSOL",cReqSol) WHEN VisualSX3("C1_XSOL") OF oDlg PIXEL SIZE 80,10 HASBUTTON 
		        
				@ 56,aPosGet[1,1]  SAY OemToAnsi("Centro de Custo") OF oDlg PIXEL SIZE 045,006  //"Centro de Custo"
				@ 55,aPosGet[1,2]  MSGET cCusto  PICTURE PesqPict("SC1","C1_CC") F3 CpoRetF3("C1_CC");
					Valid CheckSX3("C1_CC",cCusto) WHEN a110When() OF oDlg PIXEL SIZE 80,10 HASBUTTON 
					
				@ 56,aPosGet[1,3]  SAY OemToAnsi("Num. Contrato") OF oDlg PIXEL SIZE 038,006  //"Num. Contrato"
				@ 55,aPosGet[1,4]  MSGET cNumCt PICTURE PesqPict("SC1","C1_XNUMCT") F3 "CN9001" ;
					Valid CheckSX3("C1_XNUMCT",cNumCt) .and. ValGCT(cNumCt, cNumRev) WHEN GETMV("MV_TPSCCT")==cTpSC OF oDlg PIXEL SIZE 80,10 HASBUTTON   
	
				@ 56,aPosGet[1,5]  SAY OemToAnsi("Revisao Ct.") OF oDlg PIXEL SIZE 038,006  //"Revisao Ct."
		  		@ 55,aPosGet[1,6]  MSGET cNumRev WHEN .F. PICTURE PesqPict("SC1","C1_XNUMREV")  ;
				Valid CheckSX3("C1_XNUMREV",cNumRev) .and. ValGCT(cNumCt, cNumRev) WHEN GETMV("MV_TPSCCT")==cTpSC OF oDlg PIXEL SIZE 80,10 HASBUTTON   
			EndIf
			
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de Entrada para manipular os Gets da Dialog da SC.      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lMt110TEL
				ExecBlock("MT110TEL",.F.,.F.,{@oDlg, aPosGet, nOpcx, nReg} )
			EndIf
	
			oGet := MSGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpcx,"A110LinOK","A110TudOK","+C1_ITEM",.T.,,,,990,,,,"A110DelOk")
			oGet:oBrowse:Cargo := {|a,b,c,d,e,g| __MYEDIT(a,b,c,d,e,g,oGet )}
			
			ACTIVATE MSDIALOG oDlg ON INIT (IIf(lWhenGet,oGet:oBrowse:Refresh(),Nil),EnchoiceBar(oDlg,{||nOpcA:=1,IIf(oGet:TudoOk(),oDlg:End(),( nOpcA := 0, oGet:oBrowse:SetFocus()) )},;
			{|| IIf(A110Exit(nOpcA),oDlg:End(),nOpcA := 0)},, aBut110)) VALID A110Exit(nOpcA)
	
		EndIf
	
		If ( nOpcA == 1 )
	
			If lMta110Ok
				If !ExecBlock("MTA110OK",.f.,.f.,{cA110Num,cSolic,dA110Data})
					nOpcA := 0
				EndIf
			EndIf
			If ( nOpcA == 1 )
				Ma110GraGr() // Compatibiliza aCols
					If ( !A110Grava(1,@cA110Num,cSolic,dA110Data,cCCusto,cUnidreq,cCodCompr,cFilEnt,cCodNatu,cTpOp,aHeadSCX,aColsSCX))
						nOpcA := 0
						lHelpGrv := .T.
					Else
						EvalTrigger()
						While ( GetSX8Len() > nSaveSX8 )
							ConfirmSX8()
						EndDo
					EndIf
				If lHelpGrv
					Help(" ",1,"A110NAOREG")
				EndIf         
				
				if lPrjCni
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Bloco tirado do Ponto M110STTS para a Inclusao da SCR³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					//INCLUSAO - FWS - 25/05/11
					//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
					_nTotSC := _f110TotSC(cA110Num)
					
					IF INCLUI .OR. lCopia
						SC1->(dbSetOrder(1))
						IF SC1->(dbSeek(XFilial("SC1")+cA110Num)) .and. !Empty(SC1->C1_XGRPAPR)
							MaAlcDoc({cA110Num,"SC",_nTotSC,,,SC1->C1_XGRPAPR,,1,1,SC1->C1_EMISSAO},,1)
							// verifica se gerou alcada
							SCR->(dbSetOrder(1))
							IF SCR->(dbSeek(XFilial("SCR")+"SC"+SC1->C1_NUM))
								TCSqlExec("UPDATE "+RetSqlName("SC1")+" SET C1_APROV = 'B' WHERE D_E_L_E_T_ = ' ' AND C1_NUM = '"+SC1->C1_NUM+"' AND C1_FILIAL = '"+XFilial("SC1")+"'")
							ENDIF
						ENDIF
						VerTpSc(_nTotSC)
					ENDIF
					//-----------------------------------------------------------------------------------
				EndIf
				
				If ExistBlock("M110STTS")   
					if lPrjCni
						ExecBlock("M110STTS",.F.,.F.,{cA110Num,1,lCopia,.F.})
					Else
						ExecBlock("M110STTS",.F.,.F.,{cA110Num,1})
					EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Envia a SC para o portal MarketPlace quando ela for liberada ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lIntegDef .And. SuperGetMV("MV_MKPLACE",.F.,.F.) 				
					SC1->(dbSetOrder(1))
					SC1->(dbSeek(xFilial("SC1")+cA110Num))
					While !SC1->(Eof()) .And. SC1->(C1_FILIAL+C1_NUM) == xFilial("SC1")+cA110Num .And. SC1->C1_APROV $ " ,L"
						SB5->(DbSetOrder(1))
						If SB5->(DbSeek( xFilial("SB5") + SC1->C1_PRODUTO))
							If SB5->(FieldPos("B5_ENVMKT")) > 0
								If SB5->B5_ENVMKT == "1"
									lEnvMkt := .T.
									Exit
								EndIf
							EndIf
						EndIf
						SC1->(dbSkip())
					End
					If lEnvMkt
						Inclui:=.T.
						SetRotInteg('MATA110' )
						FwIntegDef( 'MATA110' )
					EndIf
				EndIf				
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		PcoFinLan("000051")
		PcoFreeBlq("000051")
	
		If ( nOpcA == 0 )
			While ( GetSX8Len() > nSaveSX8 )
				RollBackSX8()
			EndDo
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Reativa o filtro aplicado pelo ponto de entrada M110Fil na FilBrowse ³
			//³ limpo no inicio da rotina para validacao da inclusao.                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		 	If ( Type("bFiltraBrw") == "B" )
				Eval(bFiltraBrw)
	        EndIf
	
		EndIf
		MsUnLockAll()
									
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reposiciona o Cadastro de Fornecedores  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SA2")
		DbSetOrder(1)
		DbGoTop()

		dbSelectArea(cAlias)
	
	EndIf
	
	If IntePMS() .And. (!Type("l110Auto") == "L" .Or. !l110Auto)
		SetKey(VK_F10, Nil)
	EndIf
EndIf

	
dbSetOrder(nSavOrd)
Return ( nOpcA )
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Altera³Rev.   ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de alteracao das solicitacoes de compra               ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo possibilitar a alteracao manual³±±
±±³          ³das solicitacoes de compra utilizando-se de uma modelo 2     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Altera(cAlias,nReg,nOpcx,lCopia,lWhenGet)
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local aArea			:= GetArea()
Local lPedido 		:= .T.
Local lCotacao 		:= .T.
Local lGravaOk 		:= .T.
Local lTransmissao	:= .F.
Local lContinua		:= .F.
Local cHelp			:= ""
Local aSizeAut		:= {}
Local nOpcA			:= 0
Local aObjects		:= {}
Local aInfo 		:= {}
Local aPosGet		:= {}
Local aPosObj		:= {}
Local aPosObjPE     := {}
Local oDlg
Local oGet
Local oReq
Local oComp
Local cSolic 		:= SC1->C1_SOLICIT
Local oSolic
Local oTpOP
Local aBut110		:= {}
Local aButtonUsr    := {}
Local aBtnBack		:= {}
Local nX            := 1
Local lProcGet      := .T.
Local lGspInUseM 	:= If(Type('lGspInUse')=='L', lGspInUse, .F.)
Local lHelpGrv   	:= .F.
Local lSigaGsp   	:= .T.
Local lNaturez   	:= (FieldPos("C1_NATUREZ") > 0 .And. cPaisLoc <> "BRA")
Local lMt110Get     := ExistBlock("MT110GET")
Local lMt110TEL     := ExistBlock("MT110TEL")
Local lRet          := .T.
Local _lBlq := .F. //Caio.Santos -  15/02/2012 - Estorno de log bloqueio SC
Local lTpOp 		:= SuperGetMV("MV_TPOPDOC",.F.,.F.)
Local aHeadSCX		:= {}
Local lQuery     	:= .F.
Local cQuery		:= ""
Local nY			:= 0
Local cItemSCX		:= ""
Local nItemSCX 		:= 0
Local aColsBKPRat   := {}
Local cCodLiber   := ""
Local cObs			:= ""
Local lBloq		:= .F.
Local aAreaAFG	:= {}
Local aColEdit	:= {}
Local lIntegTOP	:= .F.

PRIVATE dA110Data 	:= SC1->C1_EMISSAO
PRIVATE cCodNatu  	:= iIf(lNaturez,SC1->C1_NATUREZ,"")
PRIVATE cCCusto 	:= SC1->C1_CC
PRIVATE cUnidReq 	:= SC1->C1_UNIDREQ
PRIVATE cCodCompr 	:= SC1->C1_CODCOMP
PRIVATE cA110Num 	:= SC1->C1_NUM 
PRIVATE cFilEnt 	:= SC1->C1_FILENT
IF lPrjCNI 
	PRIVATE cFinCom     := SC1->C1_FINCOM
	PRIVATE cTmpCTA     := SC1->C1_ITEMCTA
	PRIVATE cTmpGRAP    := SC1->C1_XGRPAPR
ENDIF
PRIVATE cTpOP		:= If(Empty(SC1->C1_TPOP),"F",SC1->C1_TPOP)
PRIVATE aHeader	:= {}
PRIVATE aCols 		:= {}
PRIVATE aRatAFG		:= {}
Private aHdrAFG		:= {}
PRIVATE bPmsDlgSC	:= {||PmsDlgSC(IIF(lIntegTOP.AND.(nOpcx==4),2,4),cA110Num)} 
PRIVATE aSCForn		:= {}
DEFAULT l110Auto    := .F.

PRIVATE cDescTp		:= If(lPrjCni,Posicione("COL",1,xFilial("COL")+SC1->C1_XTIPOSC,"COL_DESC"),'')

PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C1_QUANT",,"A110GValid()",,;
  						{ 	{"C1_QUANT" ,.T., {{"C1_QTSEGUM",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2) } }} },;
  							{"C1_ITEM",NIL,NIL},;
							{"C1_DATPRF",NIL,NIL},;
  							{"C1_QTSEGUM",.T., {{"C1_QUANT",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1) }}} } })
PRIVATE aBackSCX    := {}  							
aColsSCX	 	:= {} //Inicializando Variável Static

cTpSC	 := iif ( lPrjCni, SC1->C1_XTIPOSC, '') // 05/05/2011 - Campo Tipo de Documento
cReqSol	 := iif ( lPrjCni, __cUserId, '')    // 09/05/11 - Req. Sol  
cCusto   := iif ( lPrjCni, SC1->C1_CC, '') // 09/05/11 - Item contabil
cNumCt   := iif ( lPrjCni, SC1->C1_XNUMCT, '') // 09/05/11 - Num Contrato 
cNumRev  := iif ( lPrjCni, SC1->C1_XNUMREV, '') // 19/09/11 - Revisao Ct.

l110Alt  := .T.
lCopia	 := .F.
lWhenGet := IIf(ValType(lWhenGet) <> "L" , .F. , lWhenGet)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para validar a alteração da Solicitação de Compras³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT110VLD")
	lRet := Execblock("MT110VLD",.F.,.F.,{nOpcx})
	If ValType(lRet) <> "L"
		lRet := .T.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida usuario e grupo de compras								   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	lRet := VldAltSolic()
EndIf

If IntePms() .and. !l110auto
	If AllTrim(SC1->C1_ORIGEM) == "SOLUM" .Or. AllTrim(SC1->C1_ORIGEM) == "MSGEAI"
		lIntegTOP := .T.
	Else
		dbSelectArea ("AFG")
		aAreaAFG  := AFG->(GetArea())
		AFG->(DbSetOrder(2))
		AFG->(DbSeek(xFilial("AFG")+SC1->(C1_NUM+C1_ITEM)))
		If (FieldPos("AFG_VIAINT")>0 )
			If AFG->AFG_VIAINT =="S"
				lIntegTOP := .T.
			Endif
		Endif
		RestArea(aAreaAFG)
	Endif
Endif

If lRet	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Efetua a montagem do aHeader e do aCols                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	If IntePms()	// Se usa PMS integrado com o ERP
		aBut110 := {{'PROJETPMS',{||Eval(bPmsDlgSC)},STR0028 + " - <F10>" ,STR0054}}
	
		If !Type("l110Auto") == "L" .Or. !l110Auto
			SetKey(VK_F10, {|| Eval(bPmsDlgSC)})
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Botao para consultar Historico do Produto               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aadd(aBut110,{"S4WB005N",{|| A110ComView() },STR0065,STR0066 })  //Historico de Produtos
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Botao para exportar dados para EXCEL                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If FindFunction("RemoteType") .And. RemoteType() == 1
		aAdd(aBut110 ,{PmsBExcel()[1],{|| DlgToExcel({{"CABECALHO","",{RetTitle("C1_NUM") ,RetTitle("C1_SOLICIT"),RetTitle("C1_EMISSAO"),RetTitle("C1_FILENT")},{cA110Num,cSolic ,dA110Data,cFilEnt}},{"GETDADOS","",aHeader,aCols}})},PmsBExcel()[2],PmsBExcel()[3]})
	EndIf
	                       
	if lPrjCni
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Insere o botao de rateio financeiro na tela de visualização         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Aadd(aBut110,{'DESTINOS',{|| F641AltRat("MATA110",4) },"Alterar Rateio Financeiro","Rat.Financ."})
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Insere o Botao de Rateio por Centro de Custo ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If AliasIndic("SCX")
		aAdd(aBut110,{'S4WB013N',{||A110RatCC(aHeadSCX,aColsSCX,.T.)},STR0082,STR0083}) //Rateio por Item da Solicitação###Rateio
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta o Array contendo as registros do SCX ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		A110AcoSCX(@aHeadSCX,@aColsSCX)
	EndIf
	
	If ( ExistBlock("MA110BAR") )
		aButtonUsr := ExecBlock("MA110BAR",.F.,.F.,{nOpcx})
		If ( ValType(aButtonUsr) == "A" )
			For nX := 1 To Len(aButtonUsr)
				Aadd(aBut110,aClone(aButtonUsr[nX]))
			Next nX
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada criado para configurar botoes da enchoicebar        ³
	//³ Este PE foi criado porque o PE acima (MA110BAR) nao permite manipular³
	//³ botoes da enchoicebar.                                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock( "MA110BUT" )
		aBtnBack := aClone(aBut110)
		aBut110 := ExecBlock( "MA110BUT", .F., .F., { nOpcx, aBut110 } )
		If ValType( aBut110 ) # "A"
			aBut110 := aClone(aBtnBack)
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-Ä¿
	//³ Conforme situacao do parametro abaixo, integra com o SIGAGSP ³
	//³             MV_SIGAGSP - 0-Nao / 1-Integra                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÙ
	If SuperGetMV("MV_SIGAGSP",.F.,"0") == "1"
		If !GSPF240()
			lSigaGsp := .F.
		EndIf
	EndIf
	                      
	//SC gerada por OS não pode ser alterada ou excluida
	If Trim(SC1->C1_PRODUTO) $ SC1->C1_OBS .And. "OS" $ SC1->C1_OBS .And. "BEM" $ SC1->C1_OBS;
	 .And. !Empty(Trim(SC1->C1_OP)) .And. "OS" $ SC1->C1_OP
		MsgAlert(STR0108)
		Return (.F.)
	EndIf	
	
	If A110Monta(3,{|cAlias| lContinua:=If(lContinua,lContinua,MaCanAltSC(cAlias,1,.F.,@cHelp)),.T.},,nOpcX,@aColsBKPRat) .And. lSigaGsp
		aCols := aColsGrade(oGrade, aCols, aHeader, "C1_PRODUTO", "C1_ITEM", "C1_ITEMGRD")
	
		If ( !lContinua )
			Help(" ",1,cHelp)
		Else
			If l110Auto
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ validando dados pela rotina automatica                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !lWhenGet
					nOpcA := 1
				Else
					Inclui    := .F.
					Altera    := .T.
					MsAuto2Acols(4,,"C1_ITEM")
				EndIf
	
				aValidGet := {}
				Aadd(aValidGet,{"cSolic"    ,aAutoCab[ProcH("C1_SOLICIT"),2],"CheckSX3('C1_SOLICIT',cSolic)"	,.T.})
				Aadd(aValidGet,{"dA110Data"	,aAutoCab[ProcH("C1_EMISSAO"),2],"CheckSX3('C1_EMISSAO',dA110Data)",.T.})
				If ProcH("C1_TPOP")<>0
					Aadd(aValidGet,{"cTpOp" ,aAutoCab[ProcH("C1_TPOP"),2],"CheckSX3('C1_TPOP',cTpOp)",.T.})
				EndIf
					
				If ! __lPyme
					If ProcH("C1_UNIDREQ") <> 0
						Aadd(aValidGet,{"cUnidReq"  ,aAutoCab[ProcH("C1_UNIDREQ"),2],"A110UnidReq(cUnidReq) .And. CheckSX3('C1_UNIDREQ',cUnidReq)	",.T.})
					EndIf
					If ProcH("C1_CODCOMP") <> 0
						Aadd(aValidGet,{"cCodCompr" ,aAutoCab[ProcH("C1_CODCOMP"),2],"A110CodCompr(cCodCompr)",.T.})
					EndIf
				EndIf
				If lNaturez .And. ProcH("C1_NATUREZ") <> 0
					Aadd(aValidGet,{"cCodNatu",aAutoCab[ProcH("C1_NATUREZ"),2],"CheckSX3('C1_NATUREZ',cCodNatu)",.T.})
				EndIf
				If ! SC1->(MsVldGAuto(aValidGet)) // consiste os gets
					nOpcA := 0
				EndIf
				If !SC1->(MsGetDAuto(aAutoItens,"A110LinOk",{|| A110TudOk()},aAutoCab,aRotina[nOpcx][4]))
					If lWhenGet
						Aviso(STR0021,STR0038,{STR0039}, 2 ) // "Atencao !","Houveram inconsistencias nas validacoes da rotina automatica. Favor verIficar arquivo SC*.LOG no diretorio (StartPath) do Protheus.", "Ok"
						lProcGet := .F.
					EndIf
					nOpcA := 0
				EndIf
				// Rotina Automatica de Rateio por projeto	
				if nOpcA <> 0  
	 				if !Empty(aRatProj)
						if !A110VldAFG(4,cA110Num)// validar o Rateio por Projeto na Rotina Automatica
							nOpcA := 0
						endif
					endif
				endif		
			EndIf
			If lWhenGet
				l110Auto := .F.
			EndIf
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoIniLan("000051")
	
			If (!l110Auto .Or. lWhenGet) .And. lProcGet
				aSizeAut	:= MsAdvSize(,.F.)  
		
				if	lPrjCni	
					AAdd( aObjects, { 0,    65, .T., .F. } )
				Else
					AAdd( aObjects, { 0,    55, .T., .F. } )
				EndIf         
				
				AAdd( aObjects, { 100, 100, .T., .T. } )
				AAdd( aObjects, { 0,    3, .T., .F. } )
				aInfo := { aSizeAut[ 1 ], aSizeAut[ 2 ], aSizeAut[ 3 ], aSizeAut[ 4 ], 2, 2 }
				aPosObj := MsObjSize( aInfo, aObjects )
				If lNaturez     			
					if lPrjCni
						aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,45,105,145,225,265,175,210,235,260}})
					Else
						aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,35,105,145,225,265,167,203,245,270}})
					EndIf
				Else
					aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,35,105,145,225,265,210,255}})
	            EndIf
	
				DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0011)+' - '+OemToAnsi(STR0009) From aSizeAut[7],0 TO aSizeAut[6],aSizeAut[5] OF oMainWnd PIXEL		//"Solicita‡„o de Compras"
	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada para Alterar as cordenas da dialog de SCs    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lMt110Get
					aPosObj := If(ValType(aPosObjPE:=ExecBlock("MT110GET",.F.,.F.,{aPosObj,nOpcx}))== "A",aPosObjPE,aPosObj)
				Endif
			
				// Para a CNI nao precisa da borda, pois como novos campos sao criados via PE, fica desposicionado.
   				IF !lPrjCni
					@ aPosObj[1,1],aPosObj[1,2] TO aPosObj[1,3],aPosObj[1,4] LABEL ""  OF oDlg PIXEL 
				ENDIF
				
				@ aPosObj[1,1]+3,aPosGet[1,1]	SAY OemToAnsi(STR0012) 	of oDlg PIXEL	//"&N£mero"
				@ aPosObj[1,1]+2,aPosGet[1,2]	MSGET cA110Num  Picture PesqPict("SC1","C1_NUM")  When .F. 	of oDlg PIXEL
	
				@ aPosObj[1,1]+3,aPosGet[1,3] 	SAY OemToAnsi(STR0013)  	of oDlg PIXEL		//"&Solicitante"
				@ aPosObj[1,1]+2,aPosGet[1,4]	MSGET oSolic VAR cSolic	F3 CpoRetF3("C1_SOLICIT") Picture PesqPict("SC1","C1_SOLICIT");
					When Iif(lIntegTOP,.F.,VisualSX3("C1_SOLICIT")) Valid CheckSX3("C1_SOLICIT",cSolic) SIZE 80,10 	of oDlg PIXEL
	
				@ aPosObj[1,1]+3,aPosGet[1,5] SAY OemToAnsi(STR0014) 	of oDlg PIXEL		//"&Data de Emiss„o"
				@ aPosObj[1,1]+2,aPosGet[1,6] MSGET dA110Data 	F3 CpoRetF3("C1_EMISSAO") Picture PesqPict("SC1","C1_EMISSAO");
					When Iif(lIntegTOP,.F.,VisualSX3("C1_EMISSAO")) Valid a110DtVld(nOpcx,lCopia) .And. CheckSX3("C1_EMISSAO",dA110Data) SIZE 45,10 	of oDlg PIXEL HASBUTTON
	
				If !lGspInUseM
					If ! __lPyme
						@ aPosObj[1,1]+17,aPosGet[2,1] SAY OemToAnsi(STR0016) 	of oDlg PIXEL 		//"&Unid. Requis."
						@ aPosObj[1,1]+16,aPosGet[2,2] MSGET cUnidReq  F3 CpoRetF3("C1_UNIDREQ");
							When Iif(lIntegTOP,.F.,VisualSX3("C1_UNIDREQ")) Picture PesqPict("SC1","C1_UNIDREQ");
							Valid A110UnidReq(cUnidReq,oReq) .And. CheckSX3("C1_UNIDREQ",cUnidReq) 	of oDlg PIXEL HASBUTTON
						@ aPosObj[1,1]+17,aPosGet[2,3] SAY OemToAnsi(STR0017) 	of oDlg PIXEL		//"&Cod. Comprador"
						@ aPosObj[1,1]+16,aPosGet[2,4] MSGET cCodCompr F3 CpoRetF3("C1_CODCOMP") Picture PesqPict("SC1","C1_CODCOMP");
							When Iif(lIntegTOP,.F.,VisualSX3("C1_CODCOMP")) Valid A110CodCompr(cCodCompr,oComp) .And. CheckSX3("C1_CODCOMP",cCodCompr) 	of oDlg PIXEL HASBUTTON
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³No When do campo C1_FILENT e verificado a filial da tabela SC7, pois so pode digitar filial de entrega se o SC7 for exclusivo ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lNaturez
						@ aPosObj[1,1]+17,aPosGet[2,7] SAY OemToAnsi(STR0030) OF oDlg PIXEL SIZE 050,015 //"Filial p/ Entrega"

						if lPrjCni
							@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
								Valid CheckSX3("C1_FILENT",cFilEnt) WHEN Iif(lIntegTOP,.F.,a110When()) OF oDlg PIXEL SIZE 019,006 HASBUTTON
						Else
							@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
								Valid CheckSX3("C1_FILENT",cFilEnt) WHEN Iif(lIntegTOP,.F.,a110When()) OF oDlg PIXEL SIZE 062,006 HASBUTTON
						EndIf
							
						@ aPosObj[1,1]+17,aPosGet[2,9] SAY Alltrim(RetTitle("C1_NATUREZ"))	 Of oDlg PIXEL	SIZE 45,10	//"&Cod. Comprador"
						@ aPosObj[1,1]+16,aPosGet[2,10] MSGET cCodNatu F3 CpoRetF3("C1_NATUREZ") Picture PesqPict("SC1","C1_NATUREZ");
							When Iif(lIntegTOP,.F.,VisualSX3("C1_NATUREZ"))  Valid CheckSX3("C1_NATUREZ",cCodNatu) Of oDlg PIXEL SIZE 50,10 HASBUTTON
					Else
						@ aPosObj[1,1]+17,aPosGet[2,7] SAY OemToAnsi(STR0030) OF oDlg PIXEL SIZE 050,015 //"Filial p/ Entrega"
						
						if lPrjCni
							@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
								Valid CheckSX3("C1_FILENT",cFilEnt) WHEN Iif(lIntegTOP,.F.,a110When()) OF oDlg PIXEL SIZE 019,006 HASBUTTON
						Else
							@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
								Valid CheckSX3("C1_FILENT",cFilEnt) WHEN Iif(lIntegTOP,.F.,a110When()) OF oDlg PIXEL SIZE 062,006 HASBUTTON
						EndIf
					EndIf
		      	EndIf
	    		If lTpOp
		    		@ aPosObj[1,1]+30,aPosGet[2,1] SAY Alltrim(RetTitle("C1_TPOP")) Of oDlg PIXEL		//Firme ou previsto C1_TPOP		
					@ aPosObj[1,1]+30,aPosGet[2,2] COMBOBOX oTpOP VAR cTpOp ITEMS StrTokArr(x3cbox(),';') When .F. SIZE 100,10 Of oDlg PIXEL	
		    	EndIf
	         If lPrjCNi                      
					// 05/05/2011 - Campo Tipo de Documento
					@ 42,aPosGet[1,1]  SAY OemToAnsi("Tipo doc.") OF oDlg PIXEL SIZE 038,006  //"Tipo doc."
					@ 041,aPosGet[1,2]  MSGET cTpSC  PICTURE PesqPict("SC1","C1_XTIPOSC") F3 CpoRetF3('C1_XTIPOSC');
						Valid CheckSX3("C1_XTIPOSC",cTpSC).And.VldCtr(cNumCt) WHEN a110When() OF oDlg PIXEL SIZE 80,10 HASBUTTON  
						
					@ 42,aPosGet[1,3]  SAY OemToAnsi("Desc. Tipo doc.") OF oDlg PIXEL SIZE 038,006  //"Desc. Tipo doc."
					@ 41,aPosGet[1,4]  MSGET cDescTp When VisualSX3("C1_XTPDESC") OF oDlg PIXEL SIZE 80,10
	   
	   				// 05/05/2011 - Requisitante Solicitacao
					@ 42,aPosGet[1,5]  SAY OemToAnsi("Requisitante SC") OF oDlg PIXEL SIZE 038,006  //"Requisitante SC"
					@ 41,aPosGet[1,6]  MSGET cReqSol  F3 CpoRetF3("C1_XSOL");
						Valid CheckSX3("C1_XSOL",cReqSol) WHEN VisualSX3("C1_XSOL") OF oDlg PIXEL SIZE 80,10 HASBUTTON  
					
					@ 56,aPosGet[1,1]  SAY OemToAnsi("Centro de Custo") OF oDlg PIXEL SIZE 045,006  //"Centro de Custo"
					@ 55,aPosGet[1,2]  MSGET cCusto  F3 CpoRetF3("C1_CC");
						Valid CheckSX3("C1_CC",cCusto) WHEN Empty(cCusto) OF oDlg PIXEL SIZE 80,10 HASBUTTON 
						
					@ 56,aPosGet[1,3]  SAY OemToAnsi("Num. Contrato") OF oDlg PIXEL SIZE 038,006  //"Num Contrato"
					@ 55,aPosGet[1,4]  MSGET cNumCt  F3 "CN9001" ;
						Valid CheckSX3("C1_XNUMCT",cNumCt) .and. ValGCT(cNumCt, cNumRev) WHEN GETMV("MV_TPSCCT")==cTpSC OF oDlg PIXEL SIZE 80,10 HASBUTTON 
	
					@ 56,aPosGet[1,5]  SAY OemToAnsi("Revisao Ct.") OF oDlg PIXEL SIZE 038,006  //"Revisao Ct."
					@ 55,aPosGet[1,6]  MSGET cNumRev  ;
						Valid CheckSX3("C1_XNUMREV",cNumRev) .and. ValGCT(cNumCt, cNumRev) WHEN .F./*GETMV("MV_TPSCCT")==cTpSC*/ OF oDlg PIXEL SIZE 80,10 HASBUTTON 
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada para manipular os Gets da Dialog da SC.      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lMt110TEL
					ExecBlock("MT110TEL",.F.,.F.,{@oDlg, aPosGet, nOpcx, nReg} )
				EndIf
				
				aColEdit:=NIL
				If lIntegTOP
					aColEdit:={}
					For nX := 1 to len(aHeader)
						If !(Alltrim(aHeader[nx,02])$"C1_PRODUTO;C1_QUANT;C1_UM;C1_LOCAL;C1_RATEIO")
							aAdd(aColEdit,aHeader[nx,02])
						EndIf
					next nX  
				EndIf
				
				oGet := MSGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpcx,"A110LinOK","A110TudOK","+C1_ITEM",.T.,aColEdit,,,990,"A110FldOk",,,"A110DelOk",oDlg)
				oGet:oBrowse:Cargo := {| a,b,c,d,e,g| __MYEDIT(a,b,c,d,e,g,oGet )}     

				For nx:=1 to len(aCols)
		            aadd(aSCForn,{aCols[nx][15], aCols[nx][16]})
		  	    Next nx				
				
				ACTIVATE MSDIALOG oDlg ON INIT (IIf(lWhenGet,oGet:oBrowse:Refresh(),Nil),EnchoiceBar(oDlg,{||nOpcA:=1,IIf((oGet:TudoOk() .And. A110AColsRa(aColsBKPRat,nOpcx,aColsSCX)),oDlg:End(),( nOpcA := 0, oGet:oBrowse:SetFocus()) )},;
				{|| IIf(A110Exit(nOpcA),oDlg:End(),nOpcA := 0)},, aBut110)) VALID A110Exit(nOpcA)
			EndIf
			If nOpcA == 1
				Ma110GraGr() // Compatibiliza aCols
				Begin Transaction
					If !A110Grava(2,cA110Num,cSolic,dA110Data,cCCusto,cUnidreq,cCodCompr,cFilEnt,cCodNatu,cTpOP,aHeadSCX,aColsSCX)
						lHelpGrv := .T.
					Else
						EvalTrigger()
					EndIf
				End Transaction
				If lHelpGrv
					Help(" ",1,"A110NAOREG")
				EndIf                      
				
				if lPrjCni
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Bloco tirado do Ponto M110STTS para Alterar na SCR   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
					// ALTERACAO - FWS - 25/05/11
					//--------------------------------------------------------------------------------------------------------------------------------------------------------------------
					_nTotSC := _f110TotSC(cA110Num)
					
					If ALTERA
						SC1->(dbSetOrder(1))
						If SC1->(dbSeek(XFilial("SC1")+cA110Num)) .and. !Empty(SC1->C1_XGRPAPR)
							// verifica se gerou alcada
							SCR->(dbSetOrder(1))
							If SCR->(dbSeek(XFilial("SCR")+"SC"+SC1->C1_NUM))
	            		       ntotsc1   := SCR->CR_TOTAL
	            		       cCodLiber := SCR->CR_APROV
	            		       cObs      := SCR->CR_OBS

	            		       While SCR->(!EOF()) .And. SCR->CR_FILIAL+SCR->CR_TIPO+Alltrim(SCR->CR_NUM) == xFilial("SCR")+"SC"+Alltrim(SC1->C1_NUM)
	            		       	If SCR->CR_STATUS $ "01*02*04"
	            		       		lBloq := .T.
	            		       		Exit
	            		       	EndIf
	            		       	SCR->(dbSkip())
	            		       End

								MaAlcDoc({cA110Num,"SC",_nTotSC,,,,,1,1,},SC1->C1_EMISSAO,3)
								MaAlcDoc({cA110Num,"SC",_nTotSC,,,SC1->C1_XGRPAPR,,1,1,SC1->C1_EMISSAO},,1)
							    
								TCSqlExec("UPDATE "+RetSqlName("SC1")+" SET C1_APROV = 'B' , C1_WFE = 'F' WHERE D_E_L_E_T_ = ' ' AND C1_NUM = '"+SC1->C1_NUM+"' AND C1_FILIAL = '"+XFilial("SC1")+"'")
								_lBlq := .T.
															
								//Caio.Santos - 11/01/13 - Req.72
								RSTSCLOG("APR",2,/*cUsrWF*/)
							EndIf
						Elseif ALTERA //Não Achou A SC - Foi apagado o último item da SC
							MaAlcDoc({cA110Num,"SC",_nTotSC,,,,,1,1,},,3)
						EndIf
						VerTpSc(_nTotSC)
					EndIf   
				EndIf
				
				If ExistBlock("M110STTS")           
					if lPrjCni		
						ExecBlock("M110STTS",.F.,.F.,{cA110Num,2,lCopia,_lBlq})
					Else
						ExecBlock("M110STTS",.F.,.F.,{cA110Num,2})
					EndIf
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoFinLan("000051")
			PcoFreeBlq("000051",,,,,(nOpca!=1)/*lCancela*/)	
		EndIf
	
		If IntePMS() .And. (!Type("l110Auto") == "L" .Or. !l110Auto)
			SetKey(VK_F10, Nil)
		EndIf
	
		MsUnLockAll()
		                                                                 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Reposiciona o Cadastro de Fornecedores  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SA2")
		DbSetOrder(1)
		DbGoTop()                  
		
		RestArea(aArea)

	EndIf
EndIf

Return(nOpcA)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Deleta³Rev.   ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de exclusao das solicitacoes de compra                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo possibilitar a exclusao manual ³±±
±±³          ³das solicitacoes de compra utilizando-se de uma modelo 2     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Deleta(cAlias,nReg,nOpcx,lCopia,lWhenGet,lVisual)

Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local aArea			:= GetArea()
Local aArea2			:= {}
Local aBut110		:= {}
Local aButtonUsr    := {}
Local aBtnBack		:= {}
Local lContinua		:= .F.
Local lMsc1110D     := .T.
Local cHelp			:= ""
Local nOpcA			:= 0
Local aSizeAut		:= {}
Local aObjects		:= {}
Local aInfo 		:= {}
Local aPosGet		:= {}
Local aPosObj		:= {}
Local aPosObjPE     := {}
Local oDlg
Local oGet
Local oReq
Local oComp
Local nX            := 1
Local cSolic 		:= SC1->C1_SOLICIT
Local oSolic
Local oTpOp			
Local dA110Data 	:= SC1->C1_EMISSAO
Local cFilEnt       := SC1->C1_FILENT
Local lGspInUseM 	:= If(Type('lGspInUse')=='L', lGspInUse, .F.)
Local lNaturez      := (FieldPos("C1_NATUREZ") > 0 .And. cPaisLoc <> "BRA")
Local lMt110Get     := ExistBlock("MT110GET")
Local lMt110TEL     := ExistBlock("MT110TEL")
Local lRet          := .T.
Local lGrade	 	:= MaGrade()
Local lTpOp 		:= SuperGetMV("MV_TPOPDOC",.F.,.F.)
Local nColigada  := GetNewPar( "MV_RMCOLIG", 0) // Verifica se a integracao com o TOP está ligada.
Local aColsOri      := Nil
Local lPmsInt:=(Iif( FindFunction("IsIntegTop"),IsIntegTop(,.T.),GetNewPar("MV_RMCOLIG",0) > 0))
//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  	:=  FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI") .And. FWHasEAI("MATA110",.T.,,.T.)
Local lComCent  	:= Iif(SC1->(FieldPos("C1_SCORI"))>0, !Empty(SC1->C1_SCORI), .F.) //SC proveniente de processo de compra centralizada  
PRIVATE cCodNatu	:= iIf(lNaturez,SC1->C1_NATUREZ,"")
PRIVATE cCCusto 	:= SC1->C1_CC
PRIVATE cUnidReq 	:= SC1->C1_UNIDREQ
PRIVATE cCodCompr 	:= SC1->C1_CODCOMP
PRIVATE cA110Num 	:= SC1->C1_NUM
PRIVATE cTpOP		:= If(Empty(SC1->C1_TPOP),"F",SC1->C1_TPOP)
PRIVATE aHeader	:= {}
PRIVATE aCols 		:= {}
PRIVATE aRatAFG		:= {}
Private aHdrAFG	:=	{}
PRIVATE bPmsDlgSC	:= {||PmsDlgSC(5,cA110Num)}

DEFAULT l110Auto    := .F.
DEFAULT lVisual     := .T.
PRIVATE cDescTp		:=	If(lPrjCni,Posicione("COL",1,xFilial("COL")+SC1->C1_XTIPOSC,"COL_DESC"),'')

PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C1_QUANT",,"A110GValid()",,;
  						{ 	{"C1_QUANT" ,.T., {{"C1_QTSEGUM",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2) } }} },;
  							{"C1_ITEM",NIL,NIL},;
							{"C1_DATPRF",NIL,NIL},;
  							{"C1_QTSEGUM",.T., {{"C1_QUANT",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1) }}} } })
lCopia	:=If(ValType(lCopia) == "L",lCopia,.F.)
                                             
if lPrjCni
	cTpSC := SC1->C1_XTIPOSC    // 05/05/2011 - Campo Tipo de Documento
	cReqSol := __cUserId        //  09/05/11 - Requisitante Sol
	cCusto := SC1->C1_CC //  09/05/11 - Item Contabil
	cNumCt := SC1->C1_XNUMCT //  09/05/11 - Num Contrato
	cNumRev := SC1->C1_XNUMREV //  19/09/11 - Revisao Ct.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para validar a exclusão da Solicitação de Compras ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT110VLD")
	lRet := Execblock("MT110VLD",.F.,.F.,{nOpcx})
	If ValType(lRet) <> "L"
		lRet := .T.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida usuario e grupo de compras								        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. !lComCent
	lRet := VldAltSolic()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o item esta no portal marketplace e se o campo alterado e restrito ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. SC1->(FieldPos("C1_ACCPROC"))>0 
  	aArea2 := GetArea()
	SC1->(dbSeek(xFilial("SC1")+cA110Num))
	While !SC1->(Eof()) .And. lRet .And. SC1->C1_NUM == cA110Num
		If SC1->C1_ACCPROC == "1"
			Aviso(STR0102,STR0103,{STR0039},1) //Este item não podera ser excluido pois já esta em processo no MarketPlace.
			lRet := .F.    		
    		Exit
		EndIf
		SC1->(dbSkip())
	End  	
	RestArea(aArea2)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o usuario tem permissao de delecao. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
	aArea2 := GetArea()
	SC1->(dbSeek(xFilial("SC1")+cA110Num))
	While !SC1->(Eof()) .And. lRet .And. SC1->C1_NUM == cA110Num
		lRet := MaAvalPerm(1,{SC1->C1_PRODUTO,"MTA110",5})
		SC1->(dbSkip())
	End
	RestArea(aArea2)
	If !lRet
		Help(,,1,'SEMPERM')
	EndIf
EndIf

If lRet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Bloqueio para nao permitir que uma SC gerada no Totvs |
	//|Obras e Projetos seja excluida no Protheus            |   
	//|Adicionado por Jandir Deodato em 25/11/11     	     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If lPmsInt .and. !l110auto
		dbSelectArea ("AFG")
		aAreaAFG  := AFG->(GetArea())
		AFG->(DbSetOrder(2))
		AFG->(DbSeek(xFilial("AFG")+SC1->(C1_NUM+C1_ITEM)))
		If  (FieldPos("AFG_VIAINT")>0 )
			If AFG->AFG_VIAINT =="S"	
				MsgAlert(STR0080) // "Solicitacao de compras geradas no TOP so podem ser excluidas pelo TOP."
				RestArea(aAreaAFG)
				RestArea(aArea)
				MsUnLockAll()
				Return (.F.)
			Endif
		Else
			MsgAlert (STR0081) //"O uso correto desta rotina exige  a execução do compatibilizador UPDPMS. Execute o compatibilizador!" 
			RestArea(aAreaAFG)
			RestArea(aArea)
			MsUnLockAll()
			Return (.F.)
		Endif
	Endif
	
	lWhenGet := IIf(ValType(lWhenGet) <> "L" , .F. , lWhenGet)

	//SC gerada por OS não pode ser alterada ou excluida	
	If Trim(SC1->C1_PRODUTO) $ SC1->C1_OBS .And. "OS" $ SC1->C1_OBS .And. "BEM" $ SC1->C1_OBS;
	 .And. !Empty(Trim(SC1->C1_OP)) .And. "OS" $ SC1->C1_OP
		MsgAlert(STR0108)
		Return (.F.)
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Efetua a montagem do aHeader e do aCols                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lVisual
		lContinua := A110Monta(4,{|cAlias| MaCanDelSC(cAlias,,.F.)},,nOpcX )
	Else
		lContinua := A110Monta(4,{|cAlias| MaCanDelSC(cAlias)},,nOpcX )
	EndIf
	
	aColsOri := aClone(aCols)
	aCols := aColsGrade(oGrade, aCols, aHeader, "C1_PRODUTO", "C1_ITEM", "C1_ITEMGRD")
	
	If IntePms() .and. FindFunction("PmsVldSC")
		If !( PmsVldSC(aHeader,aCols,SC1->C1_NUM, .T.) )
			Return		
		Endif
	Endif

	If (ExistBlock("MSC1110D"))
		lMsc1110D := ExecBlock("MSC1110D",.F.,.F.)
		If ValType(lMsc1110D) == "L"
			lContinua := lMsc1110D
	    EndIf
	EndIf
	
	If IntePms()	// Se usa PMS integrado com o ERP
		aBut110 := {{'PROJETPMS',{||Eval(bPmsDlgSC)},STR0028 ,STR0054}}
	
		If !Type("l110Auto") == "L" .Or. !l110Auto
			SetKey(VK_F10, {|| Eval(bPmsDlgSC)})
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Botao para consultar Historico do Produto               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aadd(aBut110,{"S4WB005N",{|| A110ComView() },STR0065,STR0066 })  //Historico de Produtos
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Botao para exportar dados para EXCEL                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If FindFunction("RemoteType") .And. RemoteType() == 1
		aAdd(aBut110 ,{PmsBExcel()[1],{|| DlgToExcel({{"CABECALHO","",{RetTitle("C1_NUM") ,RetTitle("C1_SOLICIT"),RetTitle("C1_EMISSAO"),RetTitle("C1_FILENT")},{cA110Num,cSolic ,dA110Data,cFilEnt}},{"GETDADOS","",aHeader,aCols}})},PmsBExcel()[2],PmsBExcel()[3]})
	EndIf
	               
	if lPrjCni
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Insere o botao de rateio financeiro na tela de visualização         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Aadd(aBut110,{'DESTINOS',{|| F641AltRat("MATA110",2) },"Visualizar Rateio Financeiro","Rat.Financ."}) 
	EndIf
	
	If ( ExistBlock("MA110BAR") )
		aButtonUsr := ExecBlock("MA110BAR",.F.,.F.,{nOpcx})
		If ( ValType(aButtonUsr) == "A" )
			For nX := 1 To Len(aButtonUsr)
				Aadd(aBut110,aClone(aButtonUsr[nX]))
			Next nX
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada criado para configurar botoes da enchoicebar        ³
	//³ Este PE foi criado porque o PE acima (MA110BAR) nao permite manipular³
	//³ botoes da enchoicebar.                                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock( "MA110BUT" )
		aBtnBack := aClone(aBut110)
		aBut110 := ExecBlock( "MA110BUT", .F., .F., {nOpcx, aBut110 } )
		If ValType( aBut110 ) # "A"
			aBut110 := aClone(aBtnBack)
		EndIf
	EndIf
	
	If ( lContinua )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		PcoIniLan("000051")
		If ( !l110Auto .Or. lWhenGet ) .And. lVisual
			aSizeAut := MsAdvSize(,.F.)

			if lPrjCni
				AAdd( aObjects, { 0,    65, .T., .F. } )
			Else
				AAdd( aObjects, { 0,    55, .T., .F. } )
			EndIf
			
			AAdd( aObjects, { 100, 100, .T., .T. } )
			AAdd( aObjects, { 0,    3, .T., .F. } )
			aInfo := { aSizeAut[ 1 ], aSizeAut[ 2 ], aSizeAut[ 3 ], aSizeAut[ 4 ], 2, 2 }
			aPosObj := MsObjSize( aInfo, aObjects )
			If lNaturez
				if lPrjCni
					aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,45,105,145,225,265,175,210,235,260}})
				Else
					aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,45,105,145,225,265,166,203,245,270}})
				EndIf
			Else
				aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,45,105,145,225,265,210,255}})
			EndIf
	
			DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0011) +' - '+OemToAnsi(STR0010) From aSizeAut[7],0 TO aSizeAut[6],aSizeAut[5] OF oMainWnd PIXEL		//"Solicita‡„o de Compras"
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de Entrada para Alterar as cordenas da dialog de SCs    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lMt110Get
				aPosObj := If(ValType(aPosObjPE:=ExecBlock("MT110GET",.F.,.F.,{aPosObj,nOpcx}))== "A",aPosObjPE,aPosObj)
			Endif
	
			// Para a CNI nao precisa da borda, pois como novos campos sao criados via PE, fica desposicionado.
 			IF !lPrjCni
				@ aPosObj[1,1],aPosObj[1,2] TO aPosObj[1,3],aPosObj[1,4] LABEL ""  OF oDlg PIXEL
			ENDIF
			
			@ aPosObj[1,1]+3,aPosGet[1,1] SAY OemToAnsi(STR0012)  of oDlg PIXEL		//"&N£mero"
			@ aPosObj[1,1]+2,aPosGet[1,2] MSGET cA110Num  	Picture PesqPict("SC1","C1_NUM")		When .F. of oDlg PIXEL
			
			@ aPosObj[1,1]+3,aPosGet[1,3] SAY OemToAnsi(STR0013)  of oDlg PIXEL		//"&Solicitante"
			@ aPosObj[1,1]+2,aPosGet[1,4] MSGET oSolic VAR cSolic Picture PesqPict("SC1","C1_SOLICIT")	When .F. SIZE 80,10 of oDlg PIXEL
			
			@ aPosObj[1,1]+3,aPosGet[1,5] SAY OemToAnsi(STR0014)	 of oDlg PIXEL	//"&Data de Emiss„o"
			@ aPosObj[1,1]+2,aPosGet[1,6] MSGET dA110Data  	Picture PesqPict("SC1","C1_EMISSAO")	When .F. SIZE 40,10 of oDlg PIXEL
			
			If !lGspInUseM
				If ! __lPyme
					@ aPosObj[1,1]+17,aPosGet[2,1] SAY OemToAnsi(STR0016) 	 of oDlg PIXEL	//"&Unid. Requis."
					@ aPosObj[1,1]+16,aPosGet[2,2] MSGET cUnidReq  	Picture PesqPict("SC1","C1_UNIDREQ") 	When .F. of oDlg PIXEL
					@ aPosObj[1,1]+17,aPosGet[2,3] SAY OemToAnsi(STR0017)	 of oDlg PIXEL	//"&Cod. Comprador"
					@ aPosObj[1,1]+16,aPosGet[2,4] MSGET cCodCompr 	Picture PesqPict("SC1","C1_CODCOMP")	When .F. of oDlg PIXEL
				EndIf
				If lNaturez
					@ aPosObj[1,1]+17,aPosGet[2,7] SAY OemToAnsi(STR0030) OF oDlg PIXEL SIZE 050,015 //"Filial p/ Entrega"
					if lPrjCni
						@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
							Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 019,006
					Else
						@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
							Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 058,006                           
					EndIf
					@ aPosObj[1,1]+17,aPosGet[2,9] SAY Alltrim(RetTitle("C1_NATUREZ"))	 Of oDlg PIXEL	SIZE 45,10
					@ aPosObj[1,1]+16,aPosGet[2,10] MSGET cCodNatu F3 CpoRetF3("C1_NATUREZ") Picture PesqPict("SC1","C1_NATUREZ")When .F. Of oDlg PIXEL SIZE 50,10
				Else
					@ aPosObj[1,1]+17,aPosGet[2,7] SAY OemToAnsi(STR0030) OF oDlg PIXEL SIZE 050,015 //"Filial p/ Entrega"
					
					if lPrjCni
						@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
							Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 019,006
					Else
						@ aPosObj[1,1]+16,aPosGet[2,8] MSGET cFilEnt     PICTURE PesqPict("SC1","C1_FILENT") F3 CpoRetF3('C1_FILENT');
							Valid CheckSX3("C1_FILENT",cFilEnt) WHEN .F. OF oDlg PIXEL SIZE 062,006
					EndIf
				EndIf
			EndIf
	       
	      	If lTpOp
	      		@ aPosObj[1,1]+30,aPosGet[2,1] SAY Alltrim(RetTitle("C1_TPOP")) Of oDlg PIXEL		//Firme ou previsto C1_TPOP		
				@ aPosObj[1,1]+30,aPosGet[2,2] COMBOBOX oTpOP VAR cTpOp ITEMS StrTokArr(x3cbox(),';') When .F. SIZE 100,10 Of oDlg PIXEL	              
	 		EndIf
	 		
	 		If lPrjCni	 
	 			// 05/05/2011 - Campo Tipo de Documento
				@ 42,aPosGet[1,1]  SAY OemToAnsi("Tipo doc.") OF oDlg PIXEL SIZE 038,006  //"Tipo doc."
		   		@ 41,aPosGet[1,2] MSGET cTpSC  PICTURE PesqPict("SC1","C1_XTIPOSC") WHEN .F.  OF oDlg PIXEL SIZE 80,10
			   	
			   	@ 42,aPosGet[1,3]  SAY OemToAnsi("Desc. Tipo doc.") OF oDlg PIXEL SIZE 038,006  //"Desc. Tipo doc."
				@ 41,aPosGet[1,4]  MSGET cDescTp OF oDlg PIXEL SIZE 80,10
	   
		       
				// 09/05/2011 - Req Sol
				@ 42,aPosGet[1,5]  SAY OemToAnsi("Requisitante SC") OF oDlg PIXEL SIZE 038,006  //"Tipo doc."
			   	@ 41,aPosGet[1,6] MSGET cReqSol WHEN .F.  OF oDlg PIXEL SIZE 80,10
			   	
			   	@ 56,aPosGet[1,1]  SAY OemToAnsi("Centro de Custo") OF oDlg PIXEL SIZE 045,006  //"Centro de Custo"
			   	@ 55,aPosGet[1,2] MSGET cCusto WHEN .F.  OF oDlg PIXEL SIZE 80,10
			   	
			   	@ 56,aPosGet[1,3]  SAY OemToAnsi("Num. Contrato") OF oDlg PIXEL SIZE 038,006  //"Tipo doc."
			   	@ 55,aPosGet[1,4] MSGET cNumCt WHEN .F.  OF oDlg PIXEL SIZE 80,10
			   	
			   	@ 56,aPosGet[1,5]  SAY OemToAnsi("Revisao Ct.") OF oDlg PIXEL SIZE 038,006  //"Revisao Ct."
			   	@ 55,aPosGet[1,6] MSGET cNumRev WHEN .F.  OF oDlg PIXEL SIZE 80,10
	 		EndIf
	 		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de Entrada para manipular os Gets da Dialog da SC.      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lMt110TEL
				ExecBlock("MT110TEL",.F.,.F.,{@oDlg, aPosGet, nOpcx, nReg} )
			EndIf       

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Criacao da Area da MsGetDados do SC   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lGrade
				oGet := MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],4,,,"",,{"C1_QUANT","C1_DATPRF"},,,,,,,,,)
			Else
   				oGet := MSGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpcx,"A110LinOk","A110TudOk","",.F.,,,,990)
			EndIf
			oGet:oBrowse:bChange := {|| A110Solic(cA110Num,oSolic,@cSolic),.T.}
			ACTIVATE MSDIALOG oDlg ON INIT (IIf(lWhenGet,oGet:oBrowse:Refresh(),Nil),EnchoiceBar(oDlg,{||nopcA:=1,oDlg:End()},;
			{|| IIf(A110Exit(nOpcA),oDlg:End(),nOpcA := 0)},, aBut110)) VALID A110Exit(nOpcA)
	
		Else
			nOpcA  := 1
		EndIf
		If ( nOpcA == 1 )
			aCols := aClone(aColsOri)
			Begin Transaction
				A110Grava(3,ca110Num,cSolic,dA110Data,cCCusto,cUnidreq,cCodCompr,cFilEnt,cCodNatu)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-Ä¿
				//³ Conforme situacao do parametro abaixo, integra com o SIGAGSP ³
				//³             MV_SIGAGSP - 0-Nao / 1-Integra                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÙ
				If SuperGetMV("MV_SIGAGSP",.F.,"0") == "1"
					GSPF150()
				EndIf
	
				EvalTrigger()
			End Transaction
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoFinLan("000051")    
			
			if lPrjCni
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Bloco tirado do Ponto M110STTS para Excluir na SCR   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
				// EXCLUSAO - FWS - 25/05/11
				//------------------------------------------------------------------------------   
				_nTotSC := _f110TotSC(cA110Num)
	
				IF (!INCLUI .and. !ALTERA) // exclui
					MaAlcDoc({cA110Num,"SC",_nTotSC,,,,,1,1,},SC1->C1_EMISSAO,3)
				ENDIF
			EndIf
			
			If ExistBlock("M110STTS") 
				if lPrjCni
					ExecBlock("M110STTS",.F.,.F.,{cA110Num,3,lCopia,.F.})
				Else
					ExecBlock("M110STTS",.F.,.F.,{cA110Num,3})
				EndIf
			EndIf			
		
			If lIntegDef .And. SC1->( ! DbSeek( xFilial("SC1")+cA110Num ) ) .And. !(SuperGetMV("MV_MKPLACE",.F.,.F.))
				FwIntegDef( 'MATA110' )
			EndIf	
		EndIf
	EndIf
	
	If IntePMS() .And. (!Type("l110Auto") == "L" .Or. !l110Auto)
		SetKey(VK_F10, Nil)
	EndIf
EndIf

RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Numero³ Autor ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de avaliacao do numero da solicitacao de compra       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Numero da solicitacao de compra                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo nao permitir a duplicacao do   ³±±
±±³          ³numero da solicitacao de compra                              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Numero(cNumSC)

Local aArea 	:= GetArea()
Local lRet		:= .T.
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()

If Empty(cNumSC)
	// Caso seja MRP gera novo numero
	If lProjM711
		cNumSc:=GetNumSC1()
	Else
		Help(" ",1,"VAZIO")
		lRet := .F.
	EndIf
Else
	dbSelectArea("SC1")
	dbSetOrder(1)
	If MsSeek( xFilial("SC1")+cNumSC)
		// Caso seja MRP gera novo numero
		If lProjM711 .Or. PutByAPS()
			cNumSc:=GetNumSC1()
			If PutByAPS() .And. Type('cWSMAT110') == "C"
				cWSMAT110 := cNumSc
			EndIf
		Else
			Help(" ",1,"A11001")
			lRet := .F.
		EndIf
	EndIf       
	
	if lPrjCni
		//-- Integracao TOTVS APS
		If FindFunction("TAPSVldNum")
			lRet := TAPSVldNum(cNumSC)
		EndIf
	EndIf
EndIf

RestArea(aArea)
Return lRet
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Produt³ Autor ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de avaliacao do codigo do produto da solicitacao de   ³±±
±±³          ³compra                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do produto                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo nao permitir a duplicacao do   ³±±
±±³          ³numero da solicitacao de compra                              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Produto(cProduto)
Local aArea		:= GetArea()
Local aCTBEnt			:= If(FindFunction("CTBEntArr"),CTBEntArr(),{})
Local lRetorno  := .T.
Local lVldContrato:= .T.
Local lContinua		:= .T.
Local lReferencia	:= .F.
Local lDescSubst	:= .F.
Local lGrade		:= MaGrade()
Local nX        		:= 0
Local nPLoja			:= 0
Local nPos				:= 0
Local nLoop         := Nil
Local nPProduto		:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_PRODUTO"})
Local nPGrade		:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_GRADE"})
Local nPItemGrd 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_ITEMGRD"})
Local nPItem		:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_ITEM"})
Local nPQtdVen		:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_QUANT"})
Local cDescri			:= ""
Local cProdRef	  := ""
Local cCliTab     := ""
Local cLojaTab    := ""
Local cCodUser    := RetCodUsr()
Local aDadosCfo		:= {}

Local cQry:=""
Local cCtrVal:= .T.

DEFAULT cProduto  := &(ReadVar())

//³Verifica se o usuario tem permissao de inclusao
If Inclui
	If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
		lRetorno := MaAvalPerm(1,{M->C1_PRODUTO,"MTA110",3})
		If !lRetorno
			Help(,,1,'SEMPERM')
		EndIf
	EndIf
EndIf
	
lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .T.=Permite preencher aCols /  .F.=Executando via VldHead() 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao utilizada para verificar a ultima versao dos fontes      ³
//³ SIGACUS.PRW, SIGACUSA.PRX e SIGACUSB.PRX, aplicados no rpo do   |
//| cliente, assim verificando a necessidade de uma atualizacao     |
//| nestes fontes. NAO REMOVER !!!							        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(FindFunction("SIGACUS_V") .and. SIGACUS_V() >= 20050512)
    Final(STR0055) //"Atualizar SIGACUS.PRW !!!"
EndIf
If !(FindFunction("SIGACUSA_V") .and. SIGACUSA_V() >= 20050512)
    Final(STR0056) //"Atualizar SIGACUSA.PRX !!!"
EndIf
If !(FindFunction("SIGACUSB_V") .and. SIGACUSB_V() >= 20050512)
    Final(STR0057) //"Atualizar SIGACUSB.PRX !!!"
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao utilizada para verificar a ultima versao do ATUALIZADOR  ³
//³ do dicionario do modulo de Compras necessario para o uso do     |
//| recurso de grade produtos no MP10 Relese I deverá ser retirado  |
//| no proximo Release da Versao quando o dicionario for Atualizado |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(FindFunction("UPDCOM01_V") .And. UPDCOM01_V() >= 20070615)
	Final(STR0070) // "Atualizar UPDCOM01_V.PRW ou checar o processamento deste UPDATE !!!"
EndIf

If l110Auto
   If n <= Len(aAutoItens)
	   nPos := aScan(aAutoItens[n],{|x| AllTrim(x[1]) == "AUTVLDCONT"})
	   If nPos > 0
    	  If aAutoItens[n,nPos,2] == "N"
        	 lVldContrato:= .f.
			EndIf
		EndIf
	EndIf
EndIf

cProdRef := cProduto
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VerIfica se a grade esta ativa e se o produto digitado eh uma referencia³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If lGrade

	If cProdRef == GdFieldGet("C1_PRODUTO") // Nao alterei o produto
		Return(.T.)
	EndIf	

	lReferencia := MatGrdPrrf(@cProdRef)
	
	If lGatilha
		aCols[n][nPQtdVen]:= 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta o AcolsGrade e o AheadGrade para este item     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	 	oGrade:MontaGrade(n,cProdRef,.T.,,lReferencia,.T.)
	
		If ( lReferencia )
			If ( nPGrade > 0 )
				aCols[n][nPGrade] := "S"
				lReferencia := .T.
			EndIf
		Else
			If ( nPGrade > 0 )
			 	oGrade:MontaGrade(n,cProdRef,.T.,,lReferencia)
				If aCols[n][nPGrade] == "S"
					For nLoop := 1 to Len(aHeader)
						If X3Obrigat(aHeader[nLoop, 2]) .Or. AllTrim(aHeader[nLoop, 2]) $ "C1_QUANT, C1_QTSEGUM, C1_GRADE"
							If ! AllTrim(aHeader[nLoop, 2]) $ "C1_ITEM, C1_PRODUTO, C1_DATPRF"
								aCols[n,nLoop] := CriaVar(aHeader[nLoop, 2] , .F.)
							EndIf
						EndIf
					Next
					aCols[n][nPProduto] := Pad(cProdRef, Len(SB1->B1_COD))
					aCols[n][nPGrade]   := "N"
					aCols[n][nPItemGrd] := Space(Len(aCols[n][nPItemGrd]))
				EndIf				
			EndIf
		EndIf
	EndIf
EndIf
dbSelectArea("SB1")
dbSetOrder(1)
MsSeek(xFilial("SB1")+cProdRef,.F.)
If lGatilha 
	cDescri := IIf( lReferencia , oGrade:GetDescProd(cProdRef), SB1->B1_DESC )
EndIf

If SB1->B1_CONTRAT == "S" 

cQry:= "SELECT COUNT(*) QTDSC3 FROM "+RetSqlName("SC3")+" SC3 "
cQry+= "WHERE SC3.D_E_L_E_T_<>'*'"
cQry+= "AND C3_PRODUTO = '"+Alltrim(M->C1_PRODUTO)+"' "
cQry+= "AND C3_QUANT > C3_QUJE"

cAliasQry  := GetNextAlias()
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQry),cAliasQry,.F.,.T.)

	If (cAliasQry)->QTDSC3 > 0
		cCtrVal:= .T.
	Else 
		cCtrVal:= .F.
	EndIf 

EndIf

Do Case
	Case SB1->(Eof()) .And. !lReferencia
		lRetorno := .F.
		Help(" ",1,"C1_PRODUTO")
	Case SB1->B1_CONTRAT == "S" .and. lVldContrato .And. !lReferencia 
	If cCtrVal
		lRetorno := .F.
		Help(" ",1,"A110CONTR")
	EndIf
	Case !A110Valid("P")
		lRetorno := .F.
	Case SB1->B1_SOLICIT =="S" .And. GetMv("MV_RESTSOL")=="S" .And. !A110Restr(cProduto,UsrRetGrp(,cCodUser),cCodUser) .And. !lReferencia
		lRetorno := .F.
EndCase
If lRetorno
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona no produto selecionado ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB1")
	dbSetOrder(1)
	MsSeek(xFilial("SB1")+cProdRef,.F.)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ VerIfica se o Registro esta Bloqueado.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. !RegistroOk("SB1")
	lRetorno := .F.
EndIf

If lRetorno .And. lGatilha
	If ( Alltrim(mv_par01) == "B5_CEME" )
		dbSelectArea("SB5")
		dbSetOrder(1)
		If MsSeek(xFilial("SB5") + cProduto )
			cDescri := SB5->B5_CEME
		EndIf
	EndIf
	cDescri := PadR(cDescri,Len(SC1->C1_DESCRI))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza os campos vinculados ao produto                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1 To Len(aHeader)
		Do Case
			Case Trim(aHeader[nX][2]) == "C1_FORNECE"
				If ( SB1->B1_MONO=="S" )
					nPLoja := aScan(aHeader,{|x| Alltrim(x[2])=="C1_LOJA"})
					If ( nPLoja > 0 )
						aCols[n][nX] 		:= SB1->B1_PROC
						aCols[n][nPLoja]	:= SB1->B1_LOJPROC
					EndIf
				EndIf
			Case Trim(aHeader[nX][2]) == "C1_UM"			// Unidade Medida
				If !lReferencia
					aCols[n][nX] := SB1->B1_UM
				Else
					If MatOrigGrd() == "SBQ"
						aCols[n][nX] := SBR->BR_UM
					ElseIf MatOrigGrd() == "SB4"
						aCols[n][nX] := SB4->B4_UM
					EndIf
				EndIf
			Case Trim(aHeader[nX][2]) == "C1_SEGUM"		// Segunda Unidade Medida
				If !lReferencia
					aCols[n][nX] := SB1->B1_SEGUM
				Else
					If MatOrigGrd() == "SB4"
						aCols[n][nX] := SB4->B4_SEGUM
					EndIf
				EndIf
				a100SegUm()
			Case Trim(aHeader[nX][2]) == "C1_LOCAL"		// AlmoxarIfado
				If !lReferencia
					aCols[n][nX] := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
				Else
					If MatOrigGrd() == "SBQ"
						aCols[n][nX] := SBR->BR_LOCPAD
					ElseIf MatOrigGrd() == "SB4"
						aCols[n][nX] := SB4->B4_LOCPAD
					EndIf
				EndIf
			Case Trim(aHeader[nX][2]) == "C1_CC" .And. !lReferencia			// Centro Custo
				aCols[n][nX] := SB1->B1_CC
			Case Trim(aHeader[nX][2]) == "C1_CONTA" .And. !lReferencia		// Conta Contabil
				aCols[n][nX] := SB1->B1_CONTA
			Case Trim(aHeader[nX][2]) == "C1_DESCRI"							// Descricao
				aCols[n][nX] := cDescri
			Case Trim(aHeader[nX][2]) == "C1_IMPORT" .And. !lReferencia		// Produto Importado
				aCols[n][nX] := SB1->B1_IMPORT
			Case Trim(aHeader[nX][2]) == "C1_ITEMCTA" .And. !lReferencia		// Item da conta contabil
				aCols[n][nX] := SB1->B1_ITEMCC
			Case Trim(aHeader[nX][2]) == "C1_CLVL" .And. !lReferencia		    // Classe de valor
				aCols[n][nX] := SB1->B1_CLVL
		EndCase
	Next nX
	For nX := 1 To Len(aCTBEnt)
		If GDFieldPos("C1_EC"+aCTBEnt[nX]+"CR",aHeader) > 0 .And. SB1->(FieldPos("B1_EC"+aCTBEnt[nX]+"CR")) > 0
			aCols[n,GDFieldPos("C1_EC"+aCTBEnt[nX]+"CR")] := SB1->&("B1_EC"+aCTBEnt[nX]+"CR")
		EndIf
		If GDFieldPos("C1_EC"+aCTBEnt[nX]+"DB",aHeader) > 0 .And. SB1->(FieldPos("B1_EC"+aCTBEnt[nX]+"DB")) > 0
			aCols[n,GDFieldPos("C1_EC"+aCTBEnt[nX]+"DB")] := SB1->&("B1_EC"+aCTBEnt[nX]+"DB")
		EndIf
	Next nX
EndIf
cProduto := IIf(cProduto == Nil,&(ReadVar()),cProduto)
RestArea(aArea)
Return (lRetorno)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110IniLoj³ Autor ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de avaliacao do fornecedor canal                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao do codigo  ³±±
±±³          ³e loja do fornecedor canal                                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110IniLoj()

Local aArea		:= GetArea()
Local nPFornece := aScan(aHeader,{|x| Trim(x[2])=="C1_FORNECE"})
Local nPLoja	:= aScan(aHeader,{|x| Trim(x[2])=="C1_LOJA"})
Local nPProd	:= aScan(aHeader,{|x| Trim(x[2])=="C1_PRODUTO"})
Local cLoja		:= Space(2)
Local lRetorno	:= .T.

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .T.=Permite preencher aCols /  .F.=Executando via VldHead() 

dbSelectArea("SA2")
If !Empty(M->C1_FORNECE)
	If Empty(aCols[n][nPLoja]) .And. lGatilha 
        If xFilial("SA2") == SA2->A2_FILIAL .And. SA2->A2_COD == M->C1_FORNECE 
	    	cLoja:=SA2->A2_LOJA
	    Else
	    	cLoja:=""
 	    EndIf
	   
		SA2->(dbSetOrder(1))
		SA2->(MsSeek(xFilial("SA2")+M->C1_FORNECE+cLoja))
		If SA2->(Found())
			aCols[n][nPLoja] := SA2->A2_LOJA
			lRetorno := .T.
		EndIf
	Else
        If xFilial("SA2") == SA2->A2_FILIAL .And. SA2->A2_COD == M->C1_FORNECE 
	    	aCols[n][nPLoja] := SA2->A2_LOJA
		EndIf
	
		lRetorno := ExistCpo("SA2",M->C1_FORNECE+aCols[n][nPLoja])
	EndIf
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faz a Consistencia entre do Fornecedor Canal do Produto               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
dbSetOrder(1)
If lRetorno .And. ( MsSeek(xFilial("SB1")+aCols[n][nPProd]) )
	If  SB1->B1_MONO=="S" 
		If (SB1->B1_PROC != M->C1_FORNECE)
			Help(" ",1,"A110CANAL")
			lRetorno := .F.
		Else
			If ( nPLoja > 0 )
				aCols[n][nPLoja]	:= SB1->B1_LOJPROC
			EndIf
		EndIf
	EndIf
EndIf
RestArea(aArea)
Return(lRetorno)   

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110ChkLoj³ Autor ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de avaliacao do fornecedor canal                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao do codigo  ³±±
±±³          ³e loja do fornecedor canal                                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110ChkLoj()
Local nPFornece := aScan(aHeader,{|x| Trim(x[2])=="C1_FORNECE"})  
Local nPProd	:= aScan(aHeader,{|x| Trim(x[2])=="C1_PRODUTO"})
Local lRetorno  := .T.

lRetorno := (ExistCpo("SA2",aCols[n][nPFornece]+M->C1_LOJA))
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Faz a Consistencia entre a Loja do Fornecedor Canal do Produto              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
dbSetOrder(1)
If lRetorno .And. ( MsSeek(xFilial("SB1")+aCols[n][nPProd]) )
	If ( SB1->B1_MONO=="S" .And. SB1->B1_LOJPROC != M->C1_LOJA)
		Help(" ",1,"A110CANAL")
		lRetorno := .F.
	EndIf
EndIf
Return lRetorno

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110LinOk ³ Autor ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de avaliacao LinhaOk                                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da GetDados                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: .T. -> Linha valida                                   ³±±
±±³          ³       .F. -> Linha invalida                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao de uma     ³±±
±±³          ³linha da getdados para a rotina de atualizacao da solicitacao³±±
±±³          ³de compra                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110LinOk(o)
Local aArea		:= GetArea()
Local aInfGrd   	:= {}
Local cItem     := ""
Local cQuery    	:= ""
Local lRet 		:= .T.
Local lDeleted	:= .F.
Local lReferencia	:= .F.
Local lGrade		:= MaGrade()
Local lVerForn	:= .T.
Local lPrjCni 	:= FindFunction("ValidaCNI") .And. ValidaCNI()
Local nPProd    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C1_PRODUTO"})
Local nPQuant   	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C1_QUANT"})
Local nPItem    	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C1_ITEM"})
Local nPop      	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C1_OP"})
Local nPLocal   	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C1_LOCAL"})
Local nPosConta := aScan(aHeader,{|x| AllTrim(x[2])=="C1_CONTA"})
Local nPosCC    := aScan(aHeader,{|x| AllTrim(x[2])=="C1_CC"})
Local nPosCLVL  := aScan(aHeader,{|x| AllTrim(x[2])=="C1_CLVL"})
Local nPosItemCTA := aScan(aHeader,{|x| AllTrim(x[2])=="C1_ITEMCTA"})
Local nPosFor   := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_FORNECE"})
Local nPosLoj   := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_LOJA"})
Local nPosRes   := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_RESIDUO"})     
Local nPosCtr	:= aScan(aHeader,{|x| AllTrim(x[2]) == 'C1_XCONTPR'})	//posicao do Contrato Registro de Preco na getDados     
Local nPosRateio	:= aScan(aHeader,{|x| Alltrim(x[2]) == "C1_RATEIO"})     
Local nA			:= 0
Local nTotAFG	:=	0
Local nPosAFG	:=	0               
Local n_SaveLin := n      
Local nQuant		:= Iif(lPrjCni, aCols[n][nPQuant] , 0)
Local nX		  	:= 0      
Local cTMP  	:= GetNextAlias()
Local cHoje		:= Date()
Local cTpAdit	:= iif (lPrjCni, GetMV("MV_TPSCCT "),'')
Local cxCusto   	:= ""
Local cItemCTB  	:= ""

//Caio.Santos -  23/03/2012 - Validacao do prefixo da conta contabil
Local nTamPrefix := iif (lPrjCni, TamSX3("CT1_PREFIXO")[1], 0)
Local cPrefixCta := iif (lPrjCni, Left(aCols[n][nPosConta],nTamPrefix), '')
Local nPosOrigem := iif (lPrjCni, aScan(aHeader,{|x| AllTrim(x[2])=="C1_ORIGEM"}), 0) 

lCopia	:= If(ValType(lCopia) == "L",lCopia,.F.)
lVldHead:= If(ValType(lVldHead) == "L",lVldHead, GetNewPar( "MV_VLDHEAD",.T. ) )

If lPrjCNI
  	cItemCTB := _cItCta
ElseIf nPosItemCTA > 0
    cItemCTB := aCols[n,nPosItemCTA]
EndIf

If lPrjCNI
	cxCusto:= cCusto
ElseIf nPosCC > 0
	cxCusto:= aCols[n,nPosCC]
EndIf
	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se tem permissao de armazem  |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
	lRet := MaAvalPerm(3,{aCols[n][nPLocal],aCols[n][nPProd]})
EndIf

If lRet .And. ValType(aCols[n,Len(aCols[n])]) == "L"
	lDeleted := aCols[n,Len(aCols[n])]      // VerIfica se esta Deletado
EndIf

If lRet .And. ( !lDeleted )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Efetua consistência quando não possui Resíduos  |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nPosRes>0 .And. !Empty(Trim(aCols[n][nPosRes]))
		lRet:= .T.  
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³VerIfica o preenchimento dos campos obrigatorios                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet := MaCheckCols(aHeader,aCols,n)
	EndIf
	
    // Verifica se existe itens digitados na grade
    If lGrade
		cVar:=aCols[n,nPProd]
		lReferencia := MatGrdPrrf(@cVar)		
		If lReferencia
			aInfGrd := Ma110ValGr()
			If Empty(aInfGrd) .Or. aInfGrd[1]==NIL      
				Aviso(STR0068,STR0069,{"Ok"}) 
				lRet := .F.
			Endif    
		Endif
	Endif 

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Quando Informado Armazem em branco considerar o B1_LOCPAD			 |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. nPLocal > 0 .And. Empty(aCols[n][nPLocal])
		SB1->(dbSetOrder(1))
		If SB1->(MsSeek(xFilial("SB1")+aCols[n][nPProd]))
			aCols[n][nPLocal] := SB1->B1_LOCPAD
			If ValType(l110Auto) == "L" .And. !l110Auto
				Aviso(OemToAnsi(STR0021),OemToAnsi(STR0064),{"Ok"}) //"O Armazem informado e Invalido, o campo sera ajustando com o armazem padrão do cadastro de produtos"
			EndIf
		EndIf
	EndIf

	If !SegumEIC()
		lRet := .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se valida ou nao o aCols a partir das validacoes do aHeader ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. lVldHead .And. FindFunction("VldHead") .And. ( Type("l110Auto") == "U" .Or. !l110Auto )
		If nPosConta <> 0 .And. nPosCC>0 .And. nPosItemCta <> 0 .And. nPosClVl <> 0 .And.;
			 !CtbAmarra(aCols[n,nPosConta],cxCusto,cItemCTB,aCols[n,nPosCLVL])
			lRet := .F.	
		Endif
		If lRet
			lRet := VldHead(aCols,aHeader,n)
			If lRet
				n := n_SaveLin        
			EndIf
		Endif
 
	ElseIf lRet .And. nPosConta <> 0 .And. nPosCC>0 .And. nPosItemCta <> 0 .And. nPosClVl <> 0 .And.;
		(!CtbAmarra(aCols[n,nPosConta],cxCusto,cItemCTB,aCols[n,nPosCLVL]) .Or.;
		(!Empty(aCols[n,nPosConta]) .And. !Ctb105Cta(aCols[n,nPosConta])) .Or.;
		(!Empty(aCols[n,nPosCC]) .And. !Ctb105CC(aCols[n,nPosCC])) .Or.;
		(!Empty(aCols[n,nPosItemCTA]) .And. !Ctb105Item(aCols[n,nPosItemCTA])) .Or.;
		(!Empty(aCols[n,nPosCLVL]) .And. !Ctb105ClVl(aCols[n,nPosCLVL])))
							
		lRet := .F.	
	Endif     
	
	if lPrjCni
		//Caio.Santos -  23/03/2012 - Validacao do prefixo da conta contabil
		For nA := 1 To Len(aCols)
		   If !(Left(aCols[nA][nPosConta],nTamPrefix) == cPrefixCta) .AND. !(aCols[nA,Len(aCols[nA])])
			   If !IsEmpty(aCols[nA][nPosConta])
				Aviso(OemToAnsi(STR0021),OemToAnsi("O prefixo da conta contábil deve ser o mesmo para todos os itens da solicitação de compras."),{"Ok"})
					Exit
			   EndIf   
		      if !(Alltrim(aCols[nA,nPosOrigem]) $ "MATA106/MATA170") 
				lRet := .F.
				Exit
			   EndIf
			EndIf
		Next nA
	EndIf
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³VerIfica se a linha pode ser deletada                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. ( !INCLUI )
		dbSelectArea("SC1")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SC1")+cA110Num+aCols[n][nPItem]) )
			lRet := MaCanDelSC("SC1")
		EndIf
	EndIf
EndIf

///////////////////////////////////
// Valida qtde com a Integracao PMS
If lRet .And. IntePms()
	If ALTERA .And. Len(aRatAFG)=0
		PmsDlgSC(6,cA110Num,.F.) //Carrega os valores que serao utilizados para a validacao
	EndIf
	If Len(aRatAFG) > 0
		nPosAFG  := Ascan(aRatAFG,{|x|x[1]==aCols[n][nPItem]})
		nPosQtde := Ascan(aHdrAFG,{|x|Alltrim(x[2])=="AFG_QUANT"})
		nTotAFG	:= 0
		If (nPosAFG > 0) .And. (nPosQtde > 0)
			For nA := 1 To Len(aRatAFG[nPosAFG][2])
				If !aRatAFG[nPosAFG][2][nA][LEN(aRatAFG[nPosAFG][2][nA])]
					nTotAFG	+= aRatAFG[nPosAFG][2][nA][nPosQtde]
				EndIf
			Next nA
			If nTotAFG > aCols[n][nPQuant]
				Help("   ",1,"PMSQTNF")
				lRet := .F.
			EndIf
		EndIf
	EndIf
EndIf
If Type("aSCForn")=="A"
	If Len(aCols) == Len(aSCForn)
		For nA:=1 to len(aCols)
			If aCols[nA][15] == aSCForn[nA][1] .and. aCols[nA][16] == aSCForn[nA][2]
				lVerForn := .F.
			Else
				lVerForn := .T.
			Endif
		Next nA	
	Endif
Endif

If lRet .And. nPosFor > 0 .And. nPosLoj > 0 
	If !Empty(aCols[n][nPosFor]) .And. !Empty(aCols[n][nPosLoj])
		SA2->(dbSetOrder(1))
		If SA2->(MsSeek(xFilial("SA2")+aCols[n][nPosFor]+aCols[n][nPosLoj]))  
       		If lVerForn
				IIf(!RegistroOk("SA2"),lRet:=.F.,lRet:=.T.)
			Else
				lRet:=.T.
			Endif
		Else
			Help(' ',1, 'REGNOIS')
			lRet := .F.
		Endif
	Endif		
	If lRet .And. !Empty(aCols[n][nPosFor]) .And. Empty(aCols[n][nPosLoj])
		aCols[n][nPosFor] := Criavar("C1_FORNECE")
	Endif
	If lRet .And. Empty(aCols[n][nPosFor]) .And. !Empty(aCols[n][nPosLoj])
		aCols[n][nPosLoj] := Criavar("C1_LOJA")
	Endif
Endif
                                        
if lPrjCni
	If lRet .and. !lDeleted .And. AllTrim(cTpAdit) <> AllTrim(cTpSC)
	
		If ExistBlock("MTA110CP")
			cQuery := ExecBlock("MTA110CP",.F.,.F.,{aCols[n][nPProd],cHoje,nQuant})
		EndIf 
		
		If (Empty(cQuery))
		   cQuery := " ORDER BY CN9.CN9_NUMERO "
		   cQuery := '%' + cQuery + '%'
		EndIf
		
		Do	While .T.
		
			BeginSQL Alias cTMP    
			    
			    //%NoParser%
				SELECT CNB.CNB_SLDMED, CN9.CN9_NUMERO, CNA.CNA_FORNEC, CNB.CNB_VLUNIT, CNA.CNA_SALDO
				FROM %Table:CNB% CNB, %Table:CN9% CN9, %Table:CNA% CNA, %Table:CN1% CN1
				WHERE CN9.CN9_FILIAL = %xFilial:CN9% AND
				CNB.CNB_FILIAL = %xFilial:CNB% AND
				CNA.CNA_FILIAL = %xFilial:CNA% AND
				CN1.CN1_FILIAL = %xFilial:CN1% AND 
				CNB.CNB_CONTRA = CN9.CN9_NUMERO AND
				CNB.CNB_REVISA = CN9.CN9_REVISA AND
				CNB.CNB_CONTRA = CNA.CNA_CONTRA AND
				CNB.CNB_REVISA = CNA.CNA_REVISA AND
				CNB.CNB_NUMERO = CNA.CNA_NUMERO AND
				CN9.CN9_TPCTO = CN1.CN1_CODIGO AND
				CN1.CN1_MEDEVE = '1' AND
				CN1.CN1_ESPCTR = '1' AND
				CNB.CNB_PRODUT = %Exp:aCols[n][nPProd]% AND
				CN9.CN9_DTFIM >= %Exp:cHoje% AND
				CN9.CN9_SITUAC = '05' AND 
				CN9.CN9_XREGP = '1' AND
				%Exp:nQuant% <= (CNB.CNB_QUANT - CNB.CNB_QTDMED) AND 
				CNB.CNB_SLDMED > '0' AND
				CNB.%NotDel% AND
				CNA.%NotDel% AND 
				CN9.%NotDel% 
						
						//Query do ponto de entrada
				   		%exp:cQuery% 						
			 //	ORDER BY CN9.CN9_NUMERO
			EndSQL       
		
			If(cTMP)->(!EOF()) .And. Empty(aCols[n][nPosCtr])
			     
				lRet := .F. 
				MsgAlert("Existe contrato vigente para este produto. Preencha o campo Contr. Preco")
				Exit				
			
			EndIf		
		
			Exit
		EndDo                   
		(cTMP)->(dbCloseArea()) 
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida o rateio da Solicitacao  |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If AliasInDic("SCX") .And. nPosRateio>0 .And. lRet
	If !l110Auto
	    // Valida Rateio - Inclusão manual
		If aCols[n,nPosRateio]=="1" .And. !Empty(aCols[n,nPosCC]) .And. !aCols[n][Len(aHeader)+1]
			If ValType(ACPISCX) == "A"
				nPosSCX=AScan(aCPHSCX, {|x| AllTrim (x[2])=="CX_ITEM"})
				If nPosSCX>0
					nPosSCX:= aScan(aCPISCX,{|x| x[1] == aCols[n,nPItem]})
					If nPosSCX >0
						If Len(aCPISCX[nPosSCX][2])>0
							MsgAlert(STR0084+STR0085) //"Não é permitido utilizar o Rateio por Centro de Custos e por Item simultaneamente."##"Verifique a coluna Centro Custo, Rateio e o Rateio por Item do Pedido"
							lRet:=.F.
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	ElseIf lRet
	    // Valida Rateio - Rotina Automática
		If !Empty(aCols[n,nPosCC]) .And. ValType(ACPISCX) == "A" .And. Len(ACPISCX) > 0 .And.;
		 	(nIt := aScan(ACPISCX,{|x| x[1] == aCols[n,nPItem]})) > 0
			For nX := 1 To Len(ACPISCX[nIt,2])
				If (nY := aScan(ACPISCX[nIT,2,nX],{|x| AllTrim(x[1]) == "CX_CC"})) > 0 .And. !Empty(ACPISCX[nIT,2,nX,nY,2])
					Aviso(STR0021,STR0084+STR0086,{"Ok"}) //"Não é permitido utilizar o Rateio por Centro de Custos e por Item simultaneamente."+"Verifique a coluna Centro Custo, Rateio e o Rateio por Item da Solicitação"
					lRet:=.F.
					Exit
				EndIf
			Next nX
		EndIf
	EndIf
EndIf
	
If lRet .And. (ExistBlock("MT110LOK"))
	lRet := ExecBlock("MT110LOK",.F.,.F.,{lRet,dA110Data})
	If ValType(lRet) <> "L"
    	lRet := .T.
    EndIf
EndIf
If lRet
	lRet:=	PcoVldLan('000051','01','MATA110',/*lUsaLote*/,lDeleted/*lDeleta*/, .T./*lVldLinGrade*/)
EndIf

RestArea(aArea)
Return(lRet)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110TudOk ³ Autor ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de avaliacao da getdados ( TudoOk )                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da GetDados                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: .T. -> GetDados valida                                ³±±
±±³          ³       .F. -> Getdados invalida                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao da solici- ³±±
±±³          ³tacao de compras para a rotina de atualizacao da solicitacao ³±±
±±³          ³de compra.                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110TudOk(o)

Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local aArea		 := GetArea()
Local nPItem     := aScan(aHeader,{|x| Trim(x[2])=="C1_ITEM"})
Local nPop       := aScan(aHeader,{|x| Trim(x[2])=="C1_OP"})
Local nPosPrd    := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_PRODUTO"})
Local nPosFor    := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_FORNECE"})
Local nPosLoj    := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_LOJA"})
Local nPosConta  := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_CONTA"})
Local nPosCC	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_CC"})
Local nPosCLVL	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C1_CLVL"})
Local nPosItemCTA:= aScan(aHeader,{|x| AllTrim(x[2]) == "C1_ITEMCTA"})
Local nPosPrefx  := iif (lPrjCni, aScan(aHeader,{|x| AllTrim(x[2]) == "C1_PREFIX"}), 0)
Local n_SaveLin	 := n 
Local nX       	 := 0
Local lDeleted	 := .F.
Local lRetorno 	 := .T.
Local l110Restr	 := .F.
  
Local _lBloq  	 := iif (lPrjCni, SuperGetMv("MV_APROVSC") , .F.)        
Local cxCusto	:= ''
Local cItemCTB	:= ''
Local cPrefixo   := ''
Local nTamPrefix := iif (lPrjCni, TamSX3("CT1_PREFIXO")[1], 0)
Local cPrefixCta := iif (lPrjCni, Left(aCols[1][nPosConta],nTamPrefix), '')
Local nPosOrigem := iif (lPrjCni, aScan(aHeader,{|x| AllTrim(x[2])=="C1_ORIGEM"}), 0) 

l110Alt := IIf(ValType(l110Alt) == "L",l110Alt,.F.)
lCopia	:= IIf(ValType(lCopia)  == "L",lCopia,.F.)

if lPrjCni
   if INCLUI .Or. ALTERA
      //Valida Prefixo da conta vinda da rotina de SCs por ponto de pedido 
      For nX := 1 To Len(aCols)
         if !(Alltrim(aCols[nX,nPosOrigem]) $ "MATA106/MATA170") 
            If (Left(aCols[nX][nPosConta],nTamPrefix) != cPrefixCta) .AND. !(aCols[nX,Len(aCols[nX])])
               Aviso(OemToAnsi(STR0021),OemToAnsi("O prefixo da conta contábil deve ser o mesmo para todos os itens da solicitação de compras."),{"Ok"})
               lRetorno := .F.
               Exit
            EndIf
         EndIf
      Next nX
      If ! lRetorno
         Return(lRetorno)
      EndIf
    EndIf     
EndIf

If ( !INCLUI )
	For nX := 1 To Len(aCols)                                    
	    
	    if lPrjCni 
			If Empty(cPrefixo) .and. !aCols[nX,Len(aHeader)+1]
				cPrefixo := aCols[nx][nPosPrefx] 
			EndIf
		EndIf
		
		If ValType(aCols[nX,Len(aCols[nX])]) == "L"
			lDeleted := aCols[nX,Len(aCols[nX])]
		EndIf
		If ( lDeleted )
			dbSelectArea("SC1")
			dbSetOrder(1)
			If ( MsSeek(xFilial("SC1")+cA110Num+aCols[n][nPItem]) )
				lRetorno := MaCanDelSC("SC1")
			EndIf
			If ( !lRetorno )
				Exit
			EndIf
		EndIf
		// Validacao das linhas do aCols utilizado no momento da Copia.
		If lCopia .And. !l110Alt
			If !aCols[nX][Len(aCols[nX])]
				dbSelectArea("SB1")
				dbSetOrder(1)
				If ( MsSeek(xFilial("SB1")+aCols[nX,nPosPrd]) )	
					If SB1->B1_SOLICIT =="S" .And. GetMv("MV_RESTSOL")=="S" .And. Iif( l110Restr, !A110Restr((aCols[nX,nPosPrd]),UsrRetGrp(),RetCodUsr(),.F.), !A110Restr((aCols[nX,nPosPrd]),UsrRetGrp(),RetCodUsr()) )
						lRetorno := .F. 
						aCols[nX][Len(aCols[nX])] := .T.
						If Type("l110Auto") == "U" .Or. !l110Auto 
							If !l110Restr
								o:nAt := nX						
								o:SetFocus()    
							EndIf	
							o:Refresh() 
                    	EndIf
						l110Restr := .T.
					EndIf	
				EndIf
			EndIf 
		EndIf	

		If lRetorno .And. (lCopia .Or. l110Alt)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se valida ou nao o aCols a partir das validacoes do aHeader ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lPrjCNI
				cxCusto	:= cCusto
				cItemCTB:= _cItCta
			Else
				If nPosCC > 0
					cxCusto := aCols[nX,nPosCC]
				EndIf
				If nPosItemCTA > 0
					cItemCTB:= aCols[nX,nPosItemCTA]
				EndIf
			EndIf

			If lVldHead .And. FindFunction("VldHead") .And. ( Type("l110Auto") == "U" .Or. !l110Auto )
				If nPosConta <> 0 .And. nPosCC>0 .And. nPosItemCta <> 0 .And. nPosClVl <> 0 .And.;
					!CtbAmarra(aCols[nX,nPosConta],cxCusto,cItemCTB,aCols[nX,nPosCLVL])
					lRetorno := .F.
					Exit
				Endif
				If !VldHead(aCols,aHeader,nX,o)
					lRetorno := .F.
					Exit
				Endif
				n := n_SaveLin        
				
			ElseIf nPosConta <> 0 .And. nPosCC>0 .And. nPosItemCta <> 0 .And. nPosClVl <> 0 .And.;
				(!CtbAmarra(aCols[nX,nPosConta],cxCusto,cItemCTB,aCols[nX,nPosCLVL]) .Or.;
				(!Empty(aCols[nX,nPosConta]) .And. !Ctb105Cta(aCols[nX,nPosConta])) .Or.;
				(!Empty(aCols[nX,nPosCC]) .And. !Ctb105CC(aCols[nX,nPosCC])) .Or.;
				(!Empty(aCols[nX,nPosItemCTA]) .And. !Ctb105Item(aCols[nX,nPosItemCTA])) .Or.;
				(!Empty(aCols[nX,nPosCLVL]) .And. !Ctb105ClVl(aCols[nX,nPosCLVL])))
							
				lRetorno := .F.
				Exit
			Endif
		Endif
		
	Next nX
Else
	For nX := 1 To Len(aCols)                   
		if lPrjCni
			If Empty(cPrefixo) .and. !aCols[nX,Len(aHeader)+1]
				cPrefixo := aCols[nx][nPosPrefx]   
			EndIf
		EndIf
		
		If !aCols[nX][Len(aCols[nX])]
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ VerIfica se o produto x fornecedor foi bloqueado pela Qualidade.	                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If GETMV("MV_SIGAGSP")<> "1" .And. nPosFor > 0 .And. nPosLoj > 0 
				If !Empty(aCols[nX][nPosFor]) .And. !Empty(aCols[nX][nPosLoj])
					If !QieSitFornec(aCols[nX][nPosFor],aCols[nX][nPosLoj],aCols[nX][nPosPrd],.F.)
						Help(" ",1,"A120BLQFO",,OemToAnsi(STR0040)+Alltrim(aCols[nX][nPosPrd])+OemToAnsi(STR0041),1,11) //"O produto " ### " foi bloqueado pela Qualidade para esse Fornecedor."
						lRetorno := .F.
						Exit
					EndIf
				EndIf
			EndIf
		EndIf
    Next nX
EndIf
                              
if lPrjCni
	// 05/05/2011 - Gravacao das informacoes
	//Verificacao de Cadastro de Aprovador     
	IF GETMV("MV_APROVSC")
		COJ->(dbSetOrder(1))
		IF COJ->(dbSeek(xFilial("COJ")+cCusto+cPrefixo))
		  	aEval(aCols,{|x| x[GDFieldPos("C1_XGRPAPR")] := COJ->COJ_COD })
		ELSEIF COJ->(dbSeek(xFilial("COJ")+cCusto+Space(Len(cPrefixo))))
		  	aEval(aCols,{|x| x[GDFieldPos("C1_XGRPAPR")] := COJ->COJ_COD })
		ELSE
			Aviso(STR0021,"Centro de Custo e Prefixo de Conta Contabil nao possuem aprovador cadastrado.",{"Voltar"},2)
			Return .F.
		ENDIF		              
	ENDIF
	
	aEval(aCols,{|x| x[GDFieldPos("C1_CC")] := cCusto })
EndIf

If (ExistBlock("MT110TOK"))
	lRetorno := ExecBlock("MT110TOK",.F.,.F.,{lRetorno,dA110Data})
	If ValType(lRetorno) <> "L"
    	lRetorno := .T.
    EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-Ä¿
//³ Conforme situacao do parametro abaixo, integra com o SIGAGSP ³
//³             MV_SIGAGSP - 0-Nao / 1-Integra                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÙ
If SuperGetMV("MV_SIGAGSP",.F.,"0") == "1"
	lRetorno := GSPF140()
EndIf

/*
Função para validar alteração de informações principais da SC.
Caso esta tenha sido gerada pelo SIGAPMS, algumas informações 
deverão ser preservadas por motivo de consistencia de dados.
*/
If lRetorno .and. IntePms() .and. FindFunction("PmsVldSC")
	lRetorno := PmsVldSC(aHeader,aCols,cA110Num)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se validacao do bloqueio do pco e no final, ³
//³em caso positivo valida todas as linhas              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If PcoBlqFim({{"000051","01"}})
	n_SaveLin := n
	For nX := 1 To Len(aCols)
		If !aCols[nX][Len(aCols[nX])]
		    n := nX
			If lRetorno
				lRetorno := PcoVldLan('000051','01','MATA110',/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)
				If ! lRetorno
					Exit
				EndIf
			EndIf
		EndIf
	Next
	n := n_SaveLin
EndIf
//Verificar se tem integracao com Manutencao de ativos e chama a funcao para checar a garantia do produto.
If SuperGetMV("MV_NGMNTCM",.F.,"") == "S" .And. FindFunction("MNTGGAR")
	MNTGGAR()
EndIf	

RestArea(aArea)
Return(lRetorno)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Grava ³Rev.   ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao da tabela de solicitacao de compras    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto da GetDados                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: nOpcao sendo:                                         ³±±
±±³          ³       [1] Inclusao                                          ³±±
±±³          ³       [2] Alteracao                                         ³±±
±±³          ³       [3] Exclusao                                          ³±±
±±³          ³ExpC2: Numero da Solicitacao                                 ³±±
±±³          ³ExpC3: Codigo do Solicitante                                 ³±±
±±³          ³ExpD4: Data de Emissao                                       ³±±
±±³          ³ExpC5: Centro de Custo                                       ³±±
±±³          ³ExpC6: Unidade Requisitante                                  ³±±
±±³          ³ExpC7: Codigo do Comprador                                   ³±±
±±³          ³ExpC8: Codigo da Filial de Entrega                           ³±±
±±³          ³ExpC9: Codigo da Natureza                                    ³±±
±±³          ³ExpA10 = Array aHeader de rateio da solicitacao de compra    ³±±
±±³          ³ExpA11 = Array aCols de rateio da solicitacao de compra      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao da solici- ³±±
±±³          ³tacao de compras para a rotina de atualizacao da solicitacao ³±±
±±³          ³de compra.                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Grava(nOpcao,ca110Num,cSolic,dA110Data,cCCusto,cUnidreq,cCodCompr,cFilEnt,cCodNatu,cTpOP,aHeadSCX,aColsSCX)

Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local aAreaSM0  := {}
Local aFiliais  := {}
Local cRatFin	:= "2"
Local aRegistro := {}
Local lQuery    := .F.
Local lDeleted  := .F.
Local lMT110GRV	:= ExistBlock("MT110GRV")
Local cMayCode	:= ""
Local cOldNum   := cA110Num
Local cAliasSC1 := "SC1"
Local nX        := 0
Local nY        := 0
Local nZ		:= 0
Local nW		:= 0
Local nCntFor   := 0
// Variaveis criadas para controle de SC gerada por PV atraves do programa MATA650
Local nAchoPv   := 0, cStringPV:="",cNum:="",cItem:=""
Local aRegsSC6	:={}
Local lNaturez  := (FieldPos("C1_NATUREZ") > 0 .And. cPaisLoc <> "BRA")
Local lContinua := .T.
Local bWhile    := {|| .F.}
Local nLoop, nLoop1, nLoop2, nLoop3, nLoop4, nRecno, nField
Local nPItem    := aScan(aHeader, {|z| Alltrim(z[2]) == "C1_ITEM"})
Local nPosRecno := aScan(aHeader, {|z| AllTrim(z[2]) == "C1_REC_WT"})
Local nPosQuant := aScan(aHeader, {|z| AllTrim(z[2]) == "C1_QUANT"})
Local nPosGrade := aScan(aHeader, {|z| AllTrim(z[2]) == "C1_GRADE"})
Local nProduto   := aScan(aHeader, {|z| AllTrim(z[2]) == "C1_PRODUTO"})
Local lSb1TES    := SC1->(FieldPos("C1_ESTOQUE")) > 0 .And. SuperGetMv("MV_SB1TES",.F.,.F.)
Local lApsDrummer:= SuperGetMv("MV_APS",.F.,"")=="DRUMMER"
Local nPos      := 0 
Local cUnico    
Local cCodEnt   
Local lAtuSGJ	:= SuperGetMV("MV_PVCOMOP",.F.,.F.) .And. FindFunction("ALIASINDIC") .And. AliasIndic("SGJ")
Local aAreaAFG
Local cFilBkp   := cFilAnt
Local lGeraSCR  := SuperGetMv("MV_APROVSC",.F.,.F.) .AND. SuperGetMv("MV_APRSCEC",.F.,.F.) .AND. FindFunction("MaEntCtb")
Local lBloqSC	 := .T.
Local cEventID   := 0    // Variavel usada para armazenar o ID do EventViewer
Local cMensagem  := " " // Variavel para armazenar a mensagem utilizada no eventviewer

#IfDEF TOP
	Local aEstruSC1 := SC1->(dbStruct())
	Local aStru := SC1->(dbStruct())
	Local cQuery:= ""
#ENDIf
DEFAULT cFilEnt  := cFilAnt
DEFAULT cCodNatu := ""
DEFAULT aHeadSCX := {}
DEFAULT aColsSCX := {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ VerIfica se a rotina esta sendo chamada da Proj.Estoques NOVA ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lProjM711:=If(Type("lProjM711") == "L",lProjM711,.F.) 
lCopia   := IIf(ValType(lCopia) == "L",lCopia,.F.)

If ExistBlock("MT110CON")
	lContinua := (Execblock("MT110CON",.F.,.F.,{ca110Num,cSolic,dA110Data,cCCusto,cUnidreq,cCodCompr}))
	If ValType(lContinua) <> "L"
    	lContinua := .T.
    EndIf
EndIf             

If lContinua
	If nOpcao == 2
		For nLoop:=1 to Len(oGrade:aRecno)
			For nLoop2:=1 to len(oGrade:aRecno[nLoop])
				For nLoop3:=1 to len(oGrade:aRecno[nloop,nLoop2])
					nRecno:=oGrade:aRecno[nLoop,nLoop2,nLoop3]
					If aCols[nLoop, nPosGrade] # "S" .And. nRecno>0
						If Ascan(aCols,{|x| x[nPosRecno]==nRecno})==0
							dbSelectArea("SC1")
							MsGoto(nRecno)
							Aadd(aCols, Array(Len(aHeader) + 1))
							For nLoop4 := 1 to Len(aHeader)
								If (nField := FieldPos(aHeader[nLoop4, 2])) > 0
									Atail(aCols)[nLoop4] := FieldGet(nField)
								EndIf
							Next
							GDFieldPut("C1_ALI_WT", "SC1" , Len(aCols), aHeader, aCols)
							GDFieldPut("C1_REC_WT", nRecno, Len(aCols), aHeader, aCols)
							Atail(aCols)[Len(aHeader) + 1] := .T.
						EndIf	
					EndIf
				Next
			Next
		Next
	EndIf
	
	If ( nOpcao == 1 )
		
		if lPrjCni
	
			If SuperGetMV("MV_APS",.F.,"") == "TOTVS" .And. FindFunction("TAPSGetNum")
				aAreaSM0 := SM0->(GetArea())    
				SM0->(DbSetOrder(1)) 
				SM0->(DbSeek(cEmpAnt))

				While SM0->(!Eof()) .And. SM0->M0_CODIGO == cEmpAnt
					aAdd(aFiliais,FWGETCODFILIAL)
					SM0->(DbSkip())
				End
				RestArea(aAreaSM0)  
				                                                       
				dbSelectArea("SC1")
				dbSetOrder(1)
	
				For nX := 1 to len(aFiliais)
					If MsSeek(aFiliais[nX]+cA110Num)
						cA110Num := TAPSGetNum("SC1")
						If cA110Num # cOldNum
							Exit
						EndIf
					EndIf
				Next nX	
	
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Consistir o numero da solicitacao de compra                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( Empty(cA110Num) )
					cA110Num := NextNumero(cAliasSC1,1,"C1_NUM",.F.,cA110Num)
				EndIf
				If ( INCLUI )
					cMayCode := "SC1"+xFilial("SC1")+cA110Num
					dbSelectArea("SC1")
					dbSetOrder(1)                         
					DbSeek(xFilial("SC1")+cA110Num)
					While SC1->(! EOF()) .And. (SC1->C1_FILIAL+SC1->C1_NUM == xFilial("SC1")+cA110Num .Or. !FreeUsedCode(cMayCode) )
						cA110Num := Soma1(cA110Num,Len(cA110Num))
						cMayCode := "SC1"+xFilial("SC1")+cA110Num
						SC1->(DbSkip())
					EndDo
				EndIf    
			EndIf     
		
			If ( cA110Num != cOldNum )
				If PutByAPS() .And. Type('cWSMAT110') == "C"
					cWSMAT110 := cA110Num
				Else
					If !l110Auto
						HELP(" ",1,"NUMSEQ",,cA110Num,4,15)
					EndIf
				EndIf
			EndIf
		
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Consistir o numero da solicitacao de compra                           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( Empty(cA110Num) )
				cA110Num := NextNumero(cAliasSC1,1,"C1_NUM",.F.,cA110Num)
			EndIf
			If ( INCLUI )
				cMayCode := "SC1"+xFilial("SC1")+cA110Num
				dbSelectArea("SC1")
				dbSetOrder(1)                         
				DbSeek(xFilial("SC1")+cA110Num)
				While(SC1->C1_FILIAL+SC1->C1_NUM == xFilial("SC1")+cA110Num .Or. (!FreeUsedCode(cMayCode) .AND. !SC1->(EOF())) )
					cA110Num := Soma1(cA110Num,Len(cA110Num))
					cMayCode := "SC1"+xFilial("SC1")+cA110Num
					SC1->(DbSkip())
				EndDo
			EndIf    
			
			If ( cA110Num != cOldNum )
				If PutByAPS() .And. Type('cWSMAT110') == "C"
					cWSMAT110 := cA110Num
				Else
					If !l110Auto
						HELP(" ",1,"NUMSEQ",,cA110Num,4,15)
					EndIf
				EndIf
			EndIf         
			
		EndIf
		
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Estornar os valores acumulados da solicitacao de compra               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC1")
		dbSetOrder(1)
		#IfDEF TOP
			If ( TcSrvType()<>"AS/400" )
				lQuery 		:= .T.
				cAliasSC1	:= "A110GRAVA"
				cQuery := "SELECT "
				//-- Tratamento utilizado para ignorar campos MEMO.
				For nX := 1 To Len(aEstruSC1)
					If !(aEstruSC1[nX,2]=='M')
						If nX > 1
							cQuery += ", "
						EndIf
						cQuery += aEstruSC1[nX,1]
					EndIf
				Next
				cQuery += ", R_E_C_N_O_ SC1RECNO "
				cQuery += " FROM "+RetSqlName("SC1")+" SC1 "
				cQuery += " WHERE SC1.C1_FILIAL='"+xFilial("SC1")+"' AND "
				cQuery += " SC1.C1_NUM='"+cA110Num+"' AND "
				cQuery += " SC1.D_E_L_E_T_<>'*' "
				cQuery += " ORDER BY "+SqlOrder(SC1->(IndexKey()))
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC1,.T.,.T.)
				For nX := 1 To Len(aStru)
					If ( aStru[nX][2] <> "C" )
						TcSetField(cAliasSC1,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
					EndIf
				Next nX
			Else
		#ENDIf
			MsSeek(xFilial("SC1")+cA110Num)
			#IfDEF TOP
			EndIf
			#ENDIf
		While ( !Eof() .And. (cAliasSC1)->C1_FILIAL == xFilial("SC1") .And. (cAliasSC1)->C1_NUM == cA110Num )
		    // Ascan foi implementado em função de situações onde for aplicado o PE MT110FIL, o acols é montado com
		    // base no filtro que foi aplicado porém, a query considera todos os itens da SC o que fazia com o que o
		    // array aRegistro apontasse para um registro não existente no Acols
	        If aScan(aCols, {|aX| aX[nPItem]==(cAliasSC1)->C1_ITEM})>0    
				AADD(aRegistro,If(lQuery,(cAliasSC1)->SC1RECNO,SC1->(RecNo())))
				MaAvalSC(cAliasSC1,2)
		    EndIf
			dbSelectArea(cAliasSC1)
			dbSkip()
		EndDo
		If ( lQuery )
			dbSelectArea(cAliasSC1)
			dbCloseArea()
			dbSelectArea("SC1")
		EndIf
	EndIf                         
	
	if lPrjCni
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se existe rateio financeiro                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cChaveRat := "SC1"+xFilial("SC1")+cA110Num
		FRZ->(dbSetOrder(2))
		FRZ->(dbSeek(xFilial("FRZ")+SubStr(cChaveRat+Space(TamSX3("FRZ_CHAVE")[1]),1,TamSX3("FRZ_CHAVE")[1])))
		While FRZ->(!eof()) .and. SubStr(cChaveRat+Space(TamSX3("FRZ_CHAVE")[1]),1,TamSX3("FRZ_CHAVE")[1]) == FRZ->FRZ_CHAVE
			cRatFin := "1"
			Exit
		EndDo
	EndIf
	     
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Montagem dos dados da execauto de rateio ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AliasIndic("SCX") .And. Type("aRatSC") == "A" .And. Len(aRatSC) > 0
		DbSelectArea("SX3")
		DbSetOrder(1)
		MsSeek("SCX")
		aHeadSCX := {}
		aColsSCX := {} 
		While ( !EOF() .And. SX3->X3_ARQUIVO == "SCX" )
			If X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !"CX_CUSTO"$SX3->X3_CAMPO
				aadd(aHeadSCX,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT })
			EndIf
			DbSelectArea("SX3")
			dbSkip()
		EndDo
		aColsSCX  := M110AutRat(aClone(aRatSC),aHeadSCX)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Caso Alteração Automatica deleta os rateios ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		If Type( "nAutoAdt" ) == "N" .And. nAutoAdt==4 .And. Len(aRatSC) > 0
			aAreaSCX := GetArea()
			SCX->(DbSetOrder(1))
			If SCX->(MsSeek(xFilial("SCX")+SC1->C1_NUM))
				While !SCX->(EOF()) .and. (xFilial("SCX")+SC1->C1_NUM==SCX->CX_FILIAL+SCX->CX_SOLICIT)
					RecLock("SCX",.F.)
					SCX->(dbDelete())
					MsUnlock()
					SCX->(DbSkip())
				EndDo
			EndIf
			RestArea(aAreaSCX)
		EndIf
	Endif	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Montagem dos dados da execauto de rateio por projeto³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AliasIndic("AFG") .And. Type("aRatProj") == "A" .And. Len(aRatProj) > 0
		If Type( "nAutoAdt" ) == "N" .And. nAutoAdt==4 .And. Len(aRatProj) > 0
			dbSelectArea("AFG")
			aAreaAFG := GetArea()
			SCX->(DbSetOrder(2))
			If SCX->(MsSeek(xFilial("AFG")+SC1->C1_NUM))
				While !SCX->(EOF()) .and. (xFilial("AFG")+SC1->C1_NUM==AFG->AFG_FILIAL+AFG->AFG_NUMSC)
					RecLock("AFG",.F.)
					AFG->(dbDelete())
					MsUnlock()
					AFG->(DbSkip())
				EndDo
			EndIf
			RestArea(aAreaAFG)
		EndIf
	Endif	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Efetua a atualizacao da tabela de solicitacao de compra               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC1")
	dbSetOrder(1)
	For nX := 1 To Len(aCols)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³VerIfico se a linha foi deletada.                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ValType(aCols[nX,Len(aCols[nX])]) == "L"
			lDeleted := aCols[nX,Len(aCols[nX])]
		EndIf
		If ( nOpcao == 3 )
			lDeleted := .T.
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Posiciono no registro para alteracao/exclusao                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( Len(aRegistro) >= nx )
			dbSelectArea("SC1")
			dbGoto( aRegistro[nx] )
			RecLock("SC1",.F.)
		Else
			If ( !lDeleted )
				RecLock("SC1",.T.)
			EndIf
		EndIf
		If ( !lDeleted )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza dados padroes da solicitacao de compras         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			SC1->C1_FILIAL  := xFilial("SC1")
			SC1->C1_NUM     := cA110Num
			SC1->C1_EMISSAO := dA110Data
			SC1->C1_SOLICIT := cSolic
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ cNumSCWS - Variavel utilizada na integracao com o RM Solum para   ³
			//³            recuperar o numero da SC gerada pela rotina Automatica.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   			If Type('cNumSCWS') <> "U"
	   			cNumSCWS := cA110Num
			EndIf      
			
			if lPrjCni
				SC1->C1_XTIPOSC := cTpSC  // Grava campo Tipo de documento
				SC1->C1_XNUMCT  := cNumCt  // Grava campo Numero Contrato
				SC1->C1_XNUMREV := AllTrim(cNumRev)  // Grava campo Revisao Ct.
				SC1->C1_XSOL    := cReqSol  // Grava campo Requisitante
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza dados do corpo da SC selecionados pelo cliente  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			For nY := 1 to Len(aHeader)
				If ( aHeader[nY][10] <> "V" )
					SC1->(FieldPut(FieldPos(Trim(aHeader[nY][2])),aCols[nX][nY]))
				EndIf
			Next nY
			
			//-- Tratamento para integracao com TOTVS APS
			If SuperGetMV("MV_APS",.F.,"") == "TOTVS" .And. l110Auto .And. SC1->(FieldPos("C1_IDAPS")) > 0 
				If (nY := aScan(aAutoItens[1],{|x| AllTrim(x[1]) == "C1_ITEM"})) == 0
					If (nY := aScan(aAutoItens[1],{|x| AllTrim(x[1]) == "LINPOS" .And. AllTrim(x[2]) == "C1_ITEM"})) > 0
						nW := aScan(aAutoItens,{|x| x[nY,3] == SC1->C1_ITEM})
					EndIf
				Else
					nW := aScan(aAutoItens,{|x| x[nY,2] == SC1->C1_ITEM})										
				EndIf
				If !Empty(nW) .And. !Empty(nY := aScan(aAutoItens[nW],{|x| AllTrim(x[1]) == "C1_IDAPS"}))
					SC1->C1_IDAPS := aAutoItens[nW,nY,2]
				EndIf
			EndIf
			
			if lPrjCni
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Rateio financeiro                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SC1->C1_RATFIN := cRatFin  // 1 = Sim; 2 = Nao
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se item para importacao,                                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			SC1->C1_FILENT  := cFilEnt
			SC1->C1_UNIDREQ := cUnidReq
			SC1->C1_CODCOMP := cCodCompr
			SC1->C1_QTDORIG := SC1->C1_QUANT
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Preenche se é firme ou previsto                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SuperGetMV("MV_TPOPDOC",.F.,.F.)
				SC1->C1_TPOP := cTpOP
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ C1_ESTOQUE - campo para controlar o B2_SALPEDI           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
			If lSb1TES
				SB1->(dbSetOrder(1))
				If SB1->(MsSeek(xFilial("SB1")+aCols[nX][nProduto]))
	            	If !Empty(SB1->B1_TE)
						SF4->(dbSetOrder(1))
						If SF4->(MsSeek(xFilial("SF4")+SB1->B1_TE))
		     				SC1->C1_ESTOQUE := SF4->F4_ESTOQUE
		     			EndIf
		     		EndIf	
     			EndIf	
			EndIf
			
			If lNaturez
				SC1->C1_NATUREZ := cCodNatu
			EndIf
			If SC1->(FieldPos("C1_TIPO"))>0
  				SC1->C1_TIPO := 1
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Tratamento p/ geracao de SCs atraves da int. c/ Drummer APS  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If l110Auto .And. lApsDrummer
				If n <= Len(aAutoItens)
					nPos := aScan(aAutoItens[n],{|x| x[1] == "C1_TPOP"})
					If nPos > 0
						If aAutoItens[n,nPos,2] == "P"
							SC1->C1_TPOP := "P"
						EndIf
					EndIf
				EndIf
			EndIf
 
			If lProjM711
				// Se a Solicitacao de Compra for gerada pelo MRP sem vinculo com Ordem de Producao
				If Empty(SC1->C1_OP) .AND. FindFunction("A710VerHf")
					SC1->C1_TPOP := IIf(lDiasHf,A710VerHf(SC1->C1_DATPRF,SC1->C1_PRODUTO),If(aPergs711[10] == 1,"F","P"))
				ElseIf Empty(SC1->C1_OP) .AND. aPergs711[10] == 2
					SC1->C1_TPOP := "P"
				EndIf
				// Atualiza campos de entrada e Necessidade
				If !lMata712
					A711CriSH5(SC1->C1_DATPRF,SC1->C1_PRODUTO,SC2->C2_OPC,Space(Len(SB1->B1_REVATU)),"SC1",SC1->(Recno()),SC1->C1_NUM,SC1->C1_ITEM,SC1->C1_OP,Max(0,SC1->C1_QUANT-SC1->C1_QUJE),"2",.T.,NIL,NIL,.T.)
				Else
					A712CriCZI(SC1->C1_DATPRF,SC1->C1_PRODUTO,SC2->C2_OPC,Space(Len(SB1->B1_REVATU)),"SC1",SC1->(Recno()),SC1->C1_NUM,SC1->C1_ITEM,SC1->C1_OP,Max(0,SC1->C1_QUANT-SC1->C1_QUJE),"2",.T.,/*13*/,/*14*/,.F.,/*16*/,/*17*/,/*18*/,/*19*/,/*20*/,/*21*/,/*22*/,/*23*/,/*24*/,/*25*/,/*26*/)
				EndIf
			EndIf
			MaAvalSC("SC1",1)
			//Caio.Santos - 11/01/13 - Req.72
			If lPrjCni
				RSTSCLOG("SOL",1,/*cUsrWF*/)
			EndIf
		Else
			If ( Len(aRegistro) >= nx )
				MaAvalSC("SC1",3)
				// VERIfICA SE ITEM FOI GERADO POR PV. CASO SEJA VOLTA STATUS DO PEDIDO DE VENDA
				cStringPV:=SC1->C1_OBS
				nAchoPV:=AT("#",cStringPV)
				If nAchoPV > 0 .And. AT("PV",cStringPV) > 0
					cNum        :=Substr(cStringPV,nAchoPV+1,LEN(SC6->C6_NUM))
					cStringPV   :=Substr(cStringPV,nAchoPV+2+LEN(SC6->C6_NUM))
					cItem       :=Substr(cStringPV,1,LEN(SC6->C6_ITEM))
					dbSelectArea("SC6")
					dbSetOrder(1)
					dbSeek(xFilial("SC6")+cNum+cItem+SC1->C1_PRODUTO)
					bWhile      := {||!Eof() .And. xFilial("SC6")+cNum+cItem+SC1->C1_PRODUTO == SC6->C6_FILIAL+SC6->C6_NUM+SC6->C6_ITEM+SC6->C6_PRODUTO }
				Else
					dbSelectArea("SC6")
					If SC6->(FieldPos('C6_NUMSC')) > 0 .And. SC6->(FieldPos('C6_ITEMSC')) > 0 .And. A110IndSC6()
					    cNum  := SC1->C1_NUM
					    cItem := SC1->C1_ITEM
						dbSetOrder(9)
						dbSeek(xFilial("SC6")+SC1->C1_NUM+SC1->C1_ITEM)
						bWhile := {||!Eof() .And. xFilial("SC6")+cNum+cItem == SC6->C6_FILIAL+SC6->C6_NUMSC+SC6->C6_ITEMSC}
					EndIf
				EndIf
				aRegsSC6:={}
				dbSelectArea("SB2")
				dbSetOrder(1)
				dbSeek(xFilial("SB2")+SC1->(C1_PRODUTO+C1_LOCAL))
				If !Found()
					CriaSB2(SC1->C1_PRODUTO,SC1->C1_LOCAL)
					MsUnLock()
				EndIf
				
				While Eval(bWhile)
					If !Empty(SC6->C6_NOTA) .And. !Empty(SC6->C6_SERIE) .And. !Empty(SC6->C6_DATFAT)
						Help(" ",1,"A650NOTA",,SC6->C6_NOTA+" / "+SC6->C6_SERIE+" de "+DTOC(SC6->C6_DATFAT)+".",02,13)
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Caso esteja OK, desmarca o pedido,liberando o mesmo para ³
					//³ OPs novamente                                            ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SC6->C6_OP $ "01#03"
						AADD(aRegsSC6,SC6->(Recno()))
					EndIf
					nQuantSC6:=(SC6->C6_QTDVEN-SC6->C6_QTDENT-SC6->C6_QTDRESE)
					If SC6->C6_OP != "03"
						If ( lAtuSGJ <> NIL .And. !lAtuSGJ )
							A650AtEmpn(nQuantSC6 - If(FindFunction("A650QLibPV"),A650QLibPV(),0),"-",SC1->C1_TPOP)
						Endif
					EndIf
					dbSelectArea("SC6")
					dbSkip()
			   	EndDo
			   	
				// Limpa numero das OPs dos Pedidos de Venda
				For nCntFor:=1 to Len(aRegsSC6)
					dbGoto(aRegsSC6[nCntFor])
					RecLock("SC6",.F.)
					If SC6->C6_QTDEMP > 0
					   Replace SC6->C6_OP With "07"
					Else
					   Replace SC6->C6_OP With IIf(SC6->C6_OP=="01","  ","02")
					EndIf
					Replace SC6->C6_OK     With ""
                   	If SC6->(FieldPos('C6_NUMSC')) > 0 .And. SC6->(FieldPos('C6_ITEMSC')) > 0
                   		Replace SC6->C6_NUMSC  With Space(Len(SC6->C6_NUMSC))
                   		Replace SC6->C6_ITEMSC With Space(Len(SC6->C6_ITEMSC))
                   	EndIf
					MsUnLock()
				Next nCntFor

				if lPrjCni
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Rateio financeiro                                                     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If cRatFin == "1"		
						cChaveRat := "SC1"+xFilial("SC1")+cA110Num
						FRZ->(dbSetOrder(2))
						FRZ->(dbSeek(xFilial("FRZ")+SubStr(cChaveRat+Space(TamSX3("FRZ_CHAVE")[1]),1,TamSX3("FRZ_CHAVE")[1])))
						While FRZ->(!eof()) .and. SubStr(cChaveRat+Space(TamSX3("FRZ_CHAVE")[1]),1,TamSX3("FRZ_CHAVE")[1]) == FRZ->FRZ_CHAVE
							RecLock("FRZ",.F.)
								FRZ->(dbDelete())
							FRZ->(MsUnLock())
							FRZ->(dbSkip())
						EndDo
						cRatFin := "2" 
					EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Efetua a Exclusão do Rateio³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
                If AliasInDic("SCX")
                	If nOpcao == 3
                		SCX->(dbSetOrder(1))  
                		SCX->(dbSeek(xFilial("SCX")+SC1->C1_NUM+aCols[nX,nPItem]))
                		While SCX->(!EOF()) .And. SCX->(CX_FILIAL+CX_SOLICIT+CX_ITEMSOL) == xFilial("SCX")+SC1->C1_NUM+aCols[nX,nPItem]
							RecLock("SCX",.F.)
							SCX->(dbDelete())
							MsUnlock()
							SCX->(dbSkip())
	        			EndDo                	
                	Else
	    				aAreaSCX := GetArea()
						If (nY	:= aScan(aColsSCX,{|x| x[1] == SC1->C1_ITEM})) > 0
							For nZ := 1 To Len(aColsSCX[nY][2])
								SCX->(DbSetOrder(1))
								If SCX->(MsSeek(xFilial("SCX")+SC1->C1_NUM+SC1->C1_ITEM+GdFieldGet("CX_ITEM",nz,NIL,aHeadSCX,ACLONE(aColsSCX[NY,2]))))
									RecLock("SCX",.F.)
									SCX->(dbDelete())
									MsUnlock()
	        					EndIf
							Next nZ
						EndIf
						RestArea(aAreaSCX)
					EndIf
                EndIf
 			    DbSelectarea("SC1")
				SX2->(dbSetOrder(1)) 
				If SX2->(dbSeek("SC1"))  
					If !Empty(SX2->X2_UNICO)
                		cUnico   := SX2->X2_UNICO 
		   				cCodEnt  := &cUnico 
						MsDocGrv("SC1",cCodEnt,,.T.)
                	Endif                            
                Endif
				SC1->(dbDelete())
				//Caio.Santos - 11/01/13 - Req.72
				If lPrjCni
					RSTSCLOG("SOL",2,/*cUsrWF*/)
				EndIf
			EndIf
		EndIf
		SC1->(MsUnLock())
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualizacao do rateio dos itens do documento de entrada                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If AliasInDic("SCX")	
			SCX->(DbSetOrder(1)) 
			If (nY	:= aScan(aColsSCX,{|x| x[1] == SC1->C1_ITEM})) > 0
				For nZ := 1 To Len(aColsSCX[nY][2])
					nItemSCX := aScan(aHeadSCX, {|x| AllTrim (x[2])=="CX_ITEM"})
					cItemSCX := aColsSCX[nY][2][nZ][nItemSCX]
					lAchou := SCX->(MsSeek(xFilial("SCX")+SC1->C1_NUM+SC1->C1_ITEM+cItemSCX))
					If !aColsSCX[nY,2,nZ,Len(aHeadSCX)+1] .And. ! lDeleted .And. SC1->C1_RATEIO == "1" 
						RecLock("SCX",!lAchou)
						For nW := 1 To Len(aHeadSCX)
							If aHeadSCX[nW][10] <> "V"
								SCX->(FieldPut(FieldPos(aHeadSCX[nW][2]),aColsSCX[nY][2][nZ][nW]))
							EndIf
						Next nW
						SCX->CX_FILIAL	:= xFilial("SCX")
						SCX->CX_SOLICIT	:= SC1->C1_NUM
						SCX->CX_ITEMSOL	:= SC1->C1_ITEM
						MsUnlock()
					ElseIf lAchou
						RecLock("SCX",.F.)
						SCX->(dbDelete())
						MsUnlock()	
					EndIf
				Next nZ						
				If ALTERA
				    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Exclui do BD os rateios que foram marcados para delecao  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SCX->(MsSeek(xFilial("SCX")+SC1->C1_NUM+SC1->C1_ITEM))
					While !SCX->(EOF()) .and. (xFilial("SCX")+SC1->C1_NUM+SC1->C1_ITEM==SCX->CX_FILIAL+SCX->CX_SOLICIT+SCX->CX_ITEMSOL)
						If !aScan(aColsSCX[nY][2],{|x| x[nItemSCX] == SCX->CX_ITEM}) > 0
							RecLock("SCX",.F.)
							SCX->(dbDelete())
							MsUnlock()
						EndIf
						SCX->(DbSkip())
					Enddo
				EndIf
			EndIf
		EndIf
		
		If ( lMT110GRV )
			ExecBlock("MT110GRV",.f.,.f.,{lCopia})
		EndIf
	Next nX

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso A SC tenha sido gerada por sugestao de compras reabre a sugestao    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lDeleted
		SFJ->(dbSetOrder(2))
		If SFJ->(dbSeek(xFilial("SFJ")+ca110Num))
			RecLock("SFJ",.F.)
			SFJ->FJ_SOLICIT:=""
			SFJ->FJ_FORNECE:=""
			SFJ->FJ_LOJA   :=""
			SFJ->FJ_FILENT :=""
			SFJ->FJ_TIPGER :=""
			SFJ->FJ_COND   :=""
			MsUnlock()
			SDF->(MsSeek(xFilial("SDF")+SFJ->FJ_CODIGO))
			While (SDF->DF_CODIGO == SFJ->FJ_CODIGO) .and. xFilial("SDF")==SDF->DF_FILIAL .and. ! SDF->(Eof())
				RecLock("SDF",.F.)
				SDF->DF_FLAG    := "A"
				SDF->(MsUnlock())
				SDF->(DbSkip())
			EndDo
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia e-mail na inclusao de SC's     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectarea("SXI")
	SXI->(dbsetorder(2))
	cEventID  := "035"
	If msSeek('002' + '001' + cEventID)
		cMensagem:=STR0113+" - "+SC1->C1_NUM+" - "+STR0114
		EventInsert(FW_EV_CHANEL_ENVIRONMENT, FW_EV_CATEGORY_MODULES, cEventID,FW_EV_LEVEL_INFO,""/*cCargo*/,STR0115,cMensagem,.T./*lPublic*/)
	Else
	If nOpcao == 1 .And. Len(aCols) > 0
		MEnviaMail("035",{SC1->C1_NUM})
	EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Cria alcada de aprovacao da SC ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lPrjCni .AND. lGeraSCR
		lBloqSC := MaEntCtb("SC1","SCX",cA110Num,"SC",aHeader,aCols,aHeadSCX,aColsSCX,nOpcao,dA110Data)
EndIf    
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Libera a solicitacao de compra³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lBloqSC
	
		dbSelectArea("SC1")
		dbSetOrder(1)
		MsSeek(xFilial("SC1")+cA110Num)
		While ( !Eof() .And. SC1->C1_FILIAL == xFilial("SC1") .And. SC1->C1_NUM == cA110Num )
			
			RecLock("SC1",.F.)	   
			SC1->C1_APROV := "L"
			SC1->( MsUnLock() )
			
			SC1->( dbSkip() )
		End
			
	EndIf 
	
EndIf    
lCopia := .F.
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Valid ³Rev.   ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao da quantidade da solicitacao de compra   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: [P] para Produto                                      ³±±
±±³          ³       [Q] Para quantidade                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a quantidade eh valida                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao da quantida³±±
±±³          ³de informada na solicitacao de compras para nao permitir     ³±±
±±³          ³que a quantidade da solicitacao de compra seja menor que a   ³±±
±±³          ³quantidade em pedido.                                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Valid(cTipo)

Local aArea     := GetArea()
Local cProduto	:= ""
Local nQuant	:= 0
Local nPProduto := aScan(aHeader,{|x| Trim(x[2])=="C1_PRODUTO"})
Local nPQuant   := aScan(aHeader,{|x| Trim(x[2])=="C1_QUANT"})
Local nPItem    := aScan(aHeader,{|x| Trim(x[2])=="C1_ITEM"})
Local lRetorno  := .T.
Local lMta113   := Alltrim(Upper(FunName()))=="MATA113"

If ( cTipo == "P" )
	cProduto := &(ReadVar())
	nQuant   := aCols[n][nPQuant]
Else
	cProduto := aCols[n][nPProduto]
	nQuant   := &(ReadVar())
EndIf
If ( Altera )
	dbSelectArea("SC1")                                      
	dbSetOrder(2)
	If ( MsSeek(xFilial("SC1")+aCols[n][nPProduto]+cA110Num+aCols[n][nPItem]) )
		If ( SC1->C1_QUJE > nQuant )
			Help(" ",1,"A110MAIO")
			lRetorno := .F.
		Else
			lRetorno := MaCanAltSC("SC1")
		EndIf

	EndIf
EndIf
If lMta113 .And. cTipo == "P" 
	If SB1->B1_IMPORT <> "S"
		Help(" ",1,"A113IMPORT")
		lRetorno := .F.
	Endif
Endif

Return(lRetorno)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Monta ³Autor  ³Alexandre Inacio Lemes ³Data  ³19/12/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de montagem do aHeader e do aCols da solicitacao de   ³±±
±±³          ³compra                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: [1] Inclusao                                          ³±±
±±³          ³       [2] Visualizacao                                      ³±±
±±³          ³       [3] Alteracao                                         ³±±
±±³          ³       [4] Exclusao                                          ³±±
±±³          ³ExpB2: CodeBlock a ser avaliado para o retorno da funcao     ³±±
±±³          ³ExpL1: Se for Copia da SC                                    ³±±
±±³          ³ExpN2: nOpcX do aRotina                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Conforme indicado pelo CodeBlock em ExpB2, quando o  ³±±
±±³          ³ este indicar .F., a execucao da funcao sera interrompida.   ³±±
±±³          ³ Para o codeblock sera informado o alias do SC1.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar as variaveis de uti- ³±±
±±³          ³lizada na modelo 2.                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a110Monta(nOpc,bBlock,lCopia,nOpcX,aColsBKPRat)
Local aArea     := GetArea()
Local lPrjCni   := FindFunction("ValidaCNI") .And. ValidaCNI()
Local aNoFields := IIf(nOpc == 1 ,{"C1_NUM","C1_ORIGEM","C1_TIPO","C1_MOEDA","C1_SIGLA","C1_PRECO","C1_TOTAL","C1_FABRICA","C1_LOJFABR","C1_FILENT"} , {"C1_NUM","C1_ORIGEM","C1_PROJET","C1_REVISA","C1_TAREFA","C1_TRT","C1_TIPO","C1_MOEDA","C1_SIGLA","C1_PRECO","C1_TOTAL","C1_FABRICA","C1_LOJFABR","C1_FILENT"})
Local bCondicao := {||.T.}
Local bTrue     := {||.T.}
Local bFalse    := {||.T.}
Local cNumSC1   := ""
Local cSeek     := ""
Local cWhile    := ""
Local lRetorno  := .T.
Local nX        := 0

DEFAULT bBlock := {|| .T.}
DEFAULT aColsBKPRat := {}

//-- Se tipo por documento, remove campo dos itens
If SuperGetMV("MV_TPOPDOC",.F.,.F.)
	aAdd(aNoFields,"C7_TPOP")
EndIf

lCopia	:= If(ValType(lCopia) == "L",lCopia,.F.)
cNumSC1 := If(lCopia,SC1->C1_NUM,cA110Num)
aCols   := {}
                   
If lPrjCni
	aAdd(aNoFields,"C1_XSOL")
	aAdd(aNoFields,"C1_XNUMCT") 
	aAdd(aNoFields,"C1_XNUMREV") 
	aAdd(aNoFields,"C1_XTIPOSC")
	aAdd(aNoFields,"C1_XTPDESC")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta aHeader e aCols utilizando a funcao FillGetDados.      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nOpc <> 1 .Or. lCopia)
	cSeek  := xFilial("SC1")+cNumSC1
	cWhile := "SC1->C1_FILIAL+SC1->C1_NUM"

	bCondicao := {|| Eval(bBlock,"SC1") .And. If( nOpc <> 2 , SoftLock("SC1") , .T. ) }
	bTrue     := {|| lRetorno := lRetorno }
	bFalse    := {|| lRetorno := .F. }

    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FillGetDados(nOpcX,"SC1",1,cSeek,{|| &cWhile },{{bCondicao,bTrue,bFalse}},aNoFields,,,,,,,, {|aColsX| A110After(lCopia,aColsX)},,{|aHeaderX| A110AfterH(aHeaderX)})
Else
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FillGetDados(nOpcX,"SC1",1,,,,aNoFields,,,,,.T.,,,,,{|aHeaderX| A110AfterH(aHeaderX)})
	aCols[1][aScan(aHeader,{|x| Trim(x[2])=="C1_ITEM"})] := StrZero(1,Len(SC1->C1_ITEM))
EndIf

If AliasIndic("SCX")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Copia o acols para verificar se houve mudança. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aColsBKPRat := aClone(aCols)
EndIf

If ExistBlock("M110MONT")
	ExecBlock("M110MONT",.F.,.F.,{cNumSC1,nOpc,lCopia})
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110After ³ Autor ³Alexandre Inacio Lemes ³Data  ³19/12/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³A funcao trata a excecao na montagem do aCols pela FillGetDa ³±±
±±³          ³dos tratando os campos que deverao ser alterados.            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL1: Opcao de copia da SC                                  ³±±
±±³          ³ExpA1: aCols utilizado na funcao FillGetDados                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110After(lCopia,aColsX)
Local nY 		:= 0
Local nPosCpo	:= 0
Local aNoCopia  := {}
Local lRet		:= .T.
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()

If lCopia
	//-- Trata campos que nao devem ser copiados
	aAdd(aNoCopia,"C1_OP");aAdd(aNoCopia,"C1_PEDIDO");aAdd(aNoCopia,"C1_ITEMPED");aAdd(aNoCopia,"C1_COTACAO")
	aAdd(aNoCopia,"C1_IDENT");aAdd(aNoCopia,"C1_QUJE");aAdd(aNoCopia,"C1_QUJE2");aAdd(aNoCopia,"C1_OS")
	aAdd(aNoCopia,"C1_SEQMRP");aAdd(aNoCopia,"C1_GRUPCOM");aAdd(aNoCopia,"C1_USER");aAdd(aNoCopia,"C1_CODCOMP")
	aAdd(aNoCopia,"C1_TX");aAdd(aNoCopia,"C1_OK");aAdd(aNoCopia,"C1_NUM_SI");aAdd(aNoCopia,"C1_ORIGEM")
	aAdd(aNoCopia,"C1_CODGRP");aAdd(aNoCopia,"C1_CODITE");aAdd(aNoCopia,"C1_RESIDUO");aAdd(aNoCopia,"C1_FLAGGCT")
	aAdd(aNoCopia,"C1_ACCPROC");aAdd(aNoCopia,"C1_ACCNUM");aAdd(aNoCopia,"C1_ACCITEM");aAdd(aNoCopia,"C1_FISCORI")
	aAdd(aNoCopia,"C1_SCORI");aAdd(aNoCopia,"C1_ITSCORI");aAdd(aNoCopia,"C1_CODED");aAdd(aNoCopia,"C1_NUMPR")
	aAdd(aNoCopia,"C1_MODAL");aAdd(aNoCopia,"C1_TPMOD");aAdd(aNoCopia,"C1_EMISSAO")
	
	If lPrjCni  
		//Campos que nao devem ser copiados. CNI
		aAdd(aNoCopia,"C1_XRESMOT")
		aAdd(aNoCopia,"C1_XRESUSR")
		aAdd(aNoCopia,"C1_XRESHOR")
		aAdd(aNoCopia,"C1_XRESDTA")	
	Endif
	
	For nY := 1 to Len(aNoCopia)
		If (nPosCpo := GDFieldPos(aNoCopia[nY])) > 0
			aTail(aColsX)[nPosCpo] := CriaVar(aHeader[nPosCpo,2],.T.)
		EndIf
	Next nY
	aTail(aColsX)[GDFieldPos("C1_QUANT")] := aTail(aColsX)[GDFieldPos("C1_QTDORIG")]
EndIf

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110UnidRe³ Autor ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao da unidade requisitante                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo da Unidade Requisitante                        ³±±
±±³          ³ExpO2: Objeto da unidade requisitante                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Indica se a unidade requisitante eh valida.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a unidade requisitante ³±±
±±³          ³quanto a integridade referencial                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110UnidReq(cUnidReq,oReq)

Local aArea 	:= GetArea()
Local lRetorno  := .T.

If ( !Empty(cUnidReq) )
	dbSelectArea("SY3")
	dbSetOrder(1)
	If ( !(MsSeek(xFilial("SY3")+cUnidReq)) )
		Help( " ",1,"A110UNID")
		lRetorno := .F.
	EndIf
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110CodCom³ Autor ³ Eduardo Riera         ³ Data ³28.07.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao do codigo do comprador                   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do comprador                                   ³±±
±±³          ³ExpO2: Objeto do comprador                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Indica se o comprador eh valido                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar o comprador quanto a   ³±±
±±³          ³integridade referencial                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110CodCompr(cCodCompr,oComp)

Local lRetorno := .T.

If ( !Empty(cCodCompr) )
	dbSelectArea("SY1")
	dbSetOrder(1)
	If !(MsSeek(xFilial("SY1")+cCodCompr))
		Help(" ",1,"A110COMPR")
		lRetorno := .F.
	EndIf
EndIf
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Legenda³ Autor ³ Edson Maricate       ³ Data ³18.08.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Exibe uma janela contendo a legenda da mBrowse.              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum Codigo do comprador                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Exclusivo MATA110                                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Legenda()

Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local aCores     := {}
Local aCoresNew  := {}   
Local lGspInUseM := If(Type('lGspInUse')=='L', lGspInUse, .F.)

aAdd(aCores,{"ENABLE"		,STR0024})
aAdd(aCores,{"DISABLE"		,STR0025})
aAdd(aCores,{"BR_AMARELO"	,STR0027})
aAdd(aCores,{"BR_AZUL"		,STR0026})
aAdd(aCores,{"BR_PRETO"		,STR0031})
aAdd(aCores,{"BR_CINZA"		,STR0035})
aAdd(aCores,{"BR_PINK"		,STR0053})
aAdd(aCores,{"BR_LARANJA"	,STR0034})
aAdd(aCores,{"BR_MARROM"	,STR0062}) //-- "Integração Modulo Gestao de Contratos"
aAdd(aCores,{"PMSEDT4"		,STR0101}) //-- "Solicitação em Processo de Edital" 
aAdd(aCores,{"PMSEDT1"		,STR0123})

If SC1->(FieldPos("C1_COMPRAC")) > 0
	aAdd(aCores,{"BR_VIOLETA"	,STR0097}) //-- Solicitação em Compra Centralizada
EndIf

if lPrjCni
	aAdd(aCores,{"metas_cima_16",/*STR0084*/"Aditivo Gerado no GCT"}) // Contrato gerado     -  10/05/11
	aAdd(aCores,{"metas_baixo_16",/*STR0085*/"Aditivo não Gerado no GCT"}) // Contrato nao gerado -  10/05/11
EndIf

If SC1->(FieldPos("C1_TIPO"))>0
  aAdd(aCores,{"BR_BRANCO",STR0071})	//"Solicitacao de Importacao"
Endif

if lPrjCni
	aAdd(aCores,{"BR_VERDE_ESCURO","Classificação Pendente"}) // SC proveniente de SA, aguardando classificacao
EndIf   

aAdd(aCores,{"PMSEDT3"	, STR0104 }) //-- "Solicitação Pendente (MarketPlace)"
aAdd(aCores,{"PMSEDT2"	, STR0105 }) //-- "Solicitação em Processo de Cotação (MarketPlace)"
If SC1->(FieldPos("C1_TPSC")) > 0
	aAdd(aCores,{"LIGHTBLU"	, STR0109 }) //-- "Solicitação para Licitação"
EndIf
                                                                                                                                                                                                                      
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para alterar cores do Browse do Cadastro    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT110LEG")
	aCoresNew := ExecBlock("MT110LEG",.F.,.F.,{aCores,lGspInUseM})
	If ValType(aCoresNew) == "A"
		aCores := aCoresNew
	EndIf
EndIf

BrwLegenda(cCadastro,STR0023,aCores)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A110Impri ³ Autor ³ Sergio Silveira       ³ Data ³11/09/2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Efetua a chamada do relatorio padrao ou do usuario         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpX1 := A110Impri( ExpC1, ExpN1, ExpN2 )                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 -> Alias do arquivo                                  ³±±
±±³          ³ ExpN1 -> Recno do registro                                 ³±±
±±³          ³ ExpN2 -> Opcao do Menu                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpX1 -> Retorno do relatorio                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA110                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function A110Impri( cAlias, nRecno, nOpc )

Local cPrinter := GetMV("MV_SOLIMPR" ,, "" )
Local xRet     := .T.

If !Empty( cPrinter ) .And. Existblock( cPrinter )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz a chamada do relatorio de usuario                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ExecBlock( cPrinter, .F., .F., { cAlias, nRecno, nOpc } )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz a chamada do relatorio padrao                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	xRet := MATR140( cAlias, nRecno, nOpc )
EndIf

dbSelectArea("SC1")

//Restaura o pergunte do MATA110
Pergunte("MTA110",.F.)

Return( xRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SegumEIC  ³ Autor ³ Microsiga S/A         ³ Data ³07/04/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Segunda Unidade de Medida EIC					          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ SegumEic()								                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA110                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function SegumEIC()
Local nX := 0
Local cUni := ''
Local nQtde2Um := 0
Local lRet := .T.
If GetMV("MV_EASY") $ "Y1S"
	For nx:= 1 To Len(aHeader)
		If Trim(Substr(aHeader[nx][2],3)) == "_SEGUM"
			cUni := aCols[n][nX]
		EndIf
		If Trim(Substr(aHeader[nx][2],3)) == "_QTSEGUM"
			nQtde2Um := aCols[n][nX]
		EndIf
	Next nx
	If (!Empty(cUni) .and. ! nQtde2Um > 0) .or. (Empty(cUni) .and.  nQtde2Um > 0)
		Help(" ",1,"SC2UMEIC")
		lRet := .F.
	EndIf
EndIf
Return(lRet)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110FldOk ³  Autor³ Alexandre Inacio Lemes³ Data ³17/07/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Impede Alteracoes dos Campos conforme as restricoes alcadas ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata110                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A110FldOk()
Local lRet      := .T.
Local cMenVar   := &(ReadVar())
Local nPProduto := aScan(aHeader,{|x| Trim(x[2])=="C1_PRODUTO"})
Local nPItem    := aScan(aHeader,{|x| Trim(x[2])=="C1_ITEM"})
Local lPrjCni 	:= FindFunction("ValidaCNI") .And. ValidaCNI()
Local aNoAltACC := {"C1_PRODUTO","C1_QUANT","C1_UM","C1_SEGUM","C1_QTSEGUM","C1_DATPRF","C1_CC"}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se a Linha pode ser alterada                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Altera ) .And. lRet
	dbSelectArea("SC1")
	dbSetOrder(2)
	If ( MsSeek(xFilial("SC1")+aCols[n][nPProduto]+cA110Num+aCols[n][nPItem]) )
		lRet := MaCanAltSC("SC1")
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o item esta no portal marketplace e se o campo alterado e restrito ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. SC1->(FieldPos("C1_ACCPROC"))>0 .And. aScan(aNoAltACC,{|x| x == Substr(ReadVar(),4)}) > 0 .And.;
		Posicione("SC1",1,xFilial("SC1")+cA110Num+aCols[n,nPItem],"C1_ACCPROC") == '1' .And.;
		cMenVar # Posicione("SC1",1,xFilial("SC1")+cA110Num+aCols[n,nPItem],Substr(ReadVar(),4))
	Aviso( STR0102 ,STR0106,{STR0039}) //Este campo não podera ser alterado pois este item da solicitacao de compra ja esta em processo no MarketPlace
	lRet := .F.
EndIf

Return( lRet )

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110DelOk ³  Autor³ Alexandre Inacio Lemes³ Data ³17/07/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida delecao da linha conforme as restricoes de alcadas   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata110                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A110DelOk()

Local lRet      := .T.
Local nPProduto := aScan(aHeader,{|x| Trim(x[2])=="C1_PRODUTO"})
Local nPItem    := aScan(aHeader,{|x| Trim(x[2])=="C1_ITEM"})
Local lLinDel := ExistBlock("MT110DEL")
Static lPermHlp := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para validações após a linha ser deletada                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lLinDel
	lRet := ExecBlock("MT110DEL",.F.,.F.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o usuario tem permissao de delecao. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
	If !(lRet := MaAvalPerm(1,{aCols[n][nPProduto],"MTA110",5})) .And. !lPermHlp
		lPermHlp := .T.
		Help(,,1,'SEMPERM')
	Else
		lPermHlp := .F.
	EndIf
EndIf
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³VerIfica se a Linha pode ser deletada                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Altera ) .And. !aCols[n,Len(aCols[n])] .And. lRet
	dbSelectArea("SC1")
	dbSetOrder(2)
	If ( MsSeek(xFilial("SC1")+aCols[n][nPProduto]+cA110Num+aCols[n][nPItem]) )
		lRet := MaCanDelSC("SC1")
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o item esta no portal marketplace e se o campo alterado e restrito ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. SC1->(FieldPos("C1_ACCPROC"))>0 .And. Posicione("SC1",1,xFilial("SC1")+cA110Num+aCols[n,nPItem],"C1_ACCPROC") == '1' 
	Aviso( STR0102 , STR0107 ,{ STR0039 }) //Este item não podera ser excluido pois já esta em processo no MarketPlace.
	lRet := .F.
EndIf

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A110Track³ Autor ³ Aline Correa do Vale  ³ Data ³16/06/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Faz o tratamento da chamada do System Tracker              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T.                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A110Track()

Local aEnt     := {}
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local cKey     := xFilial("SC1") + cA110Num
Local nPosItem := GDFieldPos( "C1_ITEM" )
Local nLoop    := 0                      
    
if lPrjCni
	cKey     := "" 
	
	If Empty(xFilial("SC1")) .And. Empty(xFilial("SC7")) .And. Empty(xFilial("SC8")) .And. ExistBlock("TrkFilEn")
		cKey:= cA110Num
	Else
		cKey:= xFilial("SC1") + cA110Num
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega os itens para rastreamento          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nLoop := 1 To Len( aCols )
	AAdd( aEnt, { "SC1", cKey + aCols[ nLoop, nPosItem ] } )
Next nLoop

MaTrkShow( aEnt )

Return( .T. )

Static Function ProcH(cCampo)
Return aScan(aAutoCab,{|x|Trim(x[1])== cCampo })

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A110FilEnt³ Rev.  ³ Eduardo Riera        ³ Data ³16.10.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³VerIf. existencia da Filial para Entrega da SC em SM0.     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A110FilEnt(ExpC1)                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 := Codigo da Filial de Entrega                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA110                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110FilEnt(cFilialEnt)

Local aArea		:= GetArea()
Local lRet 		:= .T.
Local aAreaSM0  := SM0->(GetArea())
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .T.=Permite preencher aCols /  .F.=Executando via VldHead() 

if lPrjCni
	Do Case      
		Case !Empty(cFilialEnt) .And. Empty(xFilial("SC7"))  //A filial de entrega deve ser compativel com o modo de compartilhamento do SC7
			Help(" ",1,"FILENTC")
			lRet		:= .T.
		Case Empty(cFilialEnt) .And. Empty(xFilial("SC7")) 
			lRet := .T.
		Case Empty(cFilialEnt).And.!Empty(xFilial("SC7"))
			Help(" ",1,"FILENTE")
			lRet := .F.
		OtherWise
			dbSelectArea("SM0")
			dbSetOrder(1)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Procura pelo Numero da Empresa e Filial para Entrega.        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !MsSeek(SUBS(cNumEmp,1,2)+cFilialEnt)
				Help(" ",1,"C1_FILENT")
				lRet := .F.
			EndIf
			If lRet .And. lGatilha
				If MaFisFound("NF")
					MaFisAlt("NF_UFDEST",SM0->M0_ESTENT)
				EndIf
			EndIf
	EndCase      
Else
	Do Case
		Case FWModeAccess(aArea[1]) == "E" .And. FWModeAccess("SC7") == "C"  //A filial de entrega deve ser compativel com o modo de compartilhamento do SC7
			Help(" ",1,"FILENTC")
			lRet		:= .T.
		Case FWModeAccess(aArea[1]) == "C" .And. FWModeAccess("SC7") == "C" 
			lRet := .T.
		Case FWModeAccess(aArea[1]) == "C" .And. !FWModeAccess("SC7") == "E"
			Help(" ",1,"FILENTE")
			lRet := .F.
		OtherWise
			dbSelectArea("SM0")
			dbSetOrder(1)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Procura pelo Numero da Empresa e Filial para Entrega.        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !MsSeek(SUBS(cNumEmp,1,2)+cFilialEnt)
				Help(" ",1,"C1_FILENT")
				lRet := .F.
			EndIf
			If lRet .And. lGatilha
				If MaFisFound("NF")
					MaFisAlt("NF_UFDEST",SM0->M0_ESTENT)
				EndIf
			EndIf
	EndCase      
EndIf

RestArea(aAreaSM0)
RestArea(aArea)
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110Aprov ³Rev.   ³ Eduardo Riera         ³ Data ³22.10.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de aprovacao de solicitacao de compra                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                    ³±±
±±³          ³ ExpN2 = Numero do registro                                  ³±±
±±³          ³ ExpN3 = Numero da opcao selecionada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo de aprovar ou rejeitar um item ³±±
±±³          ³da solicitação de compra                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Aprov(cAlias,nReg,nOpcx)

Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local aArea		:= GetArea()
Local aSizeAut	:= MsAdvSize(.F.,.F.)
Local aCpos     := {"C1_FILENT","C1_NUM","C1_EMISSAO","C1_PRODUTO","C1_DESCRI","C1_OBS","C1_QUANT","C1_UM"}
Local aObjects	:= {}
Local aInfo 	:= {}
Local aPosGet	:= {}
Local aPosObj	:= {}
Local aItens 	:= {}
Local aCposNew 	:= {}

Local nOpcA     := 0
Local lRet
Local lContinua := .T. 
Local lAProvSI 	:= GetNewPar("MV_APROVSI",.F.)
Local l110ApvE	:= ExistBlock("MT110APV")
Local l110Apv   := .T.
Local oQual
Local oDlg
Local cCond  	:= IIf(mv_par02==1,".T.","!Eof() .And. C1_FILIAL == xFilial('SC1') .And. SC1->C1_NUM == cNumSc")
Local cAprov    := ""  
//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  :=  FindFunction("GETROTINTEG") .And. FindFunction("FWHASEAI") .And. FWHasEAI("MATA110",.T.,,.T.)
Local lMkPlace	:= .F. 
Local cAprovBkp	:= ""

Private lShowAprv	:= FindFunction('ExistSCR') .And. !ExistSCR('SC',SC1->C1_NUM)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PE: MT110APV - Indica se a rotina de aprovação será executada |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If l110ApvE
	l110Apv := ExecBlock("MT110APV",.F.,.F.,{cAlias, nReg})
	If ValType(l110Apv)<>"L"
		l110Apv:=.T.
	EndIf
EndIf  

If l110Apv .And. lShowAprv
	If l110Auto
		If ProcH("C1_NUM") > 0
			If ProcH("C1_ITEM") > 0
				dbSelectArea("SC1")
				dbSetOrder(1)
				dbSeek(xFilial("SC1")+aAutoCab[ProcH("C1_NUM"),2]+aAutoCab[ProcH("C1_ITEM"),2])
				nReg:=SC1->(RECNO())
				mv_par02 := 1//Aprovacao por item
				cCond := ".T."
			Else
				dbSelectArea("SC1")
				dbSetOrder(1)
				dbSeek(xFilial("SC1")+aAutoCab[ProcH("C1_NUM"),2])
				nReg:=SC1->(RECNO())
				mv_par02 := 2//Aprovacao por SC
				cCond := "!Eof() .And. C1_FILIAL == xFilial('SC1') .And. SC1->C1_NUM == cNumSc"
			EndIf
			
			If ProcH("C1_APROV") > 0
				cAprov := aAutoCab[ProcH("C1_APROV"),2]
			
				Do Case
					Case cAprov == "L"//Liberado 
						nOpcA := 1
					Case cAprov == "R"//Rejeitado 
						nOpcA := 2
					Case cAprov == "B"//Bloqueado
						nOpcA := 3
				EndCase
			EndIf
		EndIf
	EndIf   
		
	If SC1->(FieldPos("C1_TIPO"))>0 .And. SC1->C1_TIPO == 2
		Help(" ",1,"A113TIPO")
		RestArea(aArea)
		Return
	EndIf
	
	cNumSc := SC1->C1_NUM
	
	If ExistBlock("MT110CPO")
		aCposNew := ExecBlock("MT110CPO",.F.,.F.,{aCpos})
		If ValType(aCposNew) == "A"
			aCpos := aCposNew
		EndIf
	EndIf
	
	If mv_par02 == 1
		If SoftLock("SC1") .And. SC1->C1_APROV $ 'B,R,L, ' .And. SC1->C1_QUJE == 0 .And.;
			IIf( lAProvSI ,(Empty(SC1->C1_COTACAO).Or.C1_COTACAO=="IMPORT"),Empty(SC1->C1_COTACAO)) .And. Empty(SC1->C1_RESIDUO)
			lContinua := .T.
		Else
			lContinua := .F.
		EndIf
	Else
	    dbSelectArea("SC1")
	    dbSetOrder(1)
	    dbSeek(xFilial("SC1")+SC1->C1_NUM)
	    While !Eof() .And. C1_FILIAL == xFilial("SC1") .And. SC1->C1_NUM == cNumSc
			If SoftLock("SC1") .And. SC1->C1_APROV $ 'B,R,L, ' .And. SC1->C1_QUJE == 0 .And.;
			    IIf( lAProvSI ,(Empty(SC1->C1_COTACAO).Or.C1_COTACAO=="IMPORT"),Empty(SC1->C1_COTACAO)) .And. Empty(SC1->C1_RESIDUO)
				AADD(aItens,{C1_PRODUTO,C1_UM,C1_QUANT,C1_OBS,C1_EMISSAO,C1_DESCRI,C1_FILENT})
			EndIf
			dbSkip()
		EndDo
		dbSeek(xFilial("SC1")+cNumSc) //Volta para o primeiro item da SC
		If Len(aItens) == 0
			lContinua := .F.
		EndIf
	EndIf 
EndIf

If lContinua .And. l110Apv .And. lShowAprv
	If !l110Auto
		AAdd( aObjects, { 100, 100, .T., .T. })
	
		if lPrjCni
			AAdd( aObjects, { 0,    55, .T., .F. })	
		Else
			AAdd( aObjects, { 0,    25, .T., .F. })
		EndIf
		
		aInfo := { aSizeAut[ 1 ], aSizeAut[ 2 ], aSizeAut[ 3 ], aSizeAut[ 4 ], 2, 2 }
		aPosObj := MsObjSize( aInfo, aObjects )
		aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,{{10,35,100,135,205,255},{10,45,105,145,225,265,210,255}})
		DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0011)+" - Aprovar"+IIf(mv_par02==2," - "+cNumSc,"") From aSizeAut[7],0 TO aSizeAut[6],aSizeAut[5] OF oMainWnd PIXEL		//"Solicita‡„o de Compras"
	
		If mv_par02 == 1
			EnChoice( cAlias, nReg, nOpcx, , , , aCpos, aPosObj[1], , 3 )
		Else
			@ 1.6,.7 LISTBOX oQual VAR cVar Fields HEADER OemToAnsi(STR0042),OemToAnsi(STR0043),OemToAnsi(STR0044),OemToAnsi(STR0045),OemToAnsi(STR0046),OemToAnsi(STR0047),OemToAnsi(STR0048) SIZE aPosObj[1][4],aPosObj[1][3]-18 //	"Produto"##"Unid.Medida"##"Quantidade"##"Observacao"##"Dt.Emissao"##"Descricao"##"Fil.Entrega"
			oQual:SetArray(aItens)
			oQual:bLine := { || {aItens[oQual:nAT][1],aItens[oQual:nAT][2],aItens[oQual:nAT][3],aItens[oQual:nAT][4],aItens[oQual:nAT][5],aItens[oQual:nAT][6],aItens[oQual:nAT][7]}}
			If ExistBlock("MT110CP2")
				ExecBlock("MT110CP2",.F.,.F.,{aItens,oQual})
			EndIf
		EndIf
	
		@ aPosObj[2,1]+008,aPosObj[2,4]-300 BUTTON STR0035 SIZE 60,15 FONT oDlg:oFont ACTION (nOpcA := 3,oDlg:End()) PIXEL
		@ aPosObj[2,1]+008,aPosObj[2,4]-220 BUTTON STR0033 SIZE 60,15 FONT oDlg:oFont ACTION (nOpcA := 1,oDlg:End()) PIXEL
		@ aPosObj[2,1]+008,aPosObj[2,4]-140 BUTTON STR0034 SIZE 60,15 FONT oDlg:oFont ACTION (nOpcA := 2,oDlg:End()) PIXEL
		@ aPosObj[2,1]+008,aPosObj[2,4]-060 BUTTON STR0067 SIZE 60,15 FONT oDlg:oFont ACTION (nOpcA := 0,oDlg:End()) PIXEL
		ACTIVATE MSDIALOG oDlg
	EndIf

	If (ExistBlock("MT110BLO"))
		lRet := ExecBlock("MT110BLO",.f.,.f.,{nOpcA})
		If ValType(lRet) <> "L"
			lRet := .T.
		EndIf
	Else
		lRet := .T.
	EndIf

    PcoIniLan("000051")

	If lRet .And. nOpcA > 0
		While &cCond
			If mv_par02 == 2
				If !(SoftLock("SC1")) .And. !(SC1->C1_APROV $ 'B,R,L, ') .And. SC1->C1_QUJE <> 0 .And.;
				IIf( lAProvSI ,!(Empty(SC1->C1_COTACAO).Or.C1_COTACAO<>"IMPORT"),!Empty(SC1->C1_COTACAO))	.And.!Empty(SC1->C1_RESIDUO)
					dbSkip()
					Loop
				EndIf
			EndIf
			
			Do Case
				Case nOpcA == 1
					If !PcoVldLan('000051','02','MATA110',/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)  // valida bloqueio na aprovacao de SC
						Exit
					Endif
					Begin Transaction
					If RecLock("SC1")
						cAprovBkp := SC1->C1_APROV
						If SC1->C1_APROV $ " ,B,R" .And. SC1->C1_QUJE == 0 .And.;
						    IIf( lAProvSI ,(Empty(SC1->C1_COTACAO).Or.C1_COTACAO=="IMPORT"),Empty(SC1->C1_COTACAO)) .And. Empty(SC1->C1_RESIDUO)
							SC1->C1_APROV := "L"
	                        If SC1->(FieldPos("C1_NOMAPRO")) > 0
								SC1->C1_NOMAPRO := UsrRetName(RetCodUsr())
	                        EndIf
						EndIf
						MaAvalSC("SC1",8,,,,,,cAprovBkp)
					EndIf
					End Transaction					
				Case nOpcA == 2
					Begin Transaction
					If RecLock("SC1")
						cAprovBkp := SC1->C1_APROV
						If SC1->C1_APROV $"B,L, " .And. SC1->C1_QUJE == 0 .And.;
						    IIf( lAProvSI ,(Empty(SC1->C1_COTACAO).Or.C1_COTACAO=="IMPORT"),Empty(SC1->C1_COTACAO)) .And. Empty(SC1->C1_RESIDUO)
							SC1->C1_APROV := "R"
	                        If SC1->(FieldPos("C1_NOMAPRO")) > 0
								SC1->C1_NOMAPRO := UsrRetName(RetCodUsr())
	                        EndIf
						EndIf
						MaAvalSC("SC1",8,,,,,,cAprovBkp)
					EndIf
					End Transaction
				Case nOpcA == 3
					Begin Transaction
					If RecLock("SC1")
						cAprovBkp := SC1->C1_APROV
						If SC1->C1_APROV $ " ,L,R" .And. SC1->C1_QUJE == 0 .And.;
						    IIf( lAProvSI ,(Empty(SC1->C1_COTACAO).Or.C1_COTACAO=="IMPORT"),Empty(SC1->C1_COTACAO)) .And. Empty(SC1->C1_RESIDUO)
							SC1->C1_APROV := "B"
	                        If SC1->(FieldPos("C1_NOMAPRO")) > 0
								SC1->C1_NOMAPRO := UsrRetName(RetCodUsr())
	                        EndIf
						EndIf
						MaAvalSC("SC1",9,,,,,,cAprovBkp)
					EndIf
					End Transaction
					//Caio.Santos - 11/01/13 - Req.72
					If lPrjCni
						RSTSCLOG("APR",1,/*cUsrWF*/)
					EndIf
			EndCase

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Executa o PE MT110END apos acionar os botoes Aprovar Bloquear Rejeitar ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("MT110END")
				ExecBlock("MT110END",.F.,.F.,{cNumSc,nOpcA})
			EndIf

			If mv_par02 == 1
				Exit
			Else
			    dbSkip()
			EndIf
		EndDo

		SC1->(DbSetOrder(1))
		SB5->(DbSetOrder(1))
		
		If SB5->(DbSeek( xFilial("SB5") + SC1->C1_PRODUTO ) )
			If SB5->(FieldPos("B5_ENVMKT")) > 0
				If SB5->B5_ENVMKT <> "1"
					lMkPlace := .F.				
				EndIf
			EndIf
		EndIf
	
		If lIntegDef .And. SC1->( DbSeek( xFilial("SC1")+cNumSc ) ) 
			If SuperGetMV("MV_MKPLACE",.F.,.F.) .And. lMkPlace .And. SC1->C1_APROV == "L"
				Inclui:=.T.
				FwIntegDef( 'MATA110' )
			ELseIf !(SuperGetMV("MV_MKPLACE",.F.,.F.)) .And. SC1->C1_APROV == "L"
				Inclui:=.T.
				FwIntegDef( 'MATA110' )
			EndIf
		EndIf

	EndIf
	PcoFinLan("000051")
	PcoFreeBlq("000051")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Executa o PE MT110CFM apos acionar os botoes Aprovar Bloquear Rejeitar - para todos os itens da SC ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If ExistBlock("MT110CFM")
		ExecBlock("MT110CFM",.F.,.F.,{cNumSc,nOpcA})
	EndIf
Else   
	If !lShowAprv
		Help(" ",1,"EXISTSCR")
	ElseIf !l110ApvE 
		Help(" ",1,"MT110APROV")
	
	EndIf
EndIf

RestArea(aArea)
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A110Restr³ Autor ³   Edson Maricate      ³ Data ³ 01.10.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao para controle de solicitantes.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo do produto.                                 ³±±
±±³          ³ ExpA1 = Array contendo os grupos do usuario.               ³±±
±±³          ³ ExpC1 = Codigo do usuario a ser verIficado.                ³±±
±±³          ³ ExpL1 = Variavel que controla a exibicao dos helps.        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ RetL1 = .T. - usuario/grupo com permissao ao produto.      ³±±
±±³          ³ RetL1 = .F. - usuario/grupo sem permissao ao produto.      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico.                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110Restr(cProduto,aGrupo,cUser,lHelp)
Local lRet := .F.

If PutByAps()
	lRet := .T.
ElseIf !SuperGetMv("MV_APROVSC",.F.,.F.)
	If l110Auto .And. IsIntegTop(,.T.)
		lRet := .T.
	Else
		cUser := A110UsrDru(cUser)
		lRet := MaVldSolic(cProduto,aGrupo,cUser,lHelp)
	Endif
Else
	lRet := .T.
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A110Copia ³Autor ³ Aline Correa do Vale  ³ Data ³27.01.2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Copia a solicitacao de compra posicionada                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void A110Copia(ExpC1,ExpN1,ExpN2)                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Opcao selecionada                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
FUNCTION A110Copia(cAlias,nReg,nOpcX)

Local xRet
lCopia := .T.
l110Alt:= .F.                                               

If !SC1->(Eof())
	xRet := A110Inclui(cAlias,nReg,4,lCopia)
EndIf

If ( Type("bFiltraBrw") == "B" )
	Eval(bFiltraBrw)
EndIf

Return( xRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A110Solic ³Autor ³Rodrigo de A Sartorio  ³ Data ³01.07.2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Muda o solicitante ao navegar pela GETDADOS                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void A110Solic(ExpC1,ExpO1,ExpC2)                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Numero da Solicitacao de Compra                    ³±±
±±³          ³ ExpN1 = Objeto com conteudo do solicitante                 ³±±
±±³          ³ ExpN2 = Variavel com conteudo do solicitantes              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A110Solic(cNumSC,oSolic,cSolic)
Local cItemSC:=GdFieldGet("C1_ITEM")
Local aArea:=GetArea()
Local aAreaSC1:=SC1->(GetArea())
dbSelectArea("SC1")
dbSetOrder(1)
If dbSeek(xFilial("SC1")+cNumSC+cItemSc)
	cSolic:=SC1->C1_SOLICIT
	oSolic:SetText(cSolic)
	oSolic:Refresh()
	Sysrefresh()
EndIf
RestArea(aAreaSC1)
RestArea(aArea)
Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A110Exit  ³Autor ³Alexandre Inacio Lemes ³ Data ³28/03/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Executa o ponto M110EXIT no calcelamento da Enchoicebar    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A110Exit(nOpcA)

Local lRetorno := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Executa o ponto de entrada somente quando for acionado o cancelamento ³
//³da dialog pelo botao cancelar ou pela opcao X da dialog.              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nOpca == 0
	If (ExistBlock("M110EXIT"))
		lRetorno := ExecBlock("M110EXIT",.F.,.F.)
		If ValType(lRetorno) <> "L"
	    	lRetorno := .T.
	    EndIf
	EndIf
EndIf

If nOpca <> 1
	lCopia := .F.
EndIf

Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³AjustaSX1 ºAutor³Alexandre Inacio Lemesº Data ³ 14/01/2005  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA170                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AjustaSX1()

Local aHelpPor02 :={}
Local aHelpEng02 :={}
Local aHelpSpa02 :={}
Local aHelpPor03 :={}
Local aHelpEng03 :={}
Local aHelpSpa03 :={}
Local aHelpPor04 :={}
Local aHelpEng04 :={}
Local aHelpSpa04 :={}

aAdd( aHelpPor02, "Informe se tipo de aprovacao/rejeicao" )
aAdd( aHelpPor02, "sera por item ou por solicitacao" )
aAdd( aHelpEng02, "Enter If the approval/rejection type sill be by item" )
aAdd( aHelpEng02, "or by request." )
aAdd( aHelpSpa02, "Informe si el tipo de aprobacion/rechazo sera por" )
aAdd( aHelpSpa02, "item o por solicitud." )

aAdd( aHelpPor03, "Informe o numero inicial da solicitacao ")
aAdd( aHelpPor03, "de compras que deseja cancelar.")
aAdd( aHelpEng03, "Enter the purchase request initial")
aAdd( aHelpEng03, "number you require to cancel.")
aAdd( aHelpSpa03, "Informe el numero inicial de la solicitud")
aAdd( aHelpSpa03, "de compras que desea anular.")

aAdd( aHelpPor04, "Informe o numero final da solicitacao ")
aAdd( aHelpPor04, "de compras que deseja cancelar.")
aAdd( aHelpEng04, "Enter the purchase request finaly")
aAdd( aHelpEng04, "number you require to cancel.")
aAdd( aHelpSpa04, "Informe el numero final de la solicitud")
aAdd( aHelpSpa04, "de compras que desea anular.")

PutSx1( "MTA110","02","Quanto a Aprovacao ?","Quanto a Aprovacao ?","Quanto a Aprovacao ?","mv_ch2",;
"N",1,0,0,"C","","","","","mv_par02","Por item","Por item","By item","","Por SC","Por solicitud","By request","","","","","","","","","",;
aHelpPor02,aHelpEng02,aHelpSpa02)

PutSx1( "MTA110","03","Da Solicitacao de Compras  ?","¿De Solicitud de Compras?","From Purchase Request?","mv_ch3",;
"C",6,0,0,"G","","SC1","","","mv_par03","","","","","","","","","","","","","","","","",aHelpPor03,aHelpEng03,aHelpSpa03)

PutSx1( "MTA110","04","Ate Solicitacao de Compras ?","¿A Solicitud de Compras?","To Purchase Request?","mv_ch4",;
"C",6,0,0,"G","","SC1","","","mv_par04","","","","","","","","","","","","","","","","",aHelpPor04,aHelpEng04,aHelpSpa04)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do Help para ser utilizado em COMPRA CENTRALIZADA (CNI)  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aHelpPor02 :={}
aHelpEng02 :={}
aHelpSpa02 :={}

aAdd(aHelpPor02, "Não é permitido fazer a transferência ")
aAdd(aHelpPor02, "para compra centralizada para as ")
aAdd(aHelpPor02, "solicitaçöes em processo de cotação, ")
aAdd(aHelpPor02, "bloqueadas, elim. por residuo, encerradas ")
aAdd(aHelpPor02, "ou previstas.")

aAdd(aHelpEng02, "It is not allowed to transfer to centralized ")
aAdd(aHelpEng02, "purchasing to requests for quotation process ")
aAdd(aHelpEng02, ", blocked, elim. by residue, closed or ")
aAdd(aHelpEng02, "planned.")

aAdd(aHelpSpa02, "No está autorizado a transferir a la compra ")
aAdd(aHelpSpa02, "centralizada a las peticiones de proceso de ")
aAdd(aHelpSpa02, "cotización, bloqueado, elim. por residuo, ")
aAdd(aHelpSpa02, "cerrado o previstas.")
   
PutHelp("PA11009",aHelpPor02,aHelpEng02,aHelpSpa02,.T.)	

Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A110Cancela³ Autor ³ Marcos V. Ferreira    ³ Data ³21.06.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ ÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cancelamento de SCs em aberto		                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA110	                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A110Cancela()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a Integridade dos dados de Entrada                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL 	lOk,cVar,nX,cX
LOCAL 	cFile, oDlg

If Pergunte("MTA110",.T.)

	DEFINE MSDIALOG oDlg FROM  160,20 TO 302,592 TITLE STR0050 PIXEL	//"Cancelamento das SCs em Aberto"
	@ 10, 6 TO 56,280 LABEL "" OF oDlg PIXEL
	@ 19, 15 SAY OemToAnsi(STR0051) SIZE 268, 8 OF oDlg PIXEL	//"Esta rotina ir  cancelar todas as SC's em aberto desde que n„o tenham sido movimentadas"
	@ 28, 15 SAY OemToAnsi(STR0052) SIZE 268, 8 OF oDlg PIXEL	//"por outros processos."
	DEFINE SBUTTON FROM 57, 196 TYPE 5 ACTION Pergunte("MTA110",.T.) ENABLE OF oDlg
	DEFINE SBUTTON FROM 57, 223 TYPE 1 ACTION (lOk := .T., oDlg:End()) ENABLE OF oDlg
	DEFINE SBUTTON FROM 57, 250 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg
	ACTIVATE MSDIALOG oDlg

	If lOk
		Processa({|lEnd| A110Process(@lEnd)},STR0050,OemToAnsi(STR0050),.F.) //"Cancelamento das SCs em Aberto"###"Cancelando SCs em Aberto..."
	EndIf

EndIf

//Restaura o pergunte do MATA110
Pergunte("MTA110",.F.)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A110Process ³ Autor ³ Marcos V. Ferreira    ³ Data ³21/06/05³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cancela SCs em Aberto              					      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA110                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A110Process(lEnd)
Local cAliasSC1  := ''
Local aAreaAnt   := GetArea()
Local aAreaSC1   := SC1->(GetArea())
#IFDEF TOP
	Local cQuery     := ''
#ELSE
	Local nRegOrig   := 0
#ENDIF	

#IfDEF TOP
	cAliasSC1 := GetNextAlias()
	cQuery    := " SELECT R_E_C_N_O_ RECNOSC1 "
	cQuery    += " FROM "+RetSqlName ("SC1") + " "
	cQuery    += " WHERE C1_FILIAL = '" + xFilial("SC1") + "' AND "
	cQuery    += " C1_NUM >= '" + mv_par03 + "' AND "
	cQuery    += " C1_NUM <= '" + mv_par04 + "' AND "
	cQuery    += " D_E_L_E_T_ = ' '"   
	cQuery    := ChangeQuery(cQuery)
			
	If Select(cAliasSC1) > 0
		(cAliasSC1)->(dbCloseArea())
	EndIf
			
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC1,.T.,.T.)

	ProcRegua(SC1->(LastRec()),17,06)
	dbGoTop()
	While !Eof() 
		IncProc()
		dbSelectArea("SC1")
		dbSetOrder(1)
		dbGoto((cAliasSC1)->RECNOSC1)
		A110Deleta("SC1",Recno(),5,,.F.,.F.)
		dbSelectArea(cAliasSC1)
		dbSkip()
	EndDo
	// Encerra area de trabalho
	If Select(cAliasSC1) > 0
		(cAliasSC1)->(dbCloseArea())
	EndIf
#ELSE
	dbSelectArea("SC1")
	ProcRegua(LastRec(),17,06)
	dbGoTop()
	dbSeek(xFilial("SC1"))
	While !Eof() .And. C1_FILIAL == xFilial("SC1")
		IncProc()
		nRegOrig:=Recno()
		If SC1->C1_NUM >= mv_par03 .And. SC1->C1_NUM <= mv_par04
			A110Deleta("SC1",RecNo(),5,,.F.,.F.)
		EndIf
		dbSelectArea("SC1")
		dbGoto(nRegOrig)
		dbSkip()
	EndDo
#ENDIF

RestArea(aAreaSC1)
RestArea(aAreaAnt)
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ AjustaSX3  |Autor ³ Ricardo Berti        ³ Data ³14/02/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajusta o campo C1_DATPRF com validacao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA110                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AjustaSX3()

Local aAreaSX3	:= SX3->(GetArea())
Local cValid	:= "A110DtNec()"
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local cReserv := ""
Local cUsado  := ""

dbSelectArea("SX3")
dbsetOrder(2)
If dbSeek("C1_DATPRF")
	If ! "A110DTNEC" $ Upper(SX3->X3_VALID)
		If Len(SX3->X3_VALID) >= Len( AllTrim(SX3->X3_VALID) + ".And." + cValid )
			Reclock("SX3",.F.)
			If Empty(SX3->X3_VALID)
		        SX3->X3_VALID := cValid
			Else
		        SX3->X3_VALID := AllTrim(SX3->X3_VALID) + ".And." + cValid
			EndIf
			MsUnlock()
		EndIf
	EndIf
EndIf

dbSelectArea("SX3")
dbsetOrder(2)
If dbSeek("C1_OP")
	If !"A110NUMOP" $ Upper(SX3->X3_VALID)
		Reclock("SX3",.F.)
		SX3->X3_VALID := AllTrim(SX3->X3_VALID) + ".And." + "A110NumOP()"
		MsUnlock()
	EndIf
EndIf

If dbSeek("C1_FORNECE")
	If "EXISTCPO" $ Upper(SX3->X3_VALID)
		Reclock("SX3",.F.)
		SX3->X3_VALID := "Vazio().Or.A110IniLoj()"
		MsUnlock()
	EndIf
Endif

If dbSeek("C1_LOJA")
	If !"VAZIO" $ Upper(SX3->X3_VALID)
		Reclock("SX3",.F.)
		SX3->X3_VALID := "Vazio().Or.A110ChkLoj()"
		MsUnlock()
	EndIf
Endif

If dbSeek("C1_FILENT")
	If "CFILANT" $ Upper(SX3->X3_RELACAO)
		Reclock("SX3",.F.)
		SX3->X3_RELACAO := 'xFilial("SC7")' //E inicializado com a filial do SC7, para compatibilizar o mesmo tratamento do PC
		MsUnlock()
	EndIf
Endif
             
if lPrjCni
	If dbSeek("C1_NUM") .And. AllTrim(Upper(X3_VALID)) # "A110NUMERO(M->C1_NUM)"
		RecLock("SX3",.F.)
		Replace X3_VALID With "A110Numero(M->C1_NUM)"
		MsUnLock()
    EndIf
Else
	If cPaisLoc <> "BRA"
		dbSelectArea("SX3")
		dbsetOrder(2)
		If dbSeek("C1_TPSC") .And. Empty(SX3->X3_TITSPA)
	       RecLock("SX3",.F.)
	       Replace X3_TITSPA  With "Tipo Solicit"
	       Replace X3_DESCSPA With "Tipo de Solicitud"  
	       Replace X3_CBOXSPA With "1=Normal;2=Licitacion"  
	       
	       Replace X3_TITENG  With "Request Type"
	       Replace X3_DESCENG With "Type of Request"
	       Replace X3_CBOXENG With "1=Normaly;2=Bidding"
	       MsUnLock()
		EndIf
		dbSelectArea("SX3")
		dbsetOrder(2)
		If dbSeek("C1_TPMOD") .And. Empty(SX3->X3_TITSPA)
	       RecLock("SX3",.F.)
	       Replace X3_TITSPA  With "Tipo Modal"
	       Replace X3_DESCSPA With "Tipo Modalidad" 
	       
	       Replace X3_TITENG  With "Type Modal"
	       Replace X3_DESCENG With "Type Modality" 
	       MsUnLock()
		EndIf
		If dbSeek("C1_MODAL") .And. Empty(SX3->X3_TITSPA)
	       RecLock("SX3",.F.)
	       Replace X3_TITSPA  With "Modalidad"
	       Replace X3_DESCSPA With "Modalidad"   
	       
	       Replace X3_TITENG  With "Modality"
	       Replace X3_DESCENG With "Modality"
	       MsUnLock()
		EndIf
		If dbSeek("C1_CODED") .And. Empty(SX3->X3_TITSPA)
	       RecLock("SX3",.F.)
	       Replace X3_TITSPA  With "Cod. Edicto"
	       Replace X3_DESCSPA With "Codigo del Edicto"
	       
    	   Replace X3_TITENG  With "Cod. Edicto"
	       Replace X3_DESCENG With "Codigo del Edicto"
	       MsUnLock()
		EndIf
		If dbSeek("C1_NUMPR") .And. Empty(SX3->X3_TITSPA)
	       RecLock("SX3",.F.)
	       Replace X3_TITSPA  With "Nro.Proceso"
	       Replace X3_DESCSPA With "Numero Processo"  
	       
	       Replace X3_TITENG  With "Process Numb"
	       Replace X3_DESCENG With "Process Number"
	       MsUnLock()
		EndIf
	EndIf	
EndIf

If dbSeek("C1_QTSEGUM")
	If X3_TITENG#"2nd M.U.Qty."
		Reclock("SX3",.F.)
		SX3->X3_TITENG := "2nd M.U.Qty."
		MsUnlock()
	EndIf
Endif                    

If dbSeek("C1_TPSC")
	If X3_WHEN != ' '
		Reclock("SX3",.F.)
		SX3->X3_WHEN := ' '
		MsUnlock()
	EndIf
Endif                     

If dbSeek("C1_NUM")
	If AllTrim(Upper(X3_RELACAO)) == 'GETSX8NUM("SC1")'
		RecLock("SX3",.F.)
		X3_RELACAO := "GetNumSC1()"
		MsUnLock()
	EndIf
EndIf

If MsSeek("C1_QUANT")
	cUsado := SX3->X3_USADO
	If MsSeek("C1_QTDORIG") .And. SX3->X3_USADO <> cUsado
		RecLock("SX3",.F.)
		X3_USADO := cUsado
		MsUnLock()
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Habilita uso do campo C1_ITEMGRD no Serie 3 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If __lPyme
	If dbSeek("C1_ITEMGRD") 
		RecLock( "SX3", .F. )
		SX3->X3_USADO  := "€€€€€€€€€€€€€€ "
		SX3->( MsUnlock() )
	EndIf
Endif

If VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11
	dbSeek("C1_OBS") 
	cReserv := SX3->X3_RESERV
	cUsado  := SX3->X3_USADO
	
	If dbSeek("C1_TPOP") .And. AllTrim(SX3->X3_WHEN) # "INCLUI"
		RecLock( "SX3", .F. )
		SX3->X3_USADO  := cUsado
		SX3->X3_RESERV := cReserv
		SX3->X3_WHEN   := "INCLUI"
		SX3->(MsUnlock())
	EndIf
EndIf

If dbSeek("C1_RATEIO")
	Reclock("SX3",.F.)
	SX3->X3_VISUAL := "A"
	MsUnlock()
EndIf
RestArea(aAreaSX3)

Return Nil


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110DtNec ³Autor  ³ Ricardo Berti         ³ Data ³14.02.2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao da data da necessidade          		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A110DtNec(ExpD1)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpD1 := (opcional) data da necessidade	                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T. / .F.                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo CONFIRMAR a data de necessidade³±±
±±³          ³quando MENOR que a do dia (BOPS 90145)  		               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110DtNec(dNeces)

Local lRetorno  := .T.
Local lDataNec  := ExistBlock("MT110DTN")
DEFAULT dNeces	:= &(ReadVar())

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .F.=Executando via VldHead()

If lGatilha .And. !l110Auto .And. !Empty( dNeces ) .And. dNeces < dDataBase

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para validar a data da necessidade da SC              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lDataNec 
	 	lRetorno := Execblock("MT110DTN",.F.,.F.)
	Else
	lRetorno := ( Aviso(OemToAnsi(STR0021),OemToAnsi(STR0058),{STR0059,STR0060},1,,1) == 1 ) //"Atencao!" //"Confirma a data de necessidade MENOR que a data base do sistema?"###"Sim"###"Não"
EndIf
EndIf
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110NumOP ³Autor  ³Alexandre Inacio Lemes ³ Data ³18/06/2009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao do numero da Ordem de Producao  		   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A110NumOp(ExpC1)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 := (opcional) Numero da Ordem de Producao             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T. / .F.                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110NumOP(cNumOP)

Local lRetorno  := .T.
Local nPosOP    := aScan(aHeader,{|x| Trim(x[2])=="C1_OP"})

DEFAULT cNumOP  := &(ReadVar())

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .F.=Executando via VldHead()

If lGatilha .And. !l110Auto .And. nPosOP > 0 .And. !Empty(cNumOP)
	SC2->(dbSetOrder(1))
	If ( SC2->(MsSeek(xFilial("SC2")+cNumOP)) .And. !Empty(SC2->C2_DATRF))
		Help(" ",1,"A250ENCERR")
		lRetorno := .F.
	EndIf
EndIf

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A110ComView³ Autor ³Alexandre Inacio Lemes³ Data ³11/08/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria uma tela de consulta de historico dos produtos        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA110                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110ComView()

Local nPosCod	:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_PRODUTO"})

If !AtIsRotina("MACOMVIEW")
	If !Empty(aCols[n][nPosCod])
		MaComView(aCols[n][nPosCod])
	EndIf
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110IndSC6³ Autor ³Rodrigo de A Sartorio  ³ Data ³18.10.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³VerIfica a existencia do indice 9 no arquivo SC6            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A110IndSC6()
Local cSixChave := ""
Local aArea:=GetArea()
Local aAreaSIX:=SIX->(GetArea())
Local lRet:=.F.
dbSelectArea("SIX")
MsSeek("SC6")
Do While (INDICE == "SC6") .and. !Eof()
   cSixChave := AllTrim(CHAVE)
   If SIX->ORDEM == "9" .And. cSixChave == "C6_FILIAL+C6_NUMSC+C6_ITEMSC"
      lRet:=.T.
      Exit
   EndIf
   dbSkip()
EndDo
RestArea(aAreaSIX)
RestArea(aArea)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Fabio Alves Silva     ³ Data ³06/11/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()
Local lGspInUseM := If(Type('lGspInUse')=='L', lGspInUse, .F.)
Local lPrjCni 	 := FindFunction("ValidaCNI") .And. ValidaCNI()
Local lR7	 	 := Val(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R7" .Or. Val(GetVersao(.F.))  > 11
PRIVATE aRotina	:= {}

// ALTERADO PARA SIGAGSP
aAdd(aRotina, {OemToAnsi(STR0006),"PesqBrw"    , 0 , 1, 0, .F.})		//"Pesquisar"
aAdd(aRotina, {OemToAnsi(STR0007),"A110Visual" , 0 , 2, 0, nil})		//"Visualizar"
aAdd(aRotina, {OemToAnsi(STR0008),"A110Inclui" , 0 , 3, 113, nil})		//"Incluir"
aAdd(aRotina, {OemToAnsi(STR0009),"A110Altera" , 0 , 4, 4, nil}) 	//"Alterar"
aAdd(aRotina, {OemToAnsi(STR0022),"A110Impri"  , 0 , 4, 0, nil})		//"Imprimir"
aAdd(aRotina, {OemToAnsi(STR0010),"A110Deleta" , 0 , 5, 5, nil})	   //"Excluir"

if lPrjCni /*
	If !lGspInUseM
		aAdd(aRotina, {OemToAnsi(STR0032),"A110Aprov"  , 0 , 7, 0, nil})	//"Aprovacao"
	EndIf*/
Else
	If !lGspInUseM
		aAdd(aRotina, {OemToAnsi(STR0032),"A110Aprov"  , 0 , 7, 0, nil})	//"Aprovacao"
	EndIf
EndIf    

aAdd(aRotina, {OemToAnsi(STR0036),"A110Copia"  , 0 , 9, 113, nil})		//"Copia"
aAdd(aRotina, {OemToAnsi(STR0023),"A110Legenda", 0 , 2, 0, .F.})		//"Legenda"
aAdd(aRotina, {OemToAnsi(STR0049),"A110Cancela", 0 , 6, 0, nil})		//"Cancelamento SCs"
If !__lPyme
	AAdd( aRotina, {OemToAnsi(STR0061), "MsDocument", 0, 4, 0, nil} )	//"Conhecimento"
EndIf
                      
if lPrjCni
	aAdd(aRotina, {OemToAnsi("Gera Contrato"),"A110GeraGCT", 0 , 6, 0, nil})		//"Gera Contrato" 
	aAdd(aRotina, {OemToAnsi("Exclui Contrato"),"A110ExclGCT", 0 , 6, 0, nil})		//"Exclui Contrato"
	
	// 23/05/2011 - Inclusao da opcao log Processos no vetor aRotina 
	aAdd(aRotina, {OemToAnsi("Log dos Processos"),"COMA100" , 0 , 2, 0, nil})			//"Log Historico"
	
	//Caio.Santos -  01/03/2012 - Rotina p/ classificar SC incluida via SA
	aAdd(aRotina, {"Classificar","A110Classif",0,4,4,Nil})
EndIf
#IFDEF TOP
	If FindFunction("MAComCent") .And. (lR7 .Or. lPrjCNI)
		aAdd(aRotina, {STR0096,"MAComCent", 0 , 6, 0, nil})		//"Compra Centralizada"
	EndIf
#ENDIF

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada utilizado para inserir novas opcoes no array aRotina  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MTA110MNU")
	ExecBlock("MTA110MNU",.F.,.F.)
EndIf
Return(aRotina)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A110QtdGra ³ Autor ³ Marcelo Iuspa       ³ Data ³ 15/01/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Faz tratamento de grade na digitacao de quantidades        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum (Le variaveis de memoria - ReadVar)                 ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Retorno   ³ True ou False (caso seja opcao de visualizacao)            ³±± 
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³ Uso      ³ Em validacoes de campos que receberao tratamento para      ³±±
±±º          ³ edicao via grade (Ex.: C1_QUANT, C1_DATPRF) exibe a        º±±
±±º          ³ grade de produtos permitindo digitacao dos dados           º±±
±±º          ³                                                            º±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A110QtdGra()
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C1_PRODUTO"})
Local nPQtdCom  := aScan(aHeader,{|x| AllTrim(x[2])=="C1_QUANT"  })
Local nPQtdCom2 := aScan(aHeader,{|x| AllTrim(x[2])=="C1_QTSEGUM"})
Local nOpcA 	:= 0
Local nCntFor	:= 0
Local nColuna 	:= 0
Local nLinMha	:= 0
Local cCpoName	:= StrTran(ReadVar(),"M->","")

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .T.=Permite preencher aCols /  .F.=Executando via VldHead() 

If lGatilha .And. lGrade .And. !Empty(aCols[n][nPProduto])
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Arrays auxiliares para armazenar a getdados principal³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oGrade:cProdRef	:= aCols[n][nPProduto]
	oGrade:nPosLinO	:= n
	If oGrade:Show(cCpoName)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza a quantidade do acols original                                 ³
		//³ATENCAO: a variavel nQtdInformada foi alimentada dentro do objeto com   ³
		//³         ReadVar(), mas o programador pode alimentala quando desejar.   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DO CASE
			//POSICIONADO NA QUANTIDADE VENDIDA
			CASE "C1_QUANT" $ cCpoName
				oGrade:nQtdInformada:=oGrade:SomaGrade("C1_QUANT",oGrade:nPosLinO,oGrade:nQtdInformada)
				aCols[n][nPQtdCom]	:= oGrade:nQtdInformada
				M->C1_QUANT	        := oGrade:nQtdInformada

				If ( nPQtdCom2 > 0 )
					oGrade:nQtdInformada := 0
					oGrade:nQtdInformada := oGrade:SomaGrade("C1_QTSEGUM",oGrade:nPosLinO,oGrade:nQtdInformada)
					//A410MultT("C6_UNSVEN",oGrade:nQtdInformada)
					aCols[n][nPQtdCom2] := oGrade:nQtdInformada
					M->C1_QTSEGUM       := oGrade:nQtdInformada
				EndIf
                         
				M->C1_DATPRF:=DDATABASE
			CASE "C1_QTSEGUM" $ cCpoName 
		   			oGrade:nQtdInformada:=oGrade:SomaGrade("C1_QTSEGUM",oGrade:nPosLinO,oGrade:nQtdInformada)
					aCols[n][nPQtdCom2]	:= oGrade:nQtdInformada
					M->C1_QTSEGUM		:= oGrade:nQtdInformada
					oGrade:nQtdInformada:= 0
					oGrade:nQtdInformada:= oGrade:SomaGrade("C1_QUANT",oGrade:nPosLinO,oGrade:nQtdInformada)
					aCols[n][nPQtdCom]	:= oGrade:nQtdInformada
					M->C1_QUANT		:= oGrade:nQtdInformada
					M->C1_DATPRF:=DDATABASE
		END CASE
	EndIf
EndIf
Return( ALTERA .Or. INCLUI .Or. lCopia )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A110GValid ³ Autor ³ Marcelo Iuspa       ³ Data ³ 15/01/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Validacao na digitacao das quantidades na grade            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum (Le variaveis mp objeto grade)                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³ Uso      ³ Executada pelo objeto grade apos preenchimento de campo    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A110GValid()
Local lRet := .T.
Local uReadVar := &(ReadVar())
Local cProduto   := PAD(ograde:GetNameProd(ograde:cprodref,ograde:ogetdados:obrowse:nat,ograde:ogetdados:obrowse:ncolpos),Len(SC1->C1_PRODUTO))

dbSelectArea("SB1")
dbSetOrder(1)
MsSeek(xFilial("SB1")+cProduto)

cDescri := SB1->B1_DESC
Do Case
	Case !SB1->(Found())
		lRet := .F.
		Help(" ",1,"C1_PRODUTO")
	Case SB1->B1_CONTRAT == "S"
		lRet := .F.
		Help(" ",1,"A110CONTR")
	Case SB1->B1_SOLICIT =="S" .And. GetMv("MV_RESTSOL")=="S" .And. !A110Restr(cProduto,UsrRetGrp(),RetCodUsr())
		lRet := .F.
EndCase

If lRet
	If oGrade:cCpo == "C1_DATPRF"
		nLinha    := oGrade:oGetdados:oBrowse:Nat
		nColuna := oGrade:oGetdados:oBrowse:nColpos
		nposQuant:=aScan(ograde:acposCtrlGrd,{|x| AllTrim(x[1])=="C1_QUANT"})
		nqtd:=oGrade:aColsGrade[oGrade:nPosLinO, nlinha, ncoluna, nposQuant]
		If nQtd==0
			lRet:=.F.
			Help(' ',1,'A120DATPRF')
		Else
			lRet := A110DtNec()
		EndIf
	ElseIf oGrade:cCpo $ "C1_QUANT/C1_QTSEGUM"
		nLinha    := oGrade:oGetdados:oBrowse:Nat
		nColuna := oGrade:oGetdados:oBrowse:nColpos
		nposDatPrf:=aScan(ograde:acposCtrlGrd,{|x| AllTrim(x[1])=="C1_DATPRF"})
		nposQuant:=aScan(ograde:acposCtrlGrd,{|x| AllTrim(x[1])=="C1_QUANT"})
		
		If Empty(uReadVar)
			oGrade:aColsGrade[oGrade:nPosLinO, nlinha, ncoluna, nposDatPrf] := Ctod("")
		ElseIf Empty(oGrade:aColsGrade[oGrade:nPosLinO, nlinha, ncoluna, nposDatPrf])
			oGrade:aColsGrade[oGrade:nPosLinO, nlinha, ncoluna, nposDatPrf] := CriaVar("C1_DATPRF", .T.)
		EndIf
		If oGrade:cCpo $"C1_QTSEGUM"
		
			oGrade:aColsGrade[oGrade:nPosLinO][nlinha][ncoluna][nposQuant]:= ConvUM(cProduto,0,&(ReadVar()),1)
		
		Endif
	
	EndIf 
	
Endif
Return(lRet)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma110GraGr³ Autor ³Marcelo Iuspa          ³ Data ³15.12.06  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Esta funcao compatibiliza o acols da grade de produtos com  ³±±
±±³          ³o acols original da solicit. compras assim nao eh necessario³±±
±±³          ³qualquer modIficacao na funcao de gravacao da Solicitacao   ³±±
±±³          ³de Compra                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum  (Usa e atualiza direto o array private aCols)       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL1  (Define se chamado para gravação .T. ou não .F.      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Author  ³ BOPS  ³ Manutencao Efetuada                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma110GraGr()

Local aColsOrig:= aClone(aCols)  //aCols Original
Local nMaxFor  := Len(aColsOrig)
Local nCntFor  := 0     // Contador
Local nPProduto:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_PRODUTO"})
Local nPItem   := aScan(aHeader,{|x| AllTrim(x[2])=="C1_ITEM"})
Local nPItGrade:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_ITEMGRD"})
Local nPQtdVen := aScan(aHeader,{|x| AllTrim(x[2])=="C1_QUANT"})
Local nPQtdVen2:= aScan(aHeader,{|x| AllTrim(x[2])=="C1_QTSEGUM"})
Local nPDatPrf := aScan(aHeader,{|x| AllTrim(x[2])=="C1_DATPRF"})
Local nPGrade  := aScan(aHeader,{|x| AllTrim(x[2])=="C1_GRADE"})
Local nLinha   := 0     // Contador de Linhas
Local nColuna  := 0     // Contador de Colunas
Local nAcols   := 0     // Numero de Elementos do Acols
Local cProdRef := ""    // Codigo do Produto Grade
Local cItem    := "00"  // Controle de Itens do Pedido de Venda
Local aRet     :={} 
Local lTestaDel:= If(Len(aColsOrig[1])==Len(aHeader),.F.,.T.)

If MaGrade() .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade)>0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inicializa o Acols para posterior atualizacao                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCols := {}
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Varre o acols original para atualizar a variavel aCols                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nCntFor := 1 To nMaxFor
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza o Controle de Itens do Pedido de Venda e da Grade              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cItem    := aColsOrig[nCntFor][nPitem]
		cItemGrd := "000"
		cProdRef := aColsOrig[nCntFor][nPProduto]
		If ( !Empty(cProdRef) )
			oGrade:nPosLinO := nCntFor
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se foi digitado uma referencia                                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( Len(oGrade:aHeadGrade)>0 .And. oGrade:aHeadGrade[nCntFor][1] == "R" ) .And. aColsOrig[nCntFor, nPGrade]  == "S"
				For nLinha := 1 To Len(oGrade:aColsGrade[nCntFor])
					For nColuna := 2 To Len(oGrade:aHeadGrade[nCntFor])
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Verifica se ha valor a ser gravado                                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( oGrade:aColsFieldByName("C1_QUANT",nCntFor,nLinha,nColuna) <> 0 .And.;
								If(lTestaDel,!aColsOrig[nCntFor][Len(aHeader)+1],.T.) )
							cItemGrd := Soma1(cItemGrd,Len(SC1->C1_ITEMGRD))
							cProdRef := aColsOrig[nCntFor][nPProduto]
							MatGrdPrRf(@cProdRef)
							cProdRef := oGrade:GetNameProd(cProdRef,nLinha,nColuna)
							
							aadd(aCols,aClone(aColsOrig[nCntFor]))
							nAcols := Len(aCols)
							aCols[nAcols][nPProduto ]  := PadR(cProdRef,Len(SB1->B1_COD))
							aCols[nAcols][nPItem    ]  := cItem
							If ( nPItGrade <> 0 )
								aCols[nAcols][nPItGrade ]  := cItemGrd
							EndIf
							If ( nPQtdVen <> 0 )
								aCols[nAcols][nPQtdVen  ]  := oGrade:aColsFieldByName("C1_QUANT",nCntFor,nLinha,nColuna)
							EndIf
							If ( nPQtdVen2 <> 0 )
								aCols[nAcols][nPQtdVen2 ]  := oGrade:aColsFieldByName("C1_QTSEGUM",nCntFor,nLinha,nColuna)
							EndIf
							If  ( nPGrade <>  0 )
								aCols[nAcols][nPGrade   ]  := "S"
							EndIf
							If  ( nPDatPrf <> 0 )
								aCols[nAcols][nPDatPrf  ]  := oGrade:aColsFieldByName("C1_DATPRF",nCntFor,nLinha,nColuna)
							EndIf	
					
						Else
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se o item ja foi gravado para deleta-lo                        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( !Empty(oGrade:aColsFieldByName("C1_ITEM",nCntFor,nLinha,nColuna)) )
								cProdRef := aColsOrig[nCntFor][nPProduto]
								cItemGrd := Soma1(cItemGrd,Len(SC1->C1_ITEMGRD))
								MatGrdPrRf(@cProdRef)
								cProdRef := oGrade:GetNameProd(cProdRef,nLinha,nColuna)
								
								aadd(aCols,aClone(aColsOrig[nCntFor]))
								nAcols := Len(aCols)
								aCols[nAcols][nPProduto ]  := PadR(cProdRef,Len(SB1->B1_COD))
								aCols[nAcols][nPItem    ]  := cItem
								If ( nPItGrade <> 0 )
									aCols[nAcols][nPItGrade ]  := cItemGrd
								EndIf
								If ( nPQtdVen <> 0 )
									aCols[nAcols][nPQtdVen  ]  := oGrade:aColsFieldByName("C1_QUANT",nCntFor,nLinha,nColuna)
								EndIf
								If  ( nPGrade <>  0 )
									aCols[nAcols][nPGrade   ]  := "S"
								EndIf
								aCols[nAcols][Len(aHeader)+1] := .T. 
							
							EndIf
						EndIf
					Next nColuna
				Next nLinha
			Else 
				aadd(aCols,aClone(aColsOrig[nCntFor]))
				nAcols := Len(aCols)
				aCols[nAcols][nPItem    ]  := cItem
			EndIf
		EndIf
	Next nCntFor
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ordena o aCols                                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCols       := aSort(aCols,,,{|x,y| x[nPItem]+x[nPItGrade] < y[nPItem]+y[nPItGrade] })

	oGrade:aColsGrade  := {}
	oGrade:aHeadGrade  := {}

EndIf

Return(aRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A110AfterH ³ Autor ³Nereu Humberto Junior ³Autor ³12/04/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Acrescenta campos no aHeader construido pela FillGetDados   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = aHeader de Referencia utilizado na FillGetDados    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110AfterH(aHeaderX)

Local aAreaSX3 := SX3->(GetArea())

If Ascan(aHeaderX,{|x| Alltrim(x[2])=="C1_ORIGEM"}) == 0
	dbSelectArea("SX3")
	dbSetOrder(2)
	If dbSeek("C1_ORIGEM") 
		AADD(aHeaderX,{TRIM(X3Titulo()),SX3->X3_CAMPO,SX3->X3_PICTURE,SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,SX3->X3_USADO,SX3->X3_TIPO,SX3->X3_ARQUIVO,SX3->X3_CONTEXT } )	
	Endif	
EndIf

RestArea(aAreaSX3)

Return
       
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma110ValGr³ Autor ³Patricia Duca          ³ Data ³20.06.06  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Esta funcao compatibiliza o acols da grade de produtos      ³±±
±±³          ³para verificar se foram digitados itens na grade            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Author  ³ BOPS  ³ Manutencao Efetuada                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma110ValGr()

Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C1_PRODUTO"})
Local nPItem    := aScan(aHeader,{|x| AllTrim(x[2])=="C1_ITEM"})
Local nPGrade   := aScan(aHeader,{|x| AllTrim(x[2])=="C1_GRADE"})
Local nLinha    := 0     // Contador de Linhas
Local nColuna   := 0     // Contador de Colunas
Local nAcols    := 0     // Numero de Elementos do Acols
Local cProdRef  := ""    // Codigo do Produto Grade                 0
Local cItem     := "00"  // Controle de Itens do Pedido de Compra
Local dDataEnt  := Nil
Local aRet      := {}
Local lSai      := .F.

Local lTestaDel:= If(Len(aCols[1])==Len(aHeader),.F.,.T.)


If MaGrade() .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade)>0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza o Controle de Itens do Pedido de Venda e da Grade              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cItem    := aCols[n][nPitem] 
	cItemGrd := "000"
	cProdRef := aCols[n][nPProduto]
	If ( !Empty(cProdRef) )
		
		oGrade:nPosLinO := n
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se foi digitado uma referencia                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( Len(oGrade:aHeadGrade)>0 .And. oGrade:aHeadGrade[n][1] == "R" ) .And. aCols[n, nPGrade]  == "S"
			For nLinha := 1 To Len(oGrade:aColsGrade[n])
				For nColuna := 2 To Len(oGrade:aHeadGrade[n])
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Verifica se ha valor a ser gravado                                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ( oGrade:aColsFieldByName("C1_QUANT",n,nLinha,nColuna) <> 0) .And. If(lTestaDel,!aCols[n][Len(aHeader)+1],.T.)
				
						cProdRef := aCols[n][nPProduto]
					
						If !Empty(cProdRef)
							aRet    := {cProdRef}
							Exit
						EndIf
					Endif          
				Next nColuna
			Next nLinha
		Endif
	Endif
EndIf

Return(aRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A110UsrDru ³ Autor ³Felipe Nunes de Toledo³ Data ³ 18/10/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Retorna o Cod. do Usuario informado no param. MV_SOLIDRU.  ³±±
±±³			 ³ Parametro utilizado para informar o Nome do Usuario a ser  ³±±
±±³			 ³ considerado na geracao de SCs atraves da integracao com    ³±±
±±³			 ³ o Drummer Aps.                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ COM/PCP                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A110UsrDru(cUser)
Local lApsDrummer:= SuperGetMv("MV_APS",.F.,"")=="DRUMMER"
Local cSoliDru   := AllTrim(SuperGetMv("MV_SOLIDRU",.F.,""))
Local cCodUser   := ""

If lApsDrummer .And. Empty(cUser) .And. !Empty(cSoliDru)
	PswOrder(2)
	If PswSeek(cSoliDru)
		cCodUser := PswRet(1)[1][1]
	EndIf
	If !Empty(cCodUser)
		cUser := cCodUser
	EndIf
EndIf

Return(cUser)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MATA110_V  ³ Autor ³Rodrigo de A Sartorio ³ Data ³ 22/05/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao utilizada para verificar a ultima versao do fonte   ³±±
±±³			 ³ MATA110.PRX aplicado no rpo do cliente, assim verificando  ³±±
±±³			 ³ a necessidade de uma atualizacao neste fonte.			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ EST/PCP/FAT/COM	                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATA110_V
Local nRet := 20070522 // 22 de MAIO DE 2007 
Return nRet 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a110When   ³ Autor ³Aline Sebrian Damasceno³ Data ³22/05/08  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajusta validação do campo c1_filent                         ³±±
±±³			 ³                                                             ³±±
±±³			 ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ COM                                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Static Function a110When()   
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local lPcFilEnt         := SuperGetMv("MV_PCFILEN",.F.,.T.)
Local lRet              := VisualSX3("C1_FILENT") .And. lPcFilEnt .And. FWModeAccess("SC7") == "E" //!Empty(xFilial("SC7")) 
Local lMT110WHEN        := ExistBlock('MT110WHEN')
     
if lPrjCni
	lRet := VisualSX3("C1_FILENT") .And. lPcFilEnt .And. !Empty(xFilial("SC7")) 
EndIf

If lMT110WHEN
   lRet := ExecBlock('MT110WHEN', .F., .F.)
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a110DtVld  ³ Autor ³Aline Sebrian Damasceno³ Data ³06/11/08  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida o campo c1_emissao			                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ COM                                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/  

Static Function a110DtVld(nOpcx,lCopia)   
Local lRet          := .T.
Local lMT110DTV     := .T.  
  
If ExistBlock("MT110DTV")
	lMT110DTV := Execblock("MT110DTV",.F.,.F.,{nOpcx,lCopia})
	If ValType(lMT110DTV) == "L" .And. !lMT110DTV
		lRet := .F.
	EndIf 
EndIf  

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ AjustaHlpºAutor  ³Andre Anjos	     º Data ³  23/03/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Ajuste dos helps do programa                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA110                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AjustaHlp()
Local aHelpPor := {}
Local aHelpSpa := {}
Local aHelpEng := {}

aHelpPor := {"A solicitação de importação vinculada ","a esta SC deverá ser excluida através ","do módulo SIGAEIC."}
aHelpEng := {"The import request bounded to this PR ","must be deleted in SIGAEIC module."}
aHelpSpa := {"La solicitud de importación vinculada ","a esta SC deberá ser borrada en el","módulo SIGAEIC."}

PutSX1Help("SITEMIMPORT",aHelpPor,aHelpEng,aHelpSpa,.F.)

aHelpPor := {"Solicitação não pode ser excluída, pois ","foi gerada através do processo de ","Gera Pre-Requisição."}
aHelpEng := {"Request cannot be deleted because it was"," generated through the process Of"," Pre-Request Generation."}
aHelpSpa := {"Solicitud no se puede borrar, pues"," fue generada por medio del proceso de "," Genera Requisición Previa"}
PutHelp("PA110PRE",aHelpPor,aHelpEng,aHelpSpa,.F.)

aHelpPor := {"Utilize a opção: Excluir através do "," processo: Baixa Pre-Requisição",""}  
aHelpEng := {"Use the Delete option through the "," process of Pre-Request Write-off",""}
aHelpSpa := {"Utilice la opción: Borrar por medio ","del proceso: Baja Requisición Previa.",""}
PutHelp("SA110PRE",aHelpPor,aHelpEng,aHelpSpa,.F.)

aHelpPor := {"Identifica o tipo do documento para fins ","de planejamento do recebimento: ","F-Firme ; P-Previsto"}
aHelpEng := {"Identifies the type of document","for planning purposes of receipt:","F-Firm ; P-Predicted"}
aHelpSpa := {"Identifica el tipo de documento para fines ","de planificación de su recepción: ","F-Firm ; P-Prevista"}
PutHelp("PCTPOP",aHelpPor,aHelpEng,aHelpSpa,.F.)

If SC1->(FieldPos("C1_COMPRAC")) > 0				
	aHelpPor := {"Esta solicitação não poderá ser alterada","pois atende a uma solicitação de","outra filial."}
	aHelpEng := {"This requisition can't be altered because","it deals with a requisition from","another branch."}
	aHelpSpa := {"Esta solicitud no podrá ser alterada","pues atiende la una solicitud de otra","filial."}
	PutHelp("PCOMCEN",aHelpPor,aHelpEng,aHelpSpa,.F.)
	
	aHelpPor := {"Não se aplica."}
	aHelpEng := {"Not applicable."}
	aHelpSpa := {"No apliclabe."}
	PutHelp("SCOMCEN",aHelpPor,aHelpEng,aHelpSpa,.F.)
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ AjustaSXBºAutor  ³Julio  		     º Data ³  29/10/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Ajuste da SXB				                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA110                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AjustaSXB()
Local aArea:= GetArea()

dbSelectArea("SXB")
If dbSeek("W13   "+"6")
    If Rat("aHeader",SXB->XB_CONTEM)=0
	   	RecLock("SXB",.F.)
		SXB->XB_CONTEM := "SA5->A5_PRODUTO == aCols[N][aScan(aHeader,{|x| AllTrim(x[2]) == 'C1_PRODUTO'})] .AND. SA5->A5_FORNECE == aCols[N][aScan(aHeader,{|x| AllTrim(x[2]) == 'C1_FORNECE'})]"
		MsUnLock()
	EndIf
EndIf

RestArea(aArea)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ PutByAPS ºAutor  ³ Andre Anjos		 º Data ³  09/11/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Retorna se eh inclusao pelo APS.                           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA110                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function PutByAPS()
Return Type("l110Auto") == "L" .And. l110Auto .And. SuperGetMV("MV_APS",.F.,"") == "TOTVS" .And.;
			 !Empty(ProcH('C1_SOLICIT')) .And. AllTrim(aAutoCab[ProcH('C1_SOLICIT'),2]) == "TOTVS APS"
			 
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³__MYEDIT  ³ Autor ³Allyson Freitas        ³ Data ³08.02.12  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Esta funcao faz com que a validacao de permissao seja       ³±±
±±³          ³executada antes da alteracao dos campos                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   OBS    ³***** NAO ALTERAR ESSA FUNCAO ******                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function __MYEDIT(a,b,c,d,e,g,oGet)
Local xRet		:= NIL
Local cMenVar   := NIL 
Local cFieldSC1 := ReadVar()
Local cFieldEdit:= SubStr(cFieldSC1,4,Len(cFieldSC1))
Local nPProduto := aScan(aHeader,{|x| Trim(x[2])=="C1_PRODUTO"})
Local lRet := .T.

cFieldSC1	:= ReadVar()
cFieldEdit	:= SubStr(cFieldSC1,4,Len(cFieldSC1))

If Altera
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o usuario tem permissao de alteracao. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cFieldEdit $ "C1_PRODUTO"
		If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
			If !(lRet := MaAvalPerm(1,{cCampo,"MTA110",5}) .And. MaAvalPerm(1,{aCols[n][nPProduto],"MTA110",3}))
				Help(,,1,'SEMPERM')
			EndIf
		EndIf
	Else
		If VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11 .And. FindFunction("MaAvalPerm")
			If !(lRet := MaAvalPerm(1,{aCols[n][nPProduto],"MTA110",4}))
				Help(,,1,'SEMPERM')
			EndIf
		EndIf
	EndIf
EndIf

If lRet
	d:Cargo := "N"
	xRet := lEditCol(a,b,c,d,e,g)
	d:Cargo :={|a,b,c,d,e,g| __MYEDIT(a,b,c,d,e,g,oGet)}
Endif  
Return xRet
 
// 05/05/2011 - Funcao de Validacao do Campo C1_XTIPOSC           
/*/
______________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+------------------------------------------------------------------------+¦¦
¦¦¦Funcao    ¦  CM060VL3    ¦ Autor ¦ Bruna Paola       ¦ Data ¦ 02/05/11  ¦¦¦
¦¦+----------+-------------------------------------------------------------¦¦¦
¦¦¦Descricao ¦ Funcao de validacao do campo C1_XTIPOSC.					   ¦¦¦
¦¦+----------+-------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ Exclusivo TOTVS.								   			   ¦¦¦
¦¦+----------+-------------------------------------------------------------¦¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/  
Function CM060VL3(cTipoSC)

Local cChave 	:= "" 
Local cQuery 	:= ""
Local cNum   	:= ""
Local nControle := 0
Local cMsg		:= ""
Local lParam	:= GETMV("MV_SEQESP")
Local cTpAx  	:= GETMV("MV_TPSCAX")
Local cTpCt 	:= GETMV("MV_TPSCCT")

cDescTp  :=  POSICIONE("COL",1,XFILIAL("COL")+M->C1_XTIPOSC,"COL_DESC") 
M->C1_XTPDESC := POSICIONE("COL",1,XFILIAL("COL")+M->C1_XTIPOSC,"COL_DESC") 

If(lParam == .F.)
	Return (.T.)
EndIf

DbSelectArea("COE")
DbSetOrder(2)  //PA1_FILIAL+PA1_DOC
                   
// Verifica se existe range cadastrado para o tipo de documento escolhido
If !( DbSeek(xFilial("COE")+cTipoSC) )   

	MsgAlert("O sistema esta configurado para utilizar codificação especifica. O tipo de documento escolhido, "+;
	"nao possui um intervalo cadastrado.","ATENCAO")
	
	Return (.F.)	
EndIf       
          

// Verifica se existe codigo cadastrado para o tipo de documento escolhido     
If cTipoSC == cTpAx 
	DbSelectArea("COL")
	DbSetOrder(1)  
	If !( DbSeek(xFilial("COL")+cTpAx) )   
	    
		cTipoSC := ''
		MsgAlert("O código informado no parametro MV_TPSCAX não existe no cadastro de Tipo de Documento. Favor verificar.","ATENCAO")
		
		Return (.F.)	
	EndIf  

Elseif cTipoSC == cTpCt
	// Verifica se existe codigo cadastrado para o tipo de documento escolhido
	If !( DbSeek(xFilial("COL")+cTpCt) )   
	    
		cTipoSC := ''
		MsgAlert("O código informado no parametro MV_TPSCCT não existe no cadastro de Tipo de Documento. Favor verificar.","ATENCAO")
		
		Return (.F.)	
	EndIf  
Endif


// Procura qual o ultimo numero usado no C1_NUM para esse tipo de documento selecionado
cQuery  := "  SELECT MAX(C1_NUM) AS C1_NUM"
cQuery  += "  FROM " + RetSQLName('SC1') + " SC1 " 
cQuery  += "  WHERE C1_XTIPOSC = " + ValToSQL(cTipoSC) + "AND"
cQuery  += "  D_E_L_E_T_ <> '*' "

cQuery := ChangeQuery(cQuery) 

Conout(cQuery)

DbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"TEMP",.T.,.T.)

DbSelectArea("TEMP")  

// Incrementar 1 no C1_NUM encontrado 
If ( Empty(C1_NUM) ) // Primeiro registro de SC do tipo de documento escolhido
	cNum := COE->COE_INICIO
Else
	cNum := Soma1(C1_NUM)
EndIf

TEMP->( DbCloseArea() )

DbSelectArea("COE")
DbSetOrder(2)  //COE_FILIAL+COE_DOC 
DbSeek(xFilial("COE")+cTipoSC)

cChave := xFilial("COE")+cTipoSC 
	
Do While !( Eof() ) .And. ( xFilial("COE")+COE->COE_DOC == cChave ) // Verifica somente os ranges do tipo de documento escolhido

	If (cNum >= COE->COE_INICIO).And.(cNum <= COE->COE_FINAL) // Verifica se o numero pertence a algum range definido      
       nControle := 1 
       Exit
    ElseIf (cNum < COE->COE_INICIO) // Primeiro num do intervalo cadastrado  
    	cNum := COE->COE_INICIO
    	nControle := 1
    	Exit
	EndIf      

	DbSkip()
EndDo     
	
// Nao existe intervalo cadastrado para o tipo de documento(acabou o range dos cadastrados)
If (nControle == 0)
          
	cMsg := "Um novo intervalo deve ser cadastrado para esse tipo de documento."
	
	MsgAlert(cMsg,"ATENCAO")
	
	Return (.F.)
EndIf    


// Atribui ao objeto Num da SC o valor definido pelo tipo de documento.   
DbSelectArea("SC1")    
cA110Num := cNum

Return (.T.) 

// 05/05/2011 - Funcao de Validacao do Campo C1_NUM
/*/
______________________________________________________________________________
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¦¦+------------------------------------------------------------------------+¦¦
¦¦¦Funcao    ¦  CM060VL4    ¦ Autor ¦ Bruna Paola       ¦ Data ¦ 03/05/11  ¦¦¦
¦¦+----------+-------------------------------------------------------------¦¦¦
¦¦¦Descricao ¦ Funcao de validacao do campo C1_NUM.						   ¦¦¦
¦¦+----------+-------------------------------------------------------------¦¦¦
¦¦¦Uso       ¦ Exclusivo TOTVS.								   			   ¦¦¦
¦¦+----------+-------------------------------------------------------------¦¦¦
¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
/*/  
Function CM060VL4()  

Local nControle := 0
Local cChave 	:= ""
Local cTipoSC	:= cTpSC
Local lParam	:= GETMV("MV_SEQESP")

If (Empty(cTipoSC) .Or. (lParam != .T.))
	Return (.T.)
EndIf

DbSelectArea("COE")
DbSetOrder(2)  //COE_FILIAL+COE_DOC 
DbSeek(xFilial("COE")+cTipoSC)

cChave := xFilial("COE")+cTipoSC 
	
Do While !( Eof() ) .And. ( xFilial("COE")+COE->COE_DOC == cChave ) // Verifica somente os ranges do tipo de documento escolhido

	If (cA110Num >= COE->COE_INICIO).And.(cA110Num <= COE->COE_FINAL) // Verifica se o numero pertence a algum range definido      
       nControle := 1 
       Exit
 	EndIf
 	
 	DbSkip()
EndDo

If (nControle == 0)
	MsgStop("Esse numero nao pertence ao tipo de documento escolhido.","ATENCAO")
   	Return (.F.)
EndIf

Return (.T.)          

    
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³CM060VL5  ºAutor  ³FSW                 º Data ³  06/07/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³VALIDACAO CAMPO C1_CONTA                                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FSW                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function CM060VL5(cConta)
            
If Left(cConta,2) <> Left(cCusto,2)
     Alert("Conta contábil deve ser da mesma familia que o centro de custo.")
     Return(.F.)
Endif

Return (.T.)        

                                                                      
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A110GeraGCT³ Autor ³ FSW                 ³ Data ³ 10/05/11 ³±±
±± Caio.Santos - FSW - 05/04/2012 - Recodificacao da funcao				   ±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Gera um contrato da SC                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum (Le variaveis mp objeto grade)                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³ Uso      ³ TOTVS                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A110GeraGCT()

Local cParSc 	:= GETMV("MV_TPSCCT")//Tipo da SC
Local cContrato := ""

Local nTotCN9 	:= 0
Local nTotCNA 	:= 0
Local nItem 	:= 0

//Abertura das tabelas de contrato
ChkFile("CN9")//Contrato
ChkFile("CNA")//Planilhas
ChkFile("CNB")//Itens Planilhas
ChkFile("CNC")//Fornecedores x Contrato
ChkFile("CNN")//Usuario x Contrato

//CN9_FILIAL+CN9_NUMERO+CN9_REVISA
CN9->(dbSetOrder(1))
//CNA_FILIAL+CNA_CONTRA+CNA_REVISA+CNA_NUMERO
CNA->(dbSetOrder(1))
//CNB_FILIAL+CNB_CONTRA+CNB_REVISA+CNB_NUMERO+CNB_ITEM
CNB->(dbSetOrder(1))
//CNC_FILIAL+CNC_NUMERO+CNC_CODIGO+CNC_LOJA
CNC->(dbSetOrder(1))
//CNN_FILIAL+CNN_USRCOD+CNN_CONTRA+CNN_TRACOD
CNN->(dbSetOrder(1))
//C1_FILIAL+C1_NUM+C1_ITEM
SC1->(dbSetOrder(1))

If SC1->C1_XTIPOSC != cParSc
	Aviso("Atenção",OemToAnsi("Tipo da SC deve ser de aditivo de contrato, contrato não gerado."),{"Ok"})
ElseIf Empty(SC1->C1_XNUMCT)
	Aviso("Atenção",OemToAnsi("Não há contrato a se basear para gerar o novo contrato, preencher o campo 'Num. Contrato', contrato não gerado."),{"Ok"})
ElseIf SC1->C1_XSTGCT == "1"
	Aviso("Atenção",OemToAnsi("Já foi gerado um contrato a partir desta SC, contrato não gerado."),{"Ok"})
ElseIf SC1->C1_APROV != "L"
	Aviso("Atenção",OemToAnsi("A SC deve estar liberada para gerar um contrato, contrato não gerado."),{"Ok"})
ElseIf !CN9->(dbSeek(xFilial("CN9")+SC1->(C1_XNUMCT+C1_XNUMREV)))
	Aviso("Atenção",OemToAnsi("Contrato a se basear não encontrado, verificar o campo 'Num. Contrato', contrato não gerado."),{"Ok"})
Else

	cContrato := GetSXENum("CN9","CN9_NUMERO")
	While	CNA->(dbSeek(xFilial("CNA")+cContrato)) .Or. ;
			CNB->(dbSeek(xFilial("CNB")+cContrato)) .Or. ;
			CNC->(dbSeek(xFilial("CNC")+cContrato))
			
			cContrato := GetSXENum("CN9","CN9_NUMERO")
			
	EndDo
	
	dDataIni  := CN9->CN9_DTINIC
	cVige     := CN9->CN9_VIGE
	cUnVige   := CN9->CN9_UNVIGE
	cCondPg   := CN9->CN9_CONDPG
	cTpCto    := CN9->CN9_TPCTO
	cIndice   := CN9->CN9_INDICE
	cFlgRej   := CN9->CN9_FLGREJ
	cFlgCau   := CN9->CN9_FLGCAU
	nMoeda    := CN9->CN9_MOEDA
	cCtOrigem := CN9->CN9_NUMERO //CN9->CN9_XCTORI
	cRevOri   := CN9->CN9_REVISA //CN9->CN9_XRVORI
	
	//Fornecedores do contrato original
	BeginSQL Alias "CNCTMP"
		SELECT CNC_NUMERO, CNC_CODIGO, CNC_LOJA
		FROM %Table:CNC% CNC
		WHERE CNC_FILIAL = %xFilial:CNC% AND CNC_NUMERO = %Exp:CN9->CN9_NUMERO% AND CNC.%NotDel%
		GROUP BY CNC_NUMERO, CNC_CODIGO, CNC_LOJA
	EndSQL
	CNCTMP->(dbGoTop())
	
	//Usuarios do contrato original
	BeginSQL Alias "CNNTMP"
		SELECT CNN_CONTRA, CNN_USRCOD, CNN_TRACOD, CNN_GRPCOD
		FROM %Table:CNN% CNN
		WHERE CNN_FILIAL = %xFilial:CNN% AND CNN_CONTRA = %Exp:CN9->CN9_NUMERO% AND CNN.%NotDel%
		GROUP BY CNN_CONTRA, CNN_USRCOD, CNN_TRACOD, CNN_GRPCOD
	EndSQL
	CNNTMP->(dbGoTop())

	BeginSQL Alias "SC1TMP"
		SELECT * 
		FROM %Table:SC1% SC1
		WHERE C1_FILIAL = %xFilial:SC1% AND C1_NUM = %Exp:SC1->C1_NUM% AND SC1.%NotDel%
	EndSQL
	SC1TMP->(dbGoTop())
	
	//Comeca a gravacao do novo contrato
	Begin Transaction
	
		While !SC1TMP->(EOF())

			//Itens planilha novo contrato
			nItem++
			RecLock("CNB",.T.)
				CNB_FILIAL := xFilial("CNB")
				If CNB->(FieldPos("CNB_FILORI")) > 0
					CNB->CNB_FILORI := xFilial("CNB")
				EndIf
				CNB_NUMERO := "000001"
				CNB_ITEM   := StrZero(nItem,3)
				CNB_PRODUT := SC1TMP->C1_PRODUTO
				CNB_DESCRI := SC1TMP->C1_DESCRI
				CNB_UM     := SC1TMP->C1_UM
				CNB_QUANT  := SC1TMP->C1_QUANT
				CNB_VLUNIT := SC1TMP->C1_VUNIT
				CNB_VLTOT  := SC1TMP->C1_VUNIT * SC1TMP->C1_QUANT
				CNB_VLFUTU := SC1TMP->C1_VUNIT * SC1TMP->C1_QUANT
				CNB_CONTRA := cContrato
				CNB_DTCAD  := dDataBase
				//CNB_REVISA :=
			   	CNB_SLDMED := SC1TMP->C1_QUANT
				CNB_SLDREC := SC1TMP->C1_QUANT
				CNB_CONTA  := SC1TMP->C1_CONTA
				CNB_XCC    := SC1TMP->C1_CC
				CNB_XITEMC := SC1TMP->C1_ITEMCTA
				CNB_XCLVL  := SC1TMP->C1_CLVL
				CNB_NUMSC := SC1TMP->C1_NUM
				CNB_ITEMSC := SC1TMP->C1_ITEM
				If CNB->(FieldPos("CNB_XEC05D")) > 0
					CNB_XEC05D := SC1TMP->C1_EC05DB
				EndIf
				If CNB->(FieldPos("CNB_XEC06D")) > 0
					CNB_XEC06D := SC1TMP->C1_EC06DB
				EndIf
				If CNB->(FieldPos("CNB_XEC07D")) > 0
					CNB_XEC07D := SC1TMP->C1_EC07DB
				EndIf
				If CNB->(FieldPos("CNB_XEC08D")) > 0
					CNB_XEC08D := SC1TMP->C1_EC08DB
				EndIf
				If CNB->(FieldPos("CNB_XEC09D")) > 0
					CNB_XEC09D := SC1TMP->C1_EC09DB
				EndIf
			CNB->(MsUnlock())
			nTotCNA += CNB_VLTOT
								
			SC1TMP->(dbSkip())
		EndDo
				
		//Planilha novo contrato (so inclui uma)
		RecLock("CNA",.T.)
			CNA->CNA_FILIAL := xFilial("CNA")
			CNA->CNA_CONTRA := cContrato
			//CNA->CNA_REVISA :=
			CNA->CNA_NUMERO := "000001"
			If Select("CNCTMP") > 0
	  	 		CNA->CNA_FORNEC := CNCTMP->CNC_CODIGO
	  			CNA->CNA_LJFORN := CNCTMP->CNC_LOJA
	  		EndIf
  			//CNA->CNA_TIPPLA :=
		   	//CNA->CNA_DTINI  :=
		   	//CNA->CNA_DTFIM  :=
			CNA->CNA_VLTOT  := nTotCNA
			CNA->CNA_SALDO  := nTotCNA
			//CNA->CNA_FLREAJ :=
		CNA->(MsUnLock())
		nTotCN9 += nTotCNA
		
		While !CNCTMP->(EOF())
				
			//Fornecedores novo contrato
			RecLock("CNC",.T.)
				CNC->CNC_FILIAL := xFilial("CNC")
				CNC->CNC_NUMERO := cContrato
	  	 		CNC->CNC_CODIGO := CNCTMP->CNC_CODIGO
	  			CNC->CNC_LOJA   := CNCTMP->CNC_LOJA
			CNC->(MsUnLock())
								
			CNCTMP->(dbSkip())
		EndDo

		While !CNNTMP->(EOF())
				
			//Usuarios novo contrato
			If !CNN->(dbSeek(xFilial("CNN")+CNNTMP->CNN_USRCOD+cContrato))
			
				RecLock("CNN",.T.)
					CNN->CNN_FILIAL := xFilial("CNN")
					CNN->CNN_CONTRA := cContrato
					CNN->CNN_USRCOD := CNNTMP->CNN_USRCOD
					CNN->CNN_TRACOD := CNNTMP->CNN_TRACOD
					CNN->CNN_GRPCOD := CNNTMP->CNN_GRPCOD
				CNN->(MsUnLock())
				
			EndIf
			
			CNNTMP->(dbSkip())
		EndDo
		
		//Novo contrato
		RecLock("CN9",.T.)
			CN9->CN9_FILIAL  := xFilial("CN9")
			CN9->CN9_NUMERO  := cContrato
			CN9->CN9_VLINI   := nTotCN9
			CN9->CN9_VLATU   := nTotCN9
			CN9->CN9_SALDO	 := nTotCN9
			CN9->CN9_SITUAC	 := "02" //Em Elaboracao
			CN9->CN9_DTINIC  := dDataIni
			CN9->CN9_VIGE 	 := cVige
			CN9->CN9_UNVIGE	 := cUnVige
			CN9->CN9_CONDPG	 := cCondPg
			CN9->CN9_TPCTO	 := cTpCto
			CN9->CN9_INDICE	 := cIndice
			CN9->CN9_FLGREJ	 := cFlgRej
			CN9->CN9_FLGCAU	 := cFlgCau
			CN9->CN9_MOEDA	 := nMoeda
			CN9->CN9_XSC     := "1" //Contrato gerado por SC
			CN9->CN9_XSCORI := SC1->C1_NUM
			CN9->CN9_XCTORI := cCtOrigem
			CN9->CN9_XRVORI := cRevOri
		CN9->(MsUnlock())
		
		SC1TMP->(dbGoTop())
		While !SC1TMP->(EOF())
		
			If SC1->(dbSeek(xFilial("SC1")+SC1TMP->(C1_NUM+C1_ITEM)))
		
				//Atualiza itens da SC
				RecLock("SC1",.F.)
					SC1->C1_XSTGCT := "1"	//Contrato gerado
					SC1->C1_XCTADT := cContrato //Numero do contrato
					//SC1->C1_REVADCT :=
					SC1->C1_QUJE   := SC1->C1_QUANT //Baixa SC
				SC1->(MsUnLock())
				
				//Caio.Santos - 11/01/13 - Req.72
				RSTSCLOG("CTR",1,/*cUser*/)
				
			EndIf
				
			SC1TMP->(dbSkip())
		EndDo
		
	End Transaction
	
	CNCTMP->(dbCloseArea())
	CNNTMP->(dbCloseArea())
	SC1TMP->(dbCloseArea())
	
	CN9->(ConfirmSX8())
	
	Aviso("Atenção",OemToAnsi("Contrato " + cContrato + " gerado com sucesso."),{"Ok"})
	
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A110ExclGCT³ Autor ³ FSW                 ³ Data ³ 10/05/11 ³±±
±±³Caio.Santos - FSW - 26/03/2012 - Recodificacao da funcao			  	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Exclui um contrato da SC                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum (Le variaveis mp objeto grade)                      ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³ Uso      ³ TOTVS                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A110ExclGCT()

If MsgYesNo("Confirma a exclusão do contrato dessa solicitação?")

	CN9->(dbSetOrder(1))
	
	If CN9->(dbSeek(xFilial("CN9")+SC1->C1_XCTADT))
	
		If CN9->CN9_SITUAC == "02" .And. CN9->CN9_XSC == "1" .And. CN9->CN9_XSCORI == SC1->C1_NUM .And. Empty(CN9->CN9_REVISA)
		
			Begin Transaction
		
			//Itens das planilhas do contrato
			BeginSQL Alias "CNBTMP"
				SELECT CNB_CONTRA, CNB_REVISA, CNB_NUMERO, CNB_ITEM
				FROM %Table:CNB% CNB
				WHERE CNB_FILIAL = %xFilial:CNB% AND CNB_CONTRA = %Exp:CN9->CN9_NUMERO% AND CNB_REVISA = %Exp:CN9->CN9_REVISA% AND CNB.%NotDel%
			EndSQL
			CNBTMP->(dbGoTop())
			CNB->(dbSetOrder(1))
			While !CNBTMP->(EOF())
				If CNB->(dbSeek(xFilial("CNB")+CNBTMP->(CNB_CONTRA+CNB_REVISA+CNB_NUMERO+CNB_ITEM)))
					RecLock("CNB",.F.)
					CNB->(DbDelete())
					MsUnlock()
				EndIf
				CNBTMP->(dbSkip())
			EndDo
			CNBTMP->(dbCloseArea())
			
			//Planilhas do contrato
			BeginSQL Alias "CNATMP"
				SELECT CNA_CONTRA, CNA_REVISA, CNA_NUMERO
				FROM %Table:CNA% CNA
				WHERE CNA_FILIAL = %xFilial:CNA% AND CNA_CONTRA = %Exp:CN9->CN9_NUMERO% AND CNA_REVISA = %Exp:CN9->CN9_REVISA% AND CNA.%NotDel%
			EndSQL
			CNATMP->(dbGoTop())
			CNA->(dbSetOrder(1))
			While !CNATMP->(EOF())
				If CNA->(dbSeek(xFilial("CNA")+CNATMP->(CNA_CONTRA+CNA_REVISA+CNA_NUMERO)))
					RecLock("CNA",.F.)
					CNA->(DbDelete())
					MsUnlock()
				EndIf
				CNATMP->(dbSkip())
			EndDo
			CNATMP->(dbCloseArea())
			
			//Amarracao usuario x contrato
			BeginSQL Alias "CNNTMP"
				SELECT CNN_USRCOD, CNN_CONTRA, CNN_TRACOD
				FROM %Table:CNN% CNN
				WHERE CNN_FILIAL = %xFilial:CNN% AND CNN_USRCOD = %Exp:SC1->C1_XSOL% AND CNN_CONTRA = %Exp:CN9->CN9_NUMERO% AND CNN.%NotDel%
			EndSQL
			CNNTMP->(dbGoTop())
			CNN->(dbSetOrder(1))
			While !CNNTMP->(EOF())
				If CNN->(dbSeek(xFilial("CNN")+CNNTMP->(CNN_USRCOD+CNN_CONTRA+CNN_TRACOD)))
					RecLock("CNN",.F.)
					CNN->(DbDelete())
					MsUnlock()
				EndIf
				CNNTMP->(dbSkip())
			EndDo
			CNNTMP->(dbCloseArea())
			
			//Amarracao fornecedor x contrato
			BeginSQL Alias "CNCTMP"
				SELECT CNC_NUMERO, CNC_CODIGO, CNC_LOJA
				FROM %Table:CNC% CNC
				WHERE CNC_FILIAL = %xFilial:CNC% AND CNC_NUMERO = %Exp:CN9->CN9_NUMERO% AND CNC.%NotDel%
			EndSQL
			CNCTMP->(dbGoTop())
			CNC->(dbSetOrder(1))
			While !CNCTMP->(EOF())
				If CNC->(dbSeek(xFilial("CNC")+CNCTMP->(CNC_NUMERO+CNC_CODIGO+CNC_LOJA)))
					RecLock("CNC",.F.)
					CNC->(DbDelete())
					MsUnlock()
				EndIf
				CNCTMP->(dbSkip())
			EndDo
			CNCTMP->(dbCloseArea())
			
			//SC
            BeginSQL Alias "SC1TMP"
				SELECT C1_NUM, C1_ITEM
				FROM %Table:SC1% SC1
				WHERE C1_FILIAL = %xFilial:SC1% AND C1_XSTGCT = '1' AND C1_XCTADT = %Exp:CN9->CN9_NUMERO% AND SC1.%NotDel%
			EndSQL
			SC1TMP->(dbGoTop())
			SC1->(dbSetOrder(1))
			While !SC1TMP->(EOF())
				If SC1->(dbSeek(xFilial("SC1")+SC1TMP->(C1_NUM+C1_ITEM)))
					RecLock("SC1",.F.)
					SC1->C1_XSTGCT := "2"
					SC1->C1_XCTADT := ""
					SC1->C1_QUJE := 0                                                           					
					//Caio.Santos - 11/01/13 - Req.72
					RSTSCLOG("CTR",2,/*cUser*/)					
					MsUnlock()
				EndIf
				SC1TMP->(dbSkip())
			EndDo
			SC1TMP->(dbCloseArea())
			
			//Contrato
			RecLock("CN9",.F.)
			CN9->(DbDelete())
			MsUnlock()			
			End Transaction
			
			Aviso("Atenção",OemToAnsi("Contrato Excluído."),{"Ok"})
		
		ElseIf CN9->CN9_SITUAC != "02"
		
			Aviso("Atenção",OemToAnsi("Só podem ser excluídos contratos em fase de elaboração."),{"Ok"})
			
		EndIf
				
	EndIf
			
EndIf

Return .T.

//------------------------------------------------------------
// Bloco de Funcoes carregadas do Ponto de Entrada M110STTS
// FWS - 25/05/11
//------------------------------------------------------------

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³M110STTS  ºAutor  ³Microsiga           º Data ³  22/11/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP 11 - PROJETO CNI                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function _f110TotSC(_cNumSC)
Local _cArea   := GetArea()
Local _nRet    := 0
Local _cQuery  := ""
Local _cArqTRB := CriaTrab(nil,.f.)

_cQuery := "SELECT SUM(C1_QUANT*C1_VUNIT) TOTAL FROM "+RetSqlName("SC1")+" WHERE D_E_L_E_T_ = ' ' "
_cQuery += "AND C1_NUM = '"+_cNumSC+"' AND C1_FILIAL = '"+XFilial("SC1")+"' "
_cQuery := ChangeQuery(_cQuery)

dbUseArea(.T.,"TOPCONN",TCGenQry(,,_cQuery),_cArqTRB,.t.,.t.)

_nRet := (_cArqTRB)->TOTAL

(_cArqTRB)->(dbCloseArea())
RestArea(_cArea)
Return(_nRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³VerTpSc   ºAutor  ³ Cadubitski         º Data ³  Dez/2010   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica a amarracao filiai x tipo de solicitacao conforme  º±±
±±º          ³valor total da SC.                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP 11 - PROJETO CNI                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function VerTpSc(_nTotSC)
/*
Local aArea 	:= GetArea()
Local cFilComp 	:= SC1->C1_FILIAL //Filial que esta comprando
Local cFilEnt	:= SC1->C1_FILENT //Filial de entrega
Local cTpSc 	:= "" //1=Direta 2=Licitacao
Local nVlSc		:= 0    
Local cUpDate	:= ""

dbSelectArea("ZZ3")
dbSetOrder(1)
If dbSeek(xFilial("ZZ3")+cFilComp+cFilEnt)

	If ZZ3->ZZ3_VECOMP == "2" //Valor somente da SC atual
		nVlSc := _nTotSC
	Else //Somatoria do valor da SC durante o ano.
		nVlSc := VerSldSc()
	EndIf

	//Se o total da SC for ate o valor configurado, considero o cadastrado se nao inverto o tipo casdastrado
	If nVlSc <= ZZ3->ZZ3_VALOR
		cTpSc := ZZ3->ZZ3_TIPO
	Else
		If ZZ3->ZZ3_TIPO == "1"
			cTpSc := "2"
		Else
			cTpSc := "1"
		EndIf
	EndIf

EndIf

If !Empty(cTpSc)

	cUpDate := "UPDATE "+RetSqlName("SC1")
	cUpDate += " SET C1_TPSC = '"+cTpSc+"' "
	cUpDate += " WHERE C1_FILIAL = '"+xFilial("SC1")+"' "
	cUpDate += " AND C1_NUM = '"+SC1->C1_NUM+"' "
	cUpDate += " AND D_E_L_E_T_ = ' ' "

	TcSqlExec(cUpDate)

EndIf

RestArea(aArea)
*/
Return()                   
//------------------------------------------------------------
// FINAL do Bloco de Funcoes carregadas do Ponto de Entrada M110STTS
// FWS - 25/05/11
//------------------------------------------------------------
Function AjustaHelp()
      
Local cKey  := "PC1_XSOL"
Local aHelpPor := {}
Local aHelpSpa := {}
Local aHelpEng := {}

//Cadastra help de problema
AAdd(aHelpPor,"Usuário não encontrado.")

PutHelp(cKey,aHelpPor,aHelpEng,aHelpSpa)

//Cadastra help de solução
cKey  := "SC1_XSOL"
aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

AAdd(aHelpPor,"Selecionar usuário cadastrado.")

PutHelp(cKey,aHelpPor,aHelpEng,aHelpSpa)

Help(" ",1,"C1_XSOL")

Return

Static Function ValGCT(cNumCt, cNumRev)
Local lRet := .F.
Local aArea:= GetArea()               

Default cNumRev := ""
Default cNumCt  := ""

dbSelectArea("CN9")
dbSetOrder(1)
dbSeek(xFilial("CN9")+cNumCt+cNumRev)
While !eof() .and. CN9->CN9_NUMERO == cNumCt

	If CN9->CN9_SITUAC = '05' .Or. CN9->CN9_SITUAC = '09'
		lRet := .T. // Considera contrato escolhido.
	EndIf

	dbSkip()
EndDo

RestArea(aArea)

Return(lRet)

////////////////////////////////////////////////////////////////////////////
//±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±//
//±± Função: A110Classif     Autor: Caio Santos        Data: 02.01.2012 ±±//
//±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±//
//±± Descrição: Valida a classificação das SC's provenientes de SA's    ±±//
//±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±//
//±± Requisito 69 - CNI												    ±±//
//±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±//
////////////////////////////////////////////////////////////////////////////

Function A110Classif()

Local _nTotSC := 0

	//Valida se a SC esta com a classificacao pendente
	If SC1->C1_XCLASSI
		
		If (A110Altera("SC1",SC1->(Recno()),4,.F./*lCopia*/,.F./*lWhenGet*/)) == 1
		
			BeginSQL Alias "SC1TMP"
				SELECT C1_NUM, C1_ITEM
				FROM %Table:SC1% SC1
				WHERE C1_FILIAL = %xFilial:SC1% AND C1_NUM = %Exp:SC1->C1_NUM% AND SC1.%NotDel%
			EndSQL
			
			SC1TMP->(dbGoTop())
			
			While !SC1TMP->(EOF())
			
				If SC1->(dbSeek(xFilial("SC1")+SC1TMP->C1_NUM+SC1TMP->C1_ITEM))
				
					RecLock("SC1",.F.)
						SC1->C1_XCLASSI := .F.
					MsUnlock()
					
				EndIf
				
				SC1TMP->(dbSkip())
				
			EndDo
				
			SC1TMP->(dbCloseArea())
				
			If !SC1->C1_XCLASSI
			
				Aviso("Atenção","Solicitação de compras classificada com sucesso.",{"Ok"},2)
				
				_nTotSC := _f110TotSC(SC1->C1_NUM)
				MaAlcDoc({SC1->C1_NUM,"SC",_nTotSC,,,SC1->C1_XGRPAPR,,1,1,SC1->C1_EMISSAO},,1)
		
				u__fWF_SC(SC1->C1_NUM,.F.)//Envia SC p/ aprovacao
				
			EndIf
			
		EndIf
			
	Else
	
		Aviso("Atenção","Solicitação de compras já classificada.",{"Ok"},2)
		
	EndIf
	
Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ A110RatCC  ³ Autor ³ Rodrigo Toledo	    ³ Data ³ 20/11/2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Monta tela de rateio por centro de custo para o item da SC 	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ a110RatCC(aHeadSCX,aColsSCX,lAltera)				        	³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = aHeader de Referencia utilizado na FillGetDados      ³±±
±±³			 ³ ExpA2 = aItens de Referencia utilizado na FillGetDados       ³±±
±±³			 ³ ExpL3 = lAltera criado para ser utilizado na FillGetDados    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ SIGACOM													    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A110RatCC(aHeadSCX,aColsSCX,lAltera)
Local aArea       := GetArea()
Local aSavaRotina := aClone(aRotina)
Local aColsCC     := {}
Local aButtons	  := {}
Local aButtonUsr  := {}
Local aHeadSC1    := {}
Local aColsSC1    := {}
Local aNoFields   := {"CX_FILIAL","CX_CUSTO1","CX_CUSTO2","CX_CUSTO3","CX_CUSTO4","CX_CUSTO5"}
Local bSavKeyF4   := SetKey(VK_F4 ,Nil)
Local bSavKeyF5   := SetKey(VK_F5 ,Nil)
Local bSavKeyF6   := SetKey(VK_F6 ,Nil)
Local bSavKeyF7   := SetKey(VK_F7 ,Nil)
Local bSavKeyF8   := SetKey(VK_F8 ,Nil)
Local bSavKeyF9   := SetKey(VK_F9 ,Nil)
Local bSavKeyF10  := SetKey(VK_F10,Nil)
Local bSavKeyF11  := SetKey(VK_F11,Nil)
Local nPItemNF	  := GDFieldPos("C1_ITEM")
Local nPCC	      := GDFieldPos("C1_CC") 
Local nPConta	  := GDFieldPos("C1_CONTA")
Local nPItemCta   := GDFieldPos("C1_ITEMCTA")
Local nPCLVL	  := GDFieldPos("C1_CLVL")
Local nPDECC	  := 0
Local nPDEConta	  := 0
Local nPDEItemCta := 0
Local nPDECLVL	  := 0
Local nPRateio    := GDFieldPos("C1_RATEIO")
Local nItem  	  := aScan(aColsSCX,{|x| x[1] == aCols[n][nPItemNF]})
Local nDeletado   := 0
Local nX          := 0
Local nSavN       := N
Local nPPercSCX   := 0
Local nTotPerc    := 0
Local nOpcA       := 0
Local nNewTam     := 0
Local lContinua   := .T.
Local lRet        := .T.
Local oDlg
Local cCampo      := ReadVar()
Local nAviso      := 0
Local oSize
Local l115		  := VAL(GetVersao(.F.)) > 11 .Or. (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R5")
Local lVldRat	:= FindFunction("MTVLDSOLEC") .And. SuperGetMv("MV_APROVSC",.F.,.F.) .And. SuperGetMv("MV_APRSCEC",.F.,.F.)
Local lAtuRat	:= .T.
Local lErro	:= .F.
Local lHelp	:= .F.
Local nXR		:= 0
Local nYR		:= 0
Local aCampos 	:= {}

DEFAULT aHeadSCX  := {}
DEFAULT aColsSCX  := {}
DEFAULT lAltera   := .T.

Private aOrigHeader := aClone(aHeader)
Private aOrigAcols  := aClone(aCols)
Private oGetMan
Private nOrigN      := N
Private nPercRat    := 0
Private nPercARat	:= 100
Private oPercRat
Private oPercARat
Private oGetDad

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ativa os botoes da toolbar                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !__lPyme
	aadd(aButtons,{'AUTOM',{|| AdmRatExt(aHeadSCX,oGetDad:aCols,{ |x,y,z,w| a110CarCC(x,y,@z,w) }) },STR0083,OemToAnsi(STR0120)}) //"Rateio" // 'Escolha de Rateio Pre-Configurado'
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para adicionar Botões na Enchoicebar do Rateio     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT110BTR")
	aButtonUsr:=ExecBlock("MT110BTR",.F.,.F.,{aButtons})
	If ValType(aButtonUsr)=="A"
		aButtons:=Aclone(aButtonUsr)
	EndIf
EndIf                                                        


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Impede de executar a rotina quando a tecla F3 estiver ativa	        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type("InConPad") == "L"
	lContinua := !InConPad
EndIf

If nSavN == 0
	lContinua := .F.
EndIf

If lContinua
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader SCX ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(aHeadSCX)
		dbSelectArea("SX3")
		dbSetOrder(1)
		MsSeek("SCX")
		While !EOF() .And. (SX3->X3_ARQUIVO == "SCX")
			IF X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !"CX_CUSTO"$SX3->X3_CAMPO
				AADD(aHeadSCX,{ TRIM(x3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;			   
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
			  	SX3->X3_CONTEXT } )
			EndIf
			dbSelectArea("SX3")
			dbSkip()
		EndDo
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aCols do SCX ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nItem > 0
	
		aColsCC := aClone(aColsSCX[nItem][2])
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Totaliza o % ja Rateado ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPercRat := 0
		For nX   := 1  To  Len(aColsCC)
			nPercRat += aColsCC[nX][aScan(aHeadSCX,{|x| AllTrim(x[2])=="CX_PERC"})]
		Next nX
		
		nPercARat := 100 - nPercRat
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ aHeader e aCols do SC1 devem ser salvos pois a FillGetDados destroe ³
		//³ ambos por serem PRIVATE, independente da construcao do aColsCC.     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aHeadSC1 := aClone(aHeader)
		aColsSC1 := aClone(aCols)
		aHeadSCX := {}
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados(IIf(lAltera,3,2),"SCX",1,,,,aNoFields,,,,,.T.,aHeadSCX,aColsCC,,,)
		aColsCC[1][aScan(aHeadSCX,{|x| Trim(x[2])=="CX_ITEM"})] := StrZero(1,Len(SCX->CX_ITEM))
		
		aHeader := aHeadSC1
		aCols   := aColsSC1		
	EndIf
	If !(Type('l110Auto') <> 'U' .And. l110Auto)
		aHeadSC1 := aClone(aHeader)
		aColsSC1 := aClone(aCols)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula dimensões                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oSize := FwDefSize():New()             
		oSize:aWorkArea := {000,000, 320, 120 }
		oSize:AddObject( "CABECALHO",  100, 10, .T., .T. ) // Totalmente dimensionavel
		oSize:AddObject( "GETDADOS" ,  100, 80, .T., .T. ) // Totalmente dimensionavel 
		oSize:AddObject( "RODAPE"   ,  100, 10, .T., .T. ) // Totalmente dimensionavel
		
		oSize:lProp 	:= .T. // Proporcional             
		oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3 
		
		oSize:Process() 	   // Dispara os calculos 
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta Dialog                                                 ³    
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DEFINE MSDIALOG oDlg FROM 000,000 TO 250,635 TITLE STR0095 Of oMainWnd PIXEL //"Rateio por Centro de Custo"
 
	 	@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")     SAY STR0087  Of oDlg PIXEL SIZE 56 ,9 //"Documento : "
		@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+33  SAY cA110Num Of oDlg PIXEL SIZE 29 ,9
		@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+73  SAY RetTitle("C1_ITEM") Of oDlg PIXEL SIZE 65 ,9 //"Item :"
		@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+112 SAY aCols[N][nPItemNF] Of oDlg PIXEL SIZE 37 ,9
	    
	    oGetDad := MsNewGetDados():New(oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),;
	     							   oSize:GetDimension("GETDADOS","LINEND"),oSize:GetDimension("GETDADOS","COLEND"),;
    									IIF(lAltera,GD_INSERT+GD_UPDATE+GD_DELETE,0),"A110RatLOk","A110RatTOk","+CX_ITEM",,,999,/* - */,/*superdel*/,/*delok*/,oDlg,aHeadSCX,aColsCC)
    	oGetMan := oGetDad
		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")     Say STR0088 FONT oDlg:oFont OF oDlg PIXEL	 // "% Rateada: "
		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+30  Say oPercRat VAR nPercRat Picture PesqPict("SCX","CX_PERC") FONT oDlg:oFont COLOR CLR_HBLUE OF oDlg PIXEL
		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+180 Say STR0089 FONT oDlg:oFont OF oDlg PIXEL	 // "% A Ratear: "
		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+214 Say oPercARat VAR nPercARat Picture PesqPict("SCX","CX_PERC") FONT oDlg:oFont COLOR CLR_HBLUE OF oDlg PIXEL

		ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar(oDlg,{||IIF(oGetDad:TudoOk(),(nOpcA:=1,oDlg:End()),(nOpcA:=0))},{||oDlg:End()},,aButtons)

		If lAltera
			aColsCC := Aclone(oGetDad:aCols)		
		Else
			aHeader := aHeadSC1
			aCols   := aColsSC1
		EndIf
	Else
		nOpcA := 1
	EndIf
	nPPercSCX := aScan(aHeadSCX,{|x| AllTrim(x[2])=="CX_PERC"})
	nTotPerc := 0
	
	aColsPar :={}
	AEval( aColsCC, { |x| If( !x[ Len(aHeadSCX) + 1], AAdd( aColsPar, x ), ) } )
	aColsCC := aClone( aColsPar )
	
	For nX := 1 To Len(aColsCC)
		nTotPerc += aColsCC[nX][nPPercSCX]
	Next nX
	
	nPDECC	      := aScan(aHeadSCX,{|x| AllTrim(x[2]) == "CX_CC"} )
	nPDIt	      := aScan(aHeadSCX,{|x| AllTrim(x[2]) == "CX_ITEM"} )
	nPDEConta	  := aScan(aHeadSCX,{|x| AllTrim(x[2]) == "CX_CONTA"} )
	nPDEItemCta   := aScan(aHeadSCX,{|x| AllTrim(x[2]) == "CX_ITEMCTA"} )
	nPDECLVL	  := Ascan(aHeadSCX,{|x| AllTrim(x[2]) == "CX_CLVL"} )
	
	If nOpcA == 1 .And. lAltera
		//-- Validação para que se for alterado os itens refazer o rateio.
		If(nFAltRat>0)
			nFAltRat := 0
			If(nFAltRat2>0)
				nFAltRat2 := 0
			EndIf
			nFAltRat2++
		EndIf
		If nTotPerc > 0
			//Acerta a numeração do Item
			For nX := 1 to Len(aColsCC)
				aColsCC[nX][nPDIt] := RetAsc(Str(nX),TamSX3("CX_ITEM")[1],.T.)
			Next nX
			
			If nItem > 0
				aColsSCX[nItem][2]	:= aClone(aColsCC)
			Else
				aadd(aColsSCX,{aCols[N][nPItemNF],aClone(aColsCC)})
			EndIf
			
			aCols[N][nPRateio] := "1"
			If nPCC <> 0 .And. nPDECC <> 0
				aCols[N][nPCC]     := Space(Len(aCols[N][nPCC]))
			EndIf
			If nPConta <> 0 .And. nPDEConta <> 0
				aCols[N][nPConta]  := Space(Len(aCols[N][nPConta]))
			EndIf
			If nPItemCta <> 0 .And. nPDEItemCta <> 0
				aCols[N][nPItemCta]:= Space(Len(aCols[N][nPItemCta]))
			EndIf
			If nPCLVL <> 0 .And. nPDECLVL <> 0
				aCols[N][nPCLVL]   := Space(Len(aCols[N][nPCLVL]))
			EndIf
			If Len(aCols)>1
				cMsg := CRLF + CRLF
				cMsg += STR0121 + StrZero(n,TamSx3("C1_ITEM")[1]) + CRLF //"Sim - Replica TODAS informações a partir do item da solicitação posicionado: "
				cMsg += STR0122 //"Todos - Replica TODAS informações para todos os itens da solicitação"
				
				nAviso := Aviso(STR0021,STR0090+cMsg,{STR0059,STR0060,"Todos"},2) //"Atenção"###"Replicar informações para os demais itens do documento?"###"Sim"###"Não"
				If nAviso <> 2
					If nAviso == 3
						aColsSCX := {}
						nAux := 1
					Else
						nAux := n
					Endif
					
					For nX := nAux To Len(aCols)
						nItem  := aScan(aColsSCX,{|x| x[1] == aCols[nX][nPItemNF]})
						If nItem == 0
							aadd(aColsSCX,{aCols[nX][nPItemNF],aClone(aColsCC)})							
							
							//Validação por Entidades Contabeis
							If lVldRat
								lErro 	:= .F.
								lAtuRat:= .T.
								aCampos := MTGETFEC("SCX","CX")
								For nXR := 1 to len(aColsCC)
									For nYR := 1 to len(aCampos)
										If !(MTVLDSOLEC(aCols[nX][GDFieldPos("C1_PRODUTO")], aColsSCX[len(aColsSCX)][2][nXR][aScan(aHeadSCX,{ |x|  x[2] = aCampos[nYR] })], aCampos[nYR]))
									 		lErro := .T.
									 		lAtuRat := .F.
									 		lHelp := .T.
									 		exit
									 	EndIF	
								 	Next nX	
								 	If lErro 
								 		exit
								 	EndIf		
								Next nY	
								If lErro
									ADel(aColsSCX,len(aColsSCX))
									aSize(aColsSCX,len(aColsSCX)-1)
									aCols[nX][nPRateio] := "2"						
								EndIf							
							EndIf
							
							If lAtuRat
								aCols[nX][nPRateio] := "1"							
								If nPCC <> 0 .And. nPDECC <> 0
									aCols[NX][nPCC]     := Space(Len(aCols[NX][nPCC]))
								EndIf
								If nPConta <> 0 .And. nPDEConta <> 0
									aCols[NX][nPConta]  := Space(Len(aCols[NX][nPConta]))
								EndIf
								If nPItemCta <> 0 .And. nPDEItemCta <> 0
									aCols[NX][nPItemCta]:= Space(Len(aCols[NX][nPItemCta]))
								EndIf
								If nPCLVL <> 0 .And. nPDECLVL <> 0
									aCols[NX][nPCLVL]   := Space(Len(aCols[NX][nPCLVL]))
								EndIf
							EndIf
						Else
							aColsSCX[nItem,2] := aClone(aColsCC)
						Endif
					Next nX
					If lHelp
						Help(' ', 1,'A110RATEC')
					EndIf
				EndIf
			EndIf
		Else
			If nItem > 0
				aColsSCX[nItem][2]	:= aClone(aColsCC)
			Else
				aadd(aColsSCX,{aCols[N][nPItemNF],aClone(aColsCC)})
			EndIf
			aCols[nSavN][nPRateio] := "2"
		EndIf
	Else
		If nTotPerc > 0 .And. nItem > 0
			If "C1_RATEIO" $ cCampo
				&cCampo := "1"
			EndIf
			aCols[nSavN][nPRateio] := "1"
		Else
			If "C1_RATEIO" $ cCampo
				&cCampo := "2"
			EndIf
			aCols[nSavN][nPRateio] := "2"
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Armazena aHeadSCX e aColsSCX em array Private validacoes em outros pontos do fonte  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCPHSCX:=aClone(aHeadSCX)
ACPISCX:=aClone(aColsSCX)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da rotina                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aRotina	:= aClone(aSavaRotina)
N := nSavN
SetKey(VK_F4 ,bSavKeyF4)
SetKey(VK_F5 ,bSavKeyF5)
SetKey(VK_F6 ,bSavKeyF6)
SetKey(VK_F7 ,bSavKeyF7)
SetKey(VK_F8 ,bSavKeyF8)
SetKey(VK_F9 ,bSavKeyF9)
SetKey(VK_F10,bSavKeyF10)
SetKey(VK_F11,bSavKeyF11)
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ A110RatLok³ Autor ³ Rodrigo Toledo       ³ Data ³20.11.2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Esta rotina tem como objetivo validar a linhaok do rateio do³±±
±±³          ³ itens do documento de entrada                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Indica se a linha esta valida                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGACOM                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110RatLOk()
Local nPPerc    := aScan(aHeader,{|x| AllTrim(x[2]) == "CX_PERC"})
Local nPCC	    := aScan(aHeader,{|x| AllTrim(x[2]) == "CX_CC"})
Local nPConta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CX_CONTA"})
Local nPItemCta := aScan(aHeader,{|x| AllTrim(x[2]) == "CX_ITEMCTA"})
Local nPCLVL	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "CX_CLVL"})
Local lRatDupl:= GetNewPar("MV_RATDUPL",.F.)
Local lRetorno  := .T.
Local nX        := 0
Local nAscan    := 0

If !aCols[N][Len(aCols[N])]
	If aCols[N][nPPerc] == 0
		Help(" ",1,"A103PERC")
		lRetorno := .F.
	EndIf
EndIf

If lRetorno .And. !lRatDupl
	nAscan := Ascan( aCols, { |x| 	x[nPCC] == aCols[n][nPCC] .And. x[nPConta] == aCols[n][nPConta];
		      .And. x[nPItemCta] == aCols[n][nPItemCta] .And. x[nPCLVL] == aCols[n][nPCLVL] .And. !x[len(x)] } )
			   
	If nAscan > 0 .And. n != nAscan
		Help(" ",1,"CCEXIST")// Centro de Custo ja Cadastrado
		lRetorno := .F.	
	Endif
EndIf	

If lRetorno
	nPercRat := 0
	nPercARat:= 0
	For nX	:= 1 To Len(aCols)
		If !aCols[nX][Len(aCols[nX])]
			nPercRat += aCols[nX][nPPerc]
		EndIf
	Next
	nPercARat := 100 - nPercRat
	If Type("oPercRat")=="O"
		oPercRat:Refresh()
		oPercARat:Refresh()
	Endif
EndIf

//Consiste amarração da Conta Contábil X Centro de Custo
If lRetorno
	If nPConta <> 0 .And. nPCC>0 .And. nPItemCta <> 0 .And. nPClVl <> 0 .And.;
 	   (!CtbAmarra(aCols[n,nPConta],aCols[n,nPCC],aCols[n,nPItemCTA],aCols[n,nPCLVL]))
	   lRetorno:=.F.
	EndIf
EndIf

If lRetorno .And. empty(aCols[N][nPCC]) // O Centro de Custo SEMPRE devera ser obrigatorio, Conta Contabil, Item Contabil e Classe Valor nao tem esta necessidade
	Help('   ',1,'A103RATEI')
	lRetorno:=.F.	
EndIf

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A110RatLok ³Autor ³ Rodrigo Toledo        ³ Data ³20.11.2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Esta rotina tem como objetivo validar a tudook do rateio dos³±±
±±³          ³ itens do documento de entrada                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Indica se a todas as linhas estao validas            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ SIGACOM                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A110RatTok()
Local nPPerc    := aScan(aHeader,{|x| AllTrim(x[2]) == "CX_PERC"} )
Local nPCC	    := aScan(aHeader,{|x| AllTrim(x[2]) == "CX_CC"})
Local nPConta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CX_CONTA"})
Local nPItemCta := aScan(aHeader,{|x| AllTrim(x[2]) == "CX_ITEMCTA"})
Local nPCLVL	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "CX_CLVL"})

Local nTotal   := 0
Local nX       := 0
Local lRetorno := .T.
Local n_SaveLin

For nX	:= 1 To Len(aCols)
	If !aCols[nX][Len(aCols[nX])]
		nTotal += aCols[nX][nPPerc]
	 	//Consiste amarração da Conta Contábil X Centro de Custo
	 	If (!CtbAmarra(aCols[nX,nPConta],aCols[nX,nPCC],aCols[nX,nPItemCTA],aCols[nX,nPCLVL]))
	 	    lRetorno:=.F.
	 	    Aviso("A110RatTok",STR0091+aCols[nX,1],{"Ok"}) //"Verifique o rateio do Item: "
		    Exit 
		EndIf       
	EndIf
Next

If lRetorno .And. nTotal > 0 .And. nTotal <> 100
	Help(" ",1,"A103TOTRAT")
	lRetorno := .F.
EndIf

Return(lRetorno)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATA110   ºAutor  ³Rodrigo Toledo      º Data ³  22/11/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³Monta o array aRatSC para ser utilizado via ExecAuto.       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MATA110                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function M110AutRat(aRatSC,aHeaderRAT)
Local aAux	:= {}
Local nPos	:= 0
Local nZ	:= 0
Local nY	:= 0
Local nX	:= 0

For nX := 1 To Len(aRatSC)
	If Empty(aScan(aCols,{|x| x[GDFieldPos("C1_ITEM")] == aRatSC[nX,1]}))
		Loop
	EndIf
	For nY := 1 To Len(aRatSC[nX,2])
		aAux := aClone(aRatSC[nX,2,nY])
		aRatSC[nX,2,nY] := Array(Len(aHeaderRAT)+1)
		For nZ := 1 To Len(aRatSC[nX,2,nY]) - 1
			If IsHeadRec(aHeaderRAT[nZ,2]) .Or. IsHeadAlias(aHeaderRAT[nZ,2])
				Loop
			ElseIf (nPos := aScan(aAux,{|x| AllTrim(x[1]) == AllTrim(aHeaderRAT[nZ,2])})) > 0
				aRatSC[nX,2,nY,nZ] := aAux[nPos,2]
			Else
				aRatSC[nX,2,nY,nZ] := CriaVar(aHeaderRAT[nZ,2])
			EndIf
		Next nZ
		aTail(aRatSC[nX,2,nY]) := .F.
	Next nY
Next nX
	
Return aRatSC

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A110RatAutºAutor  ³Microsiga           º Data ³  22/11/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida o array de rateio por CC da ExecAuto.               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aRateioSC[nX,1]: item da solicitacao de compra.			  º±±
±±º			 ³ aRateioSC[nX,2]: array com os itens do rateio.			  º±±
±±º			 ³ aRateioSC[nX,2,nY,nZ,1]: nome do campo.					  º±±
±±º			 ³ aRateioSC[nX,2,nY,nZ,2]: conteudo do campo. 			  	  º±±
±±º			 ³ aRateioSC[nX,2,nY,nZ,3]: validacao especifica.			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA110                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A110RatAut(aRateioSC) 
Local lRet        := .T.
Local nTotal	  := 0
Local nX		  := 0
Local nY		  := 0
Local nZ		  := 0
Local aPosCampo   := Array(4)
Default aRateioSC :=  {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ No modo Automatico checa Rateio                       				 ³
//³    1 - A soma dos percentuais de rateios dos C.Custo eh igual a 100% ³
//³    2 - Cada C.Custo rateado existe na tabela SCC                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(aRateioSC) > 0
	//-- Obtem posicao dos campos no array da ExecAuto
	nPosPerc := aScan(aRateioSC[1,2,1],{|x| AllTrim(x[1]) == "CX_PERC"	}) 
	aPosCampo[1] := {"CX_CC",aScan(aRateioSC[1,2,1],{|x| AllTrim(x[1]) == "CX_CC"})}
	aPosCampo[2] := {"CX_CONTA",aScan(aRateioSC[1,2,1],{|x| AllTrim(x[1]) == "CX_CONTA"})}
	aPosCampo[3] := {"CX_ITEMCTA",aScan(aRateioSC[1,2,1],{|x| AllTrim(x[1]) == "CX_ITEMCTA"})}
	aPosCampo[4] := {"CX_CLVL",aScan(aRateioSC[1,2,1],{|x| AllTrim(x[1]) == "CX_CLVL"})}		
	If nPosPerc > 0
		For nX := 1 To Len(aRateioSC)
			//-- Zera acumuladores de validacao
			nTotal    := 0
			For nY := 1 to Len(aRateioSC[nX,2])
				//-- Valida campos pelo dicionario 
				If !lRet
					Exit 
				Else 
					For nZ := 1 To Len(aRateioSC[nX,2,nY])
						__READVAR := "M->"+(aRateioSC[nX,2,nY,nZ,1])
						M->&(aRateioSC[nX,2,nY,nZ,1]) := aRateioSC[nX,2,nY,nZ,2]
						If !(lRet := CheckSX3(aRateioSC[nX,2,nY,nZ,1],aRateioSC[nX,2,nY,nZ,2]))
							Exit
						EndIf
					Next nZ
				EndIf
				//-- Acumula percentual
				nTotal += aRateioSC[nX,2,nY,nPosPerc,2]
			Next nY			
		    If lRet .And. (nTotal > 100 .Or. nTotal < 100)
				Help(' ',1,'A103TOTRAT')
				lRet := .F.
				Exit
			Endif
		Next nX
	Else
		Help(' ',1,STR0092+AllTrim(RetTitle("CX_PERC")) +STR0093) //"Erro na estrutura do vetor de rateio: campo "##" ausente."
		lRet := .F.
	EndIf
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFunção    ³A110AColsRaºAutor  ³Fabricio Pequeno    º Data ³  23/11/12  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Funcao verifica se existe alteração nos itens da solicitacaoº±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA110                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A110AColsRa(aColsBKPRat,nOpcx,aColsSCX)
Local lContAltRat	:= .T.
Local nRat			:= 0
Local nRat2			:= 0
Local nCols			:= 0
Local nCols2		:= 0
Local nItem			:= 0  
Local nPosRateio
Local lDelet
Default aColsBKPRat := {}

nFAltRat++ //-- Passou uma vez nesta validação
If( (nOpcx==4) .And. (Len(aColsSCX)>0) )
	If!(nFAltRat>0 .And. nFAltRat2>0 .And. nFAltRat == nFAltRat2)
		//-- Se é uma alteração, o aCols foi alterado e existe rateio é preciso fazer o rateio novamente.
		For nRat := 1 to Len(aColsSCX) //-- Faz a comparação para itens que tenham rateio.
			For nRat2 := 1 to Len(aCols)
				lDelet := aCols[nRat2,Len(aCols[nRat2])]
				If(aColsSCX[nRat,1] == aCols[nRat2,1]) .And. ! lDelet
					nItem := aColsSCX[nRat,1] //-- Seleciona qual item tem rateio.
					For nCols:=1 to Len(aColsBKPRat)
						If (aColsBKPRat[nCols,1] == nItem) //-- Só compara dados dos itens que tem rateio.
							For nCols2:=1 to Len(aColsBKPRat[nCols])
								If nCols<=Len(aColsBKPRat[1])
									If ( Ascan(aColsBKPRat,{|x| x[nCols2]==aCols[nCols,nCols2] } ) == 0 )//-- Comparando aCols original com novo.
										nCols  := Len(aColsBKPRat)
										nCols2 := Len(aColsBKPRat[nCols]) 
										MsgAlert(STR0094+" Item "+Str(nRat2,3))//--"Na inclusão do Pedido de compra foi feito rateio para o(os) iten(S), necessário verificar os rateios antes de alterar."
										lContAltRat := .F.
									EndIf
								EndIf
							Next
						EndIf
					Next
  					nItem := 0
	  			EndIf
	  		Next
		Next nRat
	EndIf
EndIf

//alteração - Valida preenchimento do rateio 
If nOpcx==4 .And. lContAltRat
	nPosRateio	:= aScan(aHeader,{|x| Alltrim(x[2]) == "C1_RATEIO"})
	nItem		:= aScan(aHeader,{|x| Alltrim(x[2]) == "C1_ITEM"})
	If nPosRateio > 0 
		For nRat := 1 to Len(aCols)
			If ! aCols[nRat,Len(aCols[nRat])] .And. aCols[nRat,nPosRateio] == '1'
				If (nRat2 := (Ascan(aColsSCX, {|a| a[1] == aCols[nRat,nItem] }))) == 0 //verifica se foi informado o rateio 
					MsgAlert(STR0094+", Item "+Str(nRat,3))//--"Na inclusão do Pedido de compra foi feito rateio para o(os) iten(S), necessário verificar os rateios antes de alterar."
					lContAltRat := .F.
					exit
				EndIf
			EndIf
		Next
	EndIf
EndIf	
Return (lContAltRat)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A110AcoSCXºAutor  ³Rodrigo Toledo      º Data ³  06/12/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao responsavel por criar o aCols da tabela SCX para	  º±±
±±º     	 ³ ser utilizado nos processos de Alterar e Visualizar  	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aExp1: aHeadSCX da tabela SCX 							  º±±
±±º			 ³ aExp2: aColsSCX da tabela SCX							  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA110                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A110AcoSCX(aHeadSCX,aColsSCX)
Local aAreaSCX 	:= SCX->(GetArea())
Local cAliasSCX := ""
Local nX 		:= 0
Local nY		:= 0
Local aStruSCX	:= {}
Local cQuery	:= ""
Local cItemSCX	:= ""
Local nItemSCX	:= 0
Local cNumXX := SC1->C1_NUM 
Default aHeadSCX := {}
Default aColsSCX := {}

If Type("aBackSCX") # "A"
	aBackSCX := {}
EndIf

MsSeek(xFilial("SC1")+cNumXX) 
DbSelectArea("SCX")
DbSetOrder(1)
cAliasSCX := "SCX"
#IFDEF TOP
	If TcSrvType()<>"AS/400"
		lQuery    := .T.
		aStruSCX  := SCX->(dbStruct())
		cAliasSCX := "A120NFISCAL"
		cQuery    := "SELECT SCX.*,SCX.R_E_C_N_O_ SCXRECNO "
		cQuery    += "FROM "+RetSqlName("SCX")+" SCX "
		cQuery    += "WHERE SCX.CX_FILIAL='"+xFilial("SCX")+"' AND "
		cQuery    += "SCX.CX_SOLICIT='"+cNumXX+"' AND "
		cQuery    += "SCX.D_E_L_E_T_=' ' "
		cQuery    += "ORDER BY "+SqlOrder(SCX->(IndexKey()))
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSCX,.T.,.T.)
		For nX := 1 To Len(aStruSCX)
			If aStruSCX[nX,2]<>"C"
				TcSetField(cAliasSCX,aStruSCX[nX,1],aStruSCX[nX,2],aStruSCX[nX,3],aStruSCX[nX,4])
			EndIf
		Next nX
	Else
#ENDIF
#IFDEF TOP
		MsSeek(xFilial("SCX")+SC1->C1_NUM)
	EndIf
#ENDIF
dbSelectArea(cAliasSCX)
While (!Eof() .And. xFilial('SCX') == (cAliasSCX)->CX_FILIAL .And. SC1->C1_NUM == (cAliasSCX)->CX_SOLICIT)
	If Empty(aBackSCX)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Montagem do aHeader                                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SX3")
		DbSetOrder(1)
		MsSeek("SCX")
		While ( !EOF() .And. SX3->X3_ARQUIVO == "SCX" )
			If X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !AllTrim(SX3->X3_CAMPO)$"CX_CUSTO#CX_FILIAL"
				aAdd(aBackSCX,{TRIM(X3Titulo()),;
					SX3->X3_CAMPO,;
					SX3->X3_PICTURE,;
					SX3->X3_TAMANHO,;
					SX3->X3_DECIMAL,;
					SX3->X3_VALID,;
					SX3->X3_USADO,;
					SX3->X3_TIPO,;
					SX3->X3_F3,;
					SX3->X3_CONTEXT })
			EndIf
			DbSelectArea("SX3")
			dbSkip()
		EndDo
	EndIf
	aHeadSCX  := aBackSCX

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ADHeadRec("SCX",aHeadSCX)
	If cItemSCX <> 	(cAliasSCX)->CX_ITEMSOL
		cItemSCX	:= (cAliasSCX)->CX_ITEMSOL
		aAdd(aColsSCX,{cItemSCX,{}})
		nItemSCX++
	EndIf
	
	aAdd(aColsSCX[nItemSCX][2],Array(Len(aHeadSCX)+1))
	For nY := 1 to Len(aHeadSCX)
		If IsHeadRec(aHeadSCX[nY][2])
			aColsSCX[nItemSCX][2][Len(aColsSCX[nItemSCX][2])][nY] := IIf(lQuery,(cAliasSCX)->SCXRECNO,SCX->(Recno()))
		ElseIf IsHeadAlias(aHeadSCX[nY][2])
			aColsSCX[nItemSCX][2][Len(aColsSCX[nItemSCX][2])][nY] := "SCX"
		ElseIf (aHeadSCX[nY][10] <> "V")
			aColsSCX[nItemSCX][2][Len(aColsSCX[nItemSCX][2])][nY] := (cAliasSCX)->(FieldGet(FieldPos(aHeadSCX[nY][2])))
		Else
			aColsSCX[nItemSCX][2][Len(aColsSCX[nItemSCX][2])][nY] := (cAliasSCX)->(CriaVar(aHeadSCX[nY][2]))
		EndIf
		aColsSCX[nItemSCX][2][Len(aColsSCX[nItemSCX][2])][Len(aHeadSCX)+1] := .F.
	Next nY
	DbSelectArea(cAliasSCX)
	dbSkip()
EndDo

If lQuery
	DbSelectArea(cAliasSCX)
	dbCloseArea()
	DbSelectArea("SCX")
EndIf

RestArea(aAreaSCX)
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±º Function  ³ IntegDef º Autor ³ Alex Egydio          º Data ³  27/12/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Descricao ³ Funcao de tratamento para o recebimento/envio de mensagem    º±±
±±º           ³ unica da Solicitacao de Compra.                              º±±
±±ÌÍÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±º Uso       ³ MATA110                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function IntegDef( cXML, nTypeTrans, cTypeMessage )
Local aRet := {}

aRet := MATI110(cXml, nTypeTrans, cTypeMessage, aRecSC1)

Return aRet

Function MTA110SC1(aReg)
aRecSC1 := aReg
Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a110VldAfgºAutor  ³Alexandre Circenis  º Data ³  02/13/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida o rateio por projeto                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A110VldAFG(nOpcao,cNumSC)
Local lRet := .T.
Local aSavCols := aClone(aCols)
Local aSavHeader := aClone(aHeader)
Local nSavN := n
Local nX

for nX := 1 to Len (aRatProj) 
    // Buscar a numero da linha da Solicitacao referente ao item do rateio
    n:=  aScan(aCols,{|x| x[GDFieldPos("C1_ITEM")] == aRatProj[nX,1]})
	if n > 0                                                             
		// Chamar a rotina automatica do cadastro de rateios 
		if !PmsDlgSC(nOpcao,cNumSC,.F.,aRatProj[nX,2])
	   		lRet := .F.
	   		Exit
	   	endif	
	endif

next nX	  

aCols := aClone(aSavCols)
aHeader := aClone(aSavHeader)
N := nSavN

Return lRet 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ VldAltSolic º Autor ³      	            º Data ³11/02/13  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Valida se o usuario pode Alt./Excl. de acordo com o grupo  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA110                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function VldAltSolic()

Local aArea	:= GetArea()
Local aAreaSC1:= SC1->(GetArea())
Local aGrupo   := {}
Local aGrupSolic := {}
Local cUser    := RetCodUsr()
Local nLoop    := 0
Local lRet 	:= .T.
Local lSolic	:= IF(SuperGetMv("MV_RESTCOM",.F.,"N")=="S",.T.,.F.)
Local lPertGrp := .F. //Pertence ao mesmo grupo do criador da SC

aGrupo := UsrGrComp(cUser)

If aScan(aGrupo,"*") != 0
	lSolic := .F.
EndIf

If (lSolic)
	DbSelectArea("SC1")                       
	DbSetOrder(1)
	If (MsSeek(xFilial("SC1")+C1_NUM))
		aGrupSolic := UsrGrComp(SC1->C1_USER)
		If aScan(aGrupSolic,"*") != 0
			lSolic := .F.
		Else
			For nLoop := 1 to Len(aGrupSolic)
				If aScan(aGrupo, aGrupSolic[nLoop])> 0
					lPertGrp := .T.
					Exit
				EndIf
			Next nLoop
		EndIf	 
		If lSolic .And. !lPertGrp .And. SC1->C1_USER != cUser .And. !Empty(SC1->C1_USER) 	
			If Empty(aGrupSolic)
				Help("  ",1,"A120RSPED",,UsrRetName(SC1->C1_USER),4,11)
			Else
				Help("  ",1,"USUNAOAUT",,SC1->C1_GRUPCOM,3,25)
			EndIf
			lRet := .F.
		EndIf
	EndIf
EndIf

RestArea(aAreaSC1)
RestArea(aArea)
Return	lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} A110GETSCX()
Função para recuperar variavel aColsSCX

@author Alexandre.Gimenez
@since 04/09/2013
@version 1.0
@return lRet 
/*/
//-------------------------------------------------------------------
Function A110GETSCX()
Return aColsSCX

//-------------------------------------------------------------------
/*/{Protheus.doc} A110SETSCX(aSCX)
Função para atualizar variavel aColsSCX

@author Alexandre.Gimenez
@since 04/09/2013
@version 1.0
@return lRet 
/*/
//-------------------------------------------------------------------
Function A110SETSCX(aSCX)

aColsSCX := aSCX

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} VldCtr(aSCX)
Habilita campo num contrato -  Uso CNI

@author Pamela Costa
@since 25/08/2014
@version 1.0
@return lRet 
/*/
//-------------------------------------------------------------------
Static Function VldCtr(cContrato)
Local lRet := .T.

cNumCt := Iif(GETMV("MV_TPSCCT")==cTpSC, cNumCt, Space(TamSX3("C1_XNUMCT")[1]))

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} MaBloqMkt()
Função para verificar se bloqueia registro devido a integração

@author Flavio Lopes Rasta
@since 09/03/2015
@version 1.0
@return lRet 
/*/
//-------------------------------------------------------------------
Function MaBloqMkt(cTabela)
Local lBlock := .F.
If (SuperGetMv("MV_MKPLACE",.F.,.F.))
	If cTabela == "SC1"
		If SC1->(FieldPos("C1_ACCNUM")) > 0 .And. SC1->(FieldPos("C1_ACCPROC")) > 0
			If !Empty(SC1->C1_ACCNUM) .Or. SC1->C1_ACCPROC == '1'
				lBlock := .T.
			Endif
		Endif
	ElseIf cTabela == "SC7"
		If SC7->(FieldPos("C7_ACCNUM")) > 0 .And. SC7->(FieldPos("C7_ACCPROC")) > 0
			If !Empty(SC7->C7_ACCNUM) .Or. SC7->C7_ACCPROC == '1'
				lBlock := .T.
			Endif
		Endif
	Endif
	
	If lBlock
		Aviso("Portal MarketPlace","Este item não poderá ser alterado pois já está no Portal MarketPlace",{"Ok"}) 
	Endif
Endif

Return lBlock

//-------------------------------------------------------------------
/*/{Protheus.doc} a110CarCC()
Carrega as definições de rateio externo
@author Rafael Duram
@since 10/05/2016
@version P12
@return .T.
/*/
//-------------------------------------------------------------------
Function a110CarCC(aCols, aHeader, cItem, lPrimeiro)

Local lCusto		:= CtbMovSaldo("CTT")
Local lItem	 	:= CtbMovSaldo("CTD")
Local lCLVL	 	:= CtbMovSaldo("CTH")
Local nPosPerc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CX_PERC" } )
Local nPosItem	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CX_ITEM" } )
Local nPosCC		:= aScan(aHeader,{|x| AllTrim(x[2]) == "CX_CC"} )
Local nPosConta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CX_CONTA"} )
Local nPosItemCta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CX_ITEMCTA"} )
Local nPosCLVL	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CX_CLVL"} )
Local nHeader		:= 0
Local aMT103PRE	:= {}
Local aEntidades	:= {}
Local nEnt			:= 0
Local nDeb			:= 0

If lPrimeiro
	//-- Se ja foi informado algum rateio, limpar o aCols
	If aCols[Len(aCols)][nPosPerc] <> 0
		aCols := {}
		Aadd(aCols, Array(Len(aHeader) + 1))
		For nHeader := 1 To Len(aHeader)
			If Trim(aHeader[nHeader][2]) <> "CX_ALI_WT" .And. Trim(aHeader[nHeader][2]) <> "CX_REC_WT"
				aCols[Len(aCols)][nHeader] := CriaVar(aHeader[nHeader][2])
			Endif
		Next
	EndIf
	cItem := Soma1(cItem)
	aCols[Len(aCols)][nPosItem]  := cItem
	aCols[Len(aCols)][Len(aHeader)+1] := .F.
Else
	If aCols[Len(aCols)][nPosPerc] = 0
		nCols := Len(aCols)
		cItem := aCols[nCols][nPosItem]
	Else
		If Len(aCols) > 0
			cItem := aCols[Len(aCols)][nPosItem]
		Endif
		Aadd(aCols, Array(Len(aHeader) + 1))
		cItem := Soma1(cItem)
	EndIf
	
	For nHeader := 1 To Len(aHeader)
		If Trim(aHeader[nHeader][2]) <> "CX_ALI_WT" .And. Trim(aHeader[nHeader][2]) <> "CX_REC_WT"
			aCols[Len(aCols)][nHeader] := CriaVar(aHeader[nHeader][2])
		EndIf
	Next
	
	aCols[Len(aCols)][nPosItem] := cItem
	
	// Interpreto os campos incluida possibilidade de variaveis de memoria
	If !Empty(CTJ->CTJ_DEBITO)
		aCols[Len(aCols)][nPosConta]	:= CTJ->CTJ_DEBITO
	Else
		aCols[Len(aCols)][nPosConta]	:= CTJ->CTJ_CREDIT
	Endif
	
	
	If lCusto
		If ! Empty(CTJ->CTJ_CCD)
			aCols[Len(aCols)][nPosCc]	:= CTJ->CTJ_CCD
		Else
			aCols[Len(aCols)][nPosCc]	:= CTJ->CTJ_CCC
		Endif
	EndIf
	
	If lItem
		If ! Empty(CTJ->CTJ_ITEMD)
			aCols[Len(aCols)][nPosItemCta]	:= CTJ->CTJ_ITEMD
		Else
			aCols[Len(aCols)][nPosItemCta]	:= CTJ->CTJ_ITEMC
		Endif
	EndIf
	
	If lClVl
		If ! Empty(CTJ->CTJ_CLVLDB)
			aCols[Len(aCols)][nPosClVl]	:= CTJ->CTJ_CLVLDB
		Else
			aCols[Len(aCols)][nPosClVl]	:= CTJ->CTJ_CLVLCR
		Endif
	EndIf
	aCols[Len(aCols)][nPosPerc] := CTJ->CTJ_PERCEN
	aCols[Len(aCols)][Len(aHeader) + 1] := .F.

	aEntidades := CtbEntArr()
	For nEnt := 1 to Len(aEntidades)
		For nDeb := 1 to 2
			cCpo := "CX_EC"+aEntidades[nEnt]
			cCTJ := "CTJ_EC"+aEntidades[nEnt]
			
			If nDeb == 1
				cCpo += "DB"
				cCTJ += "DB"
			Else
				cCpo += "CR"
				cCTJ += "CR"
			EndIf
			
			nPosHead := aScan(aHeader,{|x| AllTrim(x[2]) == Alltrim(cCpo) } )
			
			If nPosHead > 0
				aCols[Len(aCols)][nPosHead] := CTJ->(&(cCTJ))
			EndIf
			
		Next nDeb
	Next nEnt
	
EndIf

Return .T.
